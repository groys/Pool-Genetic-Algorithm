
pool:     file format elf32-i386

Disassembly of section .interp:

08048134 <.interp>:
 8048134:	2f                   	das    
 8048135:	6c                   	insb   (%dx),%es:(%edi)
 8048136:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804813d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048144:	2e 32 00             	xor    %cs:(%eax),%al
Disassembly of section .note.ABI-tag:

08048148 <.note.ABI-tag>:
 8048148:	04 00                	add    $0x0,%al
 804814a:	00 00                	add    %al,(%eax)
 804814c:	10 00                	adc    %al,(%eax)
 804814e:	00 00                	add    %al,(%eax)
 8048150:	01 00                	add    %eax,(%eax)
 8048152:	00 00                	add    %al,(%eax)
 8048154:	47                   	inc    %edi
 8048155:	4e                   	dec    %esi
 8048156:	55                   	push   %ebp
 8048157:	00 00                	add    %al,(%eax)
 8048159:	00 00                	add    %al,(%eax)
 804815b:	00 02                	add    %al,(%edx)
 804815d:	00 00                	add    %al,(%eax)
 804815f:	00 06                	add    %al,(%esi)
 8048161:	00 00                	add    %al,(%eax)
 8048163:	00 08                	add    %cl,(%eax)
 8048165:	00 00                	add    %al,(%eax)
	...
Disassembly of section .hash:

08048168 <.hash>:
 8048168:	25 00 00 00 31       	and    $0x31000000,%eax
 804816d:	00 00                	add    %al,(%eax)
 804816f:	00 13                	add    %dl,(%ebx)
 8048171:	00 00                	add    %al,(%eax)
 8048173:	00 28                	add    %ch,(%eax)
 8048175:	00 00                	add    %al,(%eax)
 8048177:	00 2c 00             	add    %ch,(%eax,%eax,1)
 804817a:	00 00                	add    %al,(%eax)
 804817c:	19 00                	sbb    %eax,(%eax)
 804817e:	00 00                	add    %al,(%eax)
 8048180:	17                   	pop    %ss
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 0d 00 00 00 25    	add    %cl,0x25000000
 8048189:	00 00                	add    %al,(%eax)
 804818b:	00 1d 00 00 00 08    	add    %bl,0x8000000
 8048191:	00 00                	add    %al,(%eax)
 8048193:	00 1f                	add    %bl,(%edi)
 8048195:	00 00                	add    %al,(%eax)
 8048197:	00 1a                	add    %bl,(%edx)
 8048199:	00 00                	add    %al,(%eax)
 804819b:	00 00                	add    %al,(%eax)
 804819d:	00 00                	add    %al,(%eax)
 804819f:	00 10                	add    %dl,(%eax)
 80481a1:	00 00                	add    %al,(%eax)
 80481a3:	00 27                	add    %ah,(%edi)
 80481a5:	00 00                	add    %al,(%eax)
 80481a7:	00 0e                	add    %cl,(%esi)
 80481a9:	00 00                	add    %al,(%eax)
 80481ab:	00 1e                	add    %bl,(%esi)
 80481ad:	00 00                	add    %al,(%eax)
 80481af:	00 2b                	add    %ch,(%ebx)
 80481b1:	00 00                	add    %al,(%eax)
 80481b3:	00 00                	add    %al,(%eax)
 80481b5:	00 00                	add    %al,(%eax)
 80481b7:	00 29                	add    %ch,(%ecx)
 80481b9:	00 00                	add    %al,(%eax)
 80481bb:	00 2a                	add    %ch,(%edx)
 80481bd:	00 00                	add    %al,(%eax)
 80481bf:	00 30                	add    %dh,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 2e                	add    %ch,(%esi)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00 1c 00             	add    %bl,(%eax,%eax,1)
 80481ca:	00 00                	add    %al,(%eax)
 80481cc:	22 00                	and    (%eax),%al
	...
 80481da:	00 00                	add    %al,(%eax)
 80481dc:	04 00                	add    $0x0,%al
 80481de:	00 00                	add    %al,(%eax)
 80481e0:	0b 00                	or     (%eax),%eax
 80481e2:	00 00                	add    %al,(%eax)
 80481e4:	2d 00 00 00 26       	sub    $0x26000000,%eax
 80481e9:	00 00                	add    %al,(%eax)
 80481eb:	00 12                	add    %dl,(%edx)
 80481ed:	00 00                	add    %al,(%eax)
 80481ef:	00 21                	add    %ah,(%ecx)
 80481f1:	00 00                	add    %al,(%eax)
 80481f3:	00 20                	add    %ah,(%eax)
 80481f5:	00 00                	add    %al,(%eax)
 80481f7:	00 00                	add    %al,(%eax)
 80481f9:	00 00                	add    %al,(%eax)
 80481fb:	00 05 00 00 00 00    	add    %al,0x0
	...
 8048219:	00 00                	add    %al,(%eax)
 804821b:	00 01                	add    %al,(%ecx)
	...
 8048231:	00 00                	add    %al,(%eax)
 8048233:	00 09                	add    %cl,(%ecx)
 8048235:	00 00                	add    %al,(%eax)
 8048237:	00 00                	add    %al,(%eax)
 8048239:	00 00                	add    %al,(%eax)
 804823b:	00 0a                	add    %cl,(%edx)
 804823d:	00 00                	add    %al,(%eax)
 804823f:	00 00                	add    %al,(%eax)
 8048241:	00 00                	add    %al,(%eax)
 8048243:	00 03                	add    %al,(%ebx)
 8048245:	00 00                	add    %al,(%eax)
 8048247:	00 0c 00             	add    %cl,(%eax,%eax,1)
	...
 8048262:	00 00                	add    %al,(%eax)
 8048264:	07                   	pop    %es
 8048265:	00 00                	add    %al,(%eax)
 8048267:	00 14 00             	add    %dl,(%eax,%eax,1)
	...
 804827a:	00 00                	add    %al,(%eax)
 804827c:	1b 00                	sbb    (%eax),%eax
 804827e:	00 00                	add    %al,(%eax)
 8048280:	15 00 00 00 00       	adc    $0x0,%eax
 8048285:	00 00                	add    %al,(%eax)
 8048287:	00 2f                	add    %ch,(%edi)
	...
 8048295:	00 00                	add    %al,(%eax)
 8048297:	00 23                	add    %ah,(%ebx)
 8048299:	00 00                	add    %al,(%eax)
 804829b:	00 24 00             	add    %ah,(%eax,%eax,1)
 804829e:	00 00                	add    %al,(%eax)
 80482a0:	16                   	push   %ss
 80482a1:	00 00                	add    %al,(%eax)
 80482a3:	00 11                	add    %dl,(%ecx)
	...
 80482ad:	00 00                	add    %al,(%eax)
 80482af:	00 06                	add    %al,(%esi)
 80482b1:	00 00                	add    %al,(%eax)
 80482b3:	00 18                	add    %bl,(%eax)
 80482b5:	00 00                	add    %al,(%eax)
 80482b7:	00 0f                	add    %cl,(%edi)
 80482b9:	00 00                	add    %al,(%eax)
 80482bb:	00 02                	add    %al,(%edx)
	...
Disassembly of section .gnu.hash:

080482c8 <.gnu.hash>:
 80482c8:	03 00                	add    (%eax),%eax
 80482ca:	00 00                	add    %al,(%eax)
 80482cc:	2e 00 00             	add    %al,%cs:(%eax)
 80482cf:	00 01                	add    %al,(%ecx)
 80482d1:	00 00                	add    %al,(%eax)
 80482d3:	00 05 00 00 00 01    	add    %al,0x1000000
 80482d9:	28 10                	sub    %dl,(%eax)
 80482db:	21 00                	and    %eax,(%eax)
 80482dd:	00 00                	add    %al,(%eax)
 80482df:	00 2e                	add    %ch,(%esi)
 80482e1:	00 00                	add    %al,(%eax)
 80482e3:	00 2f                	add    %ch,(%edi)
 80482e5:	00 00                	add    %al,(%eax)
 80482e7:	00 ad 4b e3 c0 14    	add    %ch,0x14c0e34b(%ebp)
 80482ed:	98                   	cwtl   
 80482ee:	0c 43                	or     $0x43,%al
 80482f0:	79 49                	jns    804833b <_init-0x865>
 80482f2:	6b                   	.byte 0x6b
 80482f3:	b6                   	.byte 0xb6
Disassembly of section .dynsym:

080482f4 <.dynsym>:
	...
 8048304:	66                   	data16
 8048305:	00 00                	add    %al,(%eax)
 8048307:	00 00                	add    %al,(%eax)
 8048309:	00 00                	add    %al,(%eax)
 804830b:	00 2a                	add    %ch,(%edx)
 804830d:	00 00                	add    %al,(%eax)
 804830f:	00 12                	add    %dl,(%edx)
 8048311:	00 00                	add    %al,(%eax)
 8048313:	00 94 01 00 00 00 00 	add    %dl,0x0(%ecx,%eax,1)
 804831a:	00 00                	add    %al,(%eax)
 804831c:	6c                   	insb   (%dx),%es:(%edi)
 804831d:	01 00                	add    %eax,(%eax)
 804831f:	00 12                	add    %dl,(%edx)
 8048321:	00 00                	add    %al,(%eax)
 8048323:	00 66 02             	add    %ah,0x2(%esi)
 8048326:	00 00                	add    %al,(%eax)
 8048328:	00 00                	add    %al,(%eax)
 804832a:	00 00                	add    %al,(%eax)
 804832c:	57                   	push   %edi
 804832d:	00 00                	add    %al,(%eax)
 804832f:	00 12                	add    %dl,(%edx)
 8048331:	00 00                	add    %al,(%eax)
 8048333:	00 b0 01 00 00 00    	add    %dh,0x1(%eax)
 8048339:	00 00                	add    %al,(%eax)
 804833b:	00 27                	add    %ah,(%edi)
 804833d:	00 00                	add    %al,(%eax)
 804833f:	00 12                	add    %dl,(%edx)
 8048341:	00 00                	add    %al,(%eax)
 8048343:	00 73 02             	add    %dh,0x2(%ebx)
 8048346:	00 00                	add    %al,(%eax)
 8048348:	00 00                	add    %al,(%eax)
 804834a:	00 00                	add    %al,(%eax)
 804834c:	f2 00 00             	repnz add %al,(%eax)
 804834f:	00 12                	add    %dl,(%edx)
 8048351:	00 00                	add    %al,(%eax)
 8048353:	00 0a                	add    %cl,(%edx)
 8048355:	02 00                	add    (%eax),%al
 8048357:	00 00                	add    %al,(%eax)
 8048359:	00 00                	add    %al,(%eax)
 804835b:	00 20                	add    %ah,(%eax)
 804835d:	00 00                	add    %al,(%eax)
 804835f:	00 12                	add    %dl,(%edx)
 8048361:	00 00                	add    %al,(%eax)
 8048363:	00 49 01             	add    %cl,0x1(%ecx)
 8048366:	00 00                	add    %al,(%eax)
 8048368:	00 00                	add    %al,(%eax)
 804836a:	00 00                	add    %al,(%eax)
 804836c:	66                   	data16
 804836d:	00 00                	add    %al,(%eax)
 804836f:	00 12                	add    %dl,(%edx)
 8048371:	00 00                	add    %al,(%eax)
 8048373:	00 10                	add    %dl,(%eax)
	...
 804837d:	00 00                	add    %al,(%eax)
 804837f:	00 20                	add    %ah,(%eax)
 8048381:	00 00                	add    %al,(%eax)
 8048383:	00 1f                	add    %bl,(%edi)
	...
 804838d:	00 00                	add    %al,(%eax)
 804838f:	00 20                	add    %ah,(%eax)
 8048391:	00 00                	add    %al,(%eax)
 8048393:	00 33                	add    %dh,(%ebx)
 8048395:	00 00                	add    %al,(%eax)
 8048397:	00 00                	add    %al,(%eax)
 8048399:	00 00                	add    %al,(%eax)
 804839b:	00 0d 00 00 00 12    	add    %cl,0x12000000
 80483a1:	00 00                	add    %al,(%eax)
 80483a3:	00 5e 02             	add    %bl,0x2(%esi)
 80483a6:	00 00                	add    %al,(%eax)
 80483a8:	00 00                	add    %al,(%eax)
 80483aa:	00 00                	add    %al,(%eax)
 80483ac:	01 01                	add    %eax,(%ecx)
 80483ae:	00 00                	add    %al,(%eax)
 80483b0:	12 00                	adc    (%eax),%al
 80483b2:	00 00                	add    %al,(%eax)
 80483b4:	a8 00                	test   $0x0,%al
 80483b6:	00 00                	add    %al,(%eax)
 80483b8:	00 00                	add    %al,(%eax)
 80483ba:	00 00                	add    %al,(%eax)
 80483bc:	a2 07 00 00 12       	mov    %al,0x12000007
 80483c1:	00 00                	add    %al,(%eax)
 80483c3:	00 3d 01 00 00 00    	add    %bh,0x1
 80483c9:	00 00                	add    %al,(%eax)
 80483cb:	00 c7                	add    %al,%bh
 80483cd:	01 00                	add    %eax,(%eax)
 80483cf:	00 12                	add    %dl,(%edx)
 80483d1:	00 00                	add    %al,(%eax)
 80483d3:	00 a8 02 00 00 00    	add    %ch,0x2(%eax)
 80483d9:	00 00                	add    %al,(%eax)
 80483db:	00 b2 01 00 00 12    	add    %dh,0x12000001(%edx)
 80483e1:	00 00                	add    %al,(%eax)
 80483e3:	00 c0                	add    %al,%al
 80483e5:	00 00                	add    %al,(%eax)
 80483e7:	00 00                	add    %al,(%eax)
 80483e9:	00 00                	add    %al,(%eax)
 80483eb:	00 38                	add    %bh,(%eax)
 80483ed:	00 00                	add    %al,(%eax)
 80483ef:	00 12                	add    %dl,(%edx)
 80483f1:	00 00                	add    %al,(%eax)
 80483f3:	00 f6                	add    %dh,%dh
 80483f5:	00 00                	add    %al,(%eax)
 80483f7:	00 00                	add    %al,(%eax)
 80483f9:	00 00                	add    %al,(%eax)
 80483fb:	00 bc 00 00 00 12 00 	add    %bh,0x120000(%eax,%eax,1)
 8048402:	00 00                	add    %al,(%eax)
 8048404:	70 00                	jo     8048406 <_init-0x79a>
 8048406:	00 00                	add    %al,(%eax)
 8048408:	00 00                	add    %al,(%eax)
 804840a:	00 00                	add    %al,(%eax)
 804840c:	6b 00 00             	imul   $0x0,(%eax),%eax
 804840f:	00 12                	add    %dl,(%edx)
 8048411:	00 00                	add    %al,(%eax)
 8048413:	00 ba 02 00 00 00    	add    %bh,0x2(%edx)
 8048419:	00 00                	add    %al,(%eax)
 804841b:	00 e3                	add    %ah,%bl
 804841d:	00 00                	add    %al,(%eax)
 804841f:	00 12                	add    %dl,(%edx)
 8048421:	00 00                	add    %al,(%eax)
 8048423:	00 a2 02 00 00 00    	add    %ah,0x2(%edx)
 8048429:	00 00                	add    %al,(%eax)
 804842b:	00 41 00             	add    %al,0x0(%ecx)
 804842e:	00 00                	add    %al,(%eax)
 8048430:	12 00                	adc    (%eax),%al
 8048432:	00 00                	add    %al,(%eax)
 8048434:	38 01                	cmp    %al,(%ecx)
 8048436:	00 00                	add    %al,(%eax)
 8048438:	00 00                	add    %al,(%eax)
 804843a:	00 00                	add    %al,(%eax)
 804843c:	66                   	data16
 804843d:	00 00                	add    %al,(%eax)
 804843f:	00 12                	add    %dl,(%edx)
 8048441:	00 00                	add    %al,(%eax)
 8048443:	00 7f 01             	add    %bh,0x1(%edi)
 8048446:	00 00                	add    %al,(%eax)
 8048448:	00 00                	add    %al,(%eax)
 804844a:	00 00                	add    %al,(%eax)
 804844c:	11 00                	adc    %eax,(%eax)
 804844e:	00 00                	add    %al,(%eax)
 8048450:	12 00                	adc    (%eax),%al
 8048452:	00 00                	add    %al,(%eax)
 8048454:	6d                   	insl   (%dx),%es:(%edi)
 8048455:	01 00                	add    %eax,(%eax)
 8048457:	00 00                	add    %al,(%eax)
 8048459:	00 00                	add    %al,(%eax)
 804845b:	00 44 00 00          	add    %al,0x0(%eax,%eax,1)
 804845f:	00 12                	add    %dl,(%edx)
 8048461:	00 00                	add    %al,(%eax)
 8048463:	00 41 00             	add    %al,0x0(%ecx)
 8048466:	00 00                	add    %al,(%eax)
 8048468:	00 00                	add    %al,(%eax)
 804846a:	00 00                	add    %al,(%eax)
 804846c:	0d 00 00 00 12       	or     $0x12000000,%eax
 8048471:	00 00                	add    %al,(%eax)
 8048473:	00 7b 02             	add    %bh,0x2(%ebx)
 8048476:	00 00                	add    %al,(%eax)
 8048478:	00 00                	add    %al,(%eax)
 804847a:	00 00                	add    %al,(%eax)
 804847c:	46                   	inc    %esi
 804847d:	00 00                	add    %al,(%eax)
 804847f:	00 12                	add    %dl,(%edx)
 8048481:	00 00                	add    %al,(%eax)
 8048483:	00 41 01             	add    %al,0x1(%ecx)
 8048486:	00 00                	add    %al,(%eax)
 8048488:	00 00                	add    %al,(%eax)
 804848a:	00 00                	add    %al,(%eax)
 804848c:	26 00 00             	add    %al,%es:(%eax)
 804848f:	00 12                	add    %dl,(%edx)
 8048491:	00 00                	add    %al,(%eax)
 8048493:	00 f4                	add    %dh,%ah
 8048495:	01 00                	add    %eax,(%eax)
 8048497:	00 00                	add    %al,(%eax)
 8048499:	00 00                	add    %al,(%eax)
 804849b:	00 23                	add    %ah,(%ebx)
 804849d:	00 00                	add    %al,(%eax)
 804849f:	00 12                	add    %dl,(%edx)
 80484a1:	00 00                	add    %al,(%eax)
 80484a3:	00 9b 02 00 00 00    	add    %bl,0x2(%ebx)
 80484a9:	00 00                	add    %al,(%eax)
 80484ab:	00 39                	add    %bh,(%ecx)
 80484ad:	00 00                	add    %al,(%eax)
 80484af:	00 12                	add    %dl,(%edx)
 80484b1:	00 00                	add    %al,(%eax)
 80484b3:	00 95 02 00 00 00    	add    %dl,0x2(%ebp)
 80484b9:	00 00                	add    %al,(%eax)
 80484bb:	00 23                	add    %ah,(%ebx)
 80484bd:	00 00                	add    %al,(%eax)
 80484bf:	00 12                	add    %dl,(%edx)
 80484c1:	00 00                	add    %al,(%eax)
 80484c3:	00 17                	add    %dl,(%edi)
 80484c5:	02 00                	add    (%eax),%al
 80484c7:	00 00                	add    %al,(%eax)
 80484c9:	00 00                	add    %al,(%eax)
 80484cb:	00 cd                	add    %cl,%ch
 80484cd:	01 00                	add    %eax,(%eax)
 80484cf:	00 12                	add    %dl,(%edx)
 80484d1:	00 00                	add    %al,(%eax)
 80484d3:	00 8e 02 00 00 00    	add    %cl,0x2(%esi)
 80484d9:	00 00                	add    %al,(%eax)
 80484db:	00 59 01             	add    %bl,0x1(%ecx)
 80484de:	00 00                	add    %al,(%eax)
 80484e0:	12 00                	adc    (%eax),%al
 80484e2:	00 00                	add    %al,(%eax)
 80484e4:	56                   	push   %esi
 80484e5:	00 00                	add    %al,(%eax)
 80484e7:	00 00                	add    %al,(%eax)
 80484e9:	00 00                	add    %al,(%eax)
 80484eb:	00 38                	add    %bh,(%eax)
 80484ed:	00 00                	add    %al,(%eax)
 80484ef:	00 12                	add    %dl,(%edx)
 80484f1:	00 00                	add    %al,(%eax)
 80484f3:	00 9a 02 00 00 00    	add    %bl,0x2(%edx)
 80484f9:	00 00                	add    %al,(%eax)
 80484fb:	00 24 00             	add    %ah,(%eax,%eax,1)
 80484fe:	00 00                	add    %al,(%eax)
 8048500:	12 00                	adc    (%eax),%al
 8048502:	00 00                	add    %al,(%eax)
 8048504:	48                   	dec    %eax
 8048505:	02 00                	add    (%eax),%al
 8048507:	00 00                	add    %al,(%eax)
 8048509:	00 00                	add    %al,(%eax)
 804850b:	00 1b                	add    %bl,(%ebx)
 804850d:	00 00                	add    %al,(%eax)
 804850f:	00 12                	add    %dl,(%edx)
 8048511:	00 00                	add    %al,(%eax)
 8048513:	00 87 02 00 00 00    	add    %al,0x2(%edi)
 8048519:	00 00                	add    %al,(%eax)
 804851b:	00 7c 01 00          	add    %bh,0x0(%ecx,%eax,1)
 804851f:	00 12                	add    %dl,(%edx)
 8048521:	00 00                	add    %al,(%eax)
 8048523:	00 e1                	add    %ah,%cl
 8048525:	01 00                	add    %eax,(%eax)
 8048527:	00 00                	add    %al,(%eax)
 8048529:	00 00                	add    %al,(%eax)
 804852b:	00 6f 06             	add    %ch,0x6(%edi)
 804852e:	00 00                	add    %al,(%eax)
 8048530:	12 00                	adc    (%eax),%al
 8048532:	00 00                	add    %al,(%eax)
 8048534:	4d                   	dec    %ebp
 8048535:	02 00                	add    (%eax),%al
 8048537:	00 00                	add    %al,(%eax)
 8048539:	00 00                	add    %al,(%eax)
 804853b:	00 20                	add    %ah,(%eax)
 804853d:	00 00                	add    %al,(%eax)
 804853f:	00 12                	add    %dl,(%edx)
 8048541:	00 00                	add    %al,(%eax)
 8048543:	00 a1 01 00 00 00    	add    %ah,0x1(%ecx)
 8048549:	00 00                	add    %al,(%eax)
 804854b:	00 b8 09 00 00 12    	add    %bh,0x12000009(%eax)
 8048551:	00 00                	add    %al,(%eax)
 8048553:	00 23                	add    %ah,(%ebx)
 8048555:	01 00                	add    %eax,(%eax)
 8048557:	00 00                	add    %al,(%eax)
 8048559:	00 00                	add    %al,(%eax)
 804855b:	00 23                	add    %ah,(%ebx)
 804855d:	00 00                	add    %al,(%eax)
 804855f:	00 12                	add    %dl,(%edx)
 8048561:	00 00                	add    %al,(%eax)
 8048563:	00 5c 00 00          	add    %bl,0x0(%eax,%eax,1)
 8048567:	00 00                	add    %al,(%eax)
 8048569:	00 00                	add    %al,(%eax)
 804856b:	00 2a                	add    %ch,(%edx)
 804856d:	00 00                	add    %al,(%eax)
 804856f:	00 12                	add    %dl,(%edx)
 8048571:	00 00                	add    %al,(%eax)
 8048573:	00 45 01             	add    %al,0x1(%ebp)
 8048576:	00 00                	add    %al,(%eax)
 8048578:	00 00                	add    %al,(%eax)
 804857a:	00 00                	add    %al,(%eax)
 804857c:	a0 00 00 00 12       	mov    0x12000000,%al
 8048581:	00 00                	add    %al,(%eax)
 8048583:	00 43 02             	add    %al,0x2(%ebx)
 8048586:	00 00                	add    %al,(%eax)
 8048588:	00 00                	add    %al,(%eax)
 804858a:	00 00                	add    %al,(%eax)
 804858c:	8f 01                	popl   (%ecx)
 804858e:	00 00                	add    %al,(%eax)
 8048590:	12 00                	adc    (%eax),%al
 8048592:	00 00                	add    %al,(%eax)
 8048594:	82                   	(bad)  
 8048595:	02 00                	add    (%eax),%al
 8048597:	00 00                	add    %al,(%eax)
 8048599:	00 00                	add    %al,(%eax)
 804859b:	00 17                	add    %dl,(%edi)
 804859d:	00 00                	add    %al,(%eax)
 804859f:	00 12                	add    %dl,(%edx)
 80485a1:	00 00                	add    %al,(%eax)
 80485a3:	00 cc                	add    %cl,%ah
 80485a5:	01 00                	add    %eax,(%eax)
 80485a7:	00 00                	add    %al,(%eax)
 80485a9:	00 00                	add    %al,(%eax)
 80485ab:	00 2e                	add    %ch,(%esi)
 80485ad:	00 00                	add    %al,(%eax)
 80485af:	00 12                	add    %dl,(%edx)
 80485b1:	00 00                	add    %al,(%eax)
 80485b3:	00 34 01             	add    %dh,(%ecx,%eax,1)
 80485b6:	00 00                	add    %al,(%eax)
 80485b8:	00 00                	add    %al,(%eax)
 80485ba:	00 00                	add    %al,(%eax)
 80485bc:	26 00 00             	add    %al,%es:(%eax)
 80485bf:	00 12                	add    %dl,(%edx)
 80485c1:	00 00                	add    %al,(%eax)
 80485c3:	00 12                	add    %dl,(%edx)
 80485c5:	02 00                	add    (%eax),%al
 80485c7:	00 00                	add    %al,(%eax)
 80485c9:	00 00                	add    %al,(%eax)
 80485cb:	00 fa                	add    %bh,%dl
 80485cd:	00 00                	add    %al,(%eax)
 80485cf:	00 12                	add    %dl,(%edx)
 80485d1:	00 00                	add    %al,(%eax)
 80485d3:	00 34 02             	add    %dh,(%edx,%eax,1)
 80485d6:	00 00                	add    %al,(%eax)
 80485d8:	2c e8                	sub    $0xe8,%al
 80485da:	04 08                	add    $0x8,%al
 80485dc:	04 00                	add    $0x0,%al
 80485de:	00 00                	add    %al,(%eax)
 80485e0:	11 00                	adc    %eax,(%eax)
 80485e2:	0f 00 4c 00 00       	str    0x0(%eax,%eax,1)
 80485e7:	00 e0                	add    %ah,%al
 80485e9:	03 05 08 8c 00 00    	add    0x8c08,%eax
 80485ef:	00 11                	add    %dl,(%ecx)
 80485f1:	00 19                	add    %bl,(%ecx)
 80485f3:	00 0e                	add    %cl,(%esi)
 80485f5:	01 00                	add    %eax,(%eax)
 80485f7:	00 80 8e 04 08 18    	add    %al,0x1808048e(%eax)
 80485fd:	04 00                	add    $0x0,%al
 80485ff:	00 12                	add    %dl,(%edx)
 8048601:	00 00                	add    %al,(%eax)
	...
Disassembly of section .dynstr:

08048604 <.dynstr>:
 8048604:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048608:	73 74                	jae    804867e <_init-0x522>
 804860a:	64 63 2b             	arpl   %bp,%fs:(%ebx)
 804860d:	2b 2e                	sub    (%esi),%ebp
 804860f:	73 6f                	jae    8048680 <_init-0x520>
 8048611:	2e 36 00 5f 5f       	add    %bl,%cs:%ss:0x5f(%edi)
 8048616:	67 6d                	addr16 insl (%dx),%es:(%di)
 8048618:	6f                   	outsl  %ds:(%esi),(%dx)
 8048619:	6e                   	outsb  %ds:(%esi),(%dx)
 804861a:	5f                   	pop    %edi
 804861b:	73 74                	jae    8048691 <_init-0x50f>
 804861d:	61                   	popa   
 804861e:	72 74                	jb     8048694 <_init-0x50c>
 8048620:	5f                   	pop    %edi
 8048621:	5f                   	pop    %edi
 8048622:	00 5f 4a             	add    %bl,0x4a(%edi)
 8048625:	76 5f                	jbe    8048686 <_init-0x51a>
 8048627:	52                   	push   %edx
 8048628:	65 67 69 73 74 65 72 	addr16 imul $0x6c437265,%gs:0x74(%bp,%di),%esi
 804862f:	43 6c 
 8048631:	61                   	popa   
 8048632:	73 73                	jae    80486a7 <_init-0x4f9>
 8048634:	65                   	gs
 8048635:	73 00                	jae    8048637 <_init-0x569>
 8048637:	5f                   	pop    %edi
 8048638:	5a                   	pop    %edx
 8048639:	4e                   	dec    %esi
 804863a:	4b                   	dec    %ebx
 804863b:	53                   	push   %ebx
 804863c:	73 34                	jae    8048672 <_init-0x52e>
 804863e:	73 69                	jae    80486a9 <_init-0x4f7>
 8048640:	7a 65                	jp     80486a7 <_init-0x4f9>
 8048642:	45                   	inc    %ebp
 8048643:	76 00                	jbe    8048645 <_init-0x55b>
 8048645:	5f                   	pop    %edi
 8048646:	5a                   	pop    %edx
 8048647:	4e                   	dec    %esi
 8048648:	4b                   	dec    %ebx
 8048649:	53                   	push   %ebx
 804864a:	73 69                	jae    80486b5 <_init-0x4eb>
 804864c:	78 45                	js     8048693 <_init-0x50d>
 804864e:	6a 00                	push   $0x0
 8048650:	5f                   	pop    %edi
 8048651:	5a                   	pop    %edx
 8048652:	53                   	push   %ebx
 8048653:	74 34                	je     8048689 <_init-0x517>
 8048655:	63 6f 75             	arpl   %bp,0x75(%edi)
 8048658:	74 00                	je     804865a <_init-0x546>
 804865a:	5f                   	pop    %edi
 804865b:	5a                   	pop    %edx
 804865c:	6e                   	outsb  %ds:(%esi),(%dx)
 804865d:	61                   	popa   
 804865e:	6a 00                	push   $0x0
 8048660:	5f                   	pop    %edi
 8048661:	5a                   	pop    %edx
 8048662:	4e                   	dec    %esi
 8048663:	53                   	push   %ebx
 8048664:	6f                   	outsl  %ds:(%esi),(%dx)
 8048665:	6c                   	insb   (%dx),%es:(%edi)
 8048666:	73 45                	jae    80486ad <_init-0x4f3>
 8048668:	66                   	data16
 8048669:	00 5f 5a             	add    %bl,0x5a(%edi)
 804866c:	4e                   	dec    %esi
 804866d:	53                   	push   %ebx
 804866e:	6f                   	outsl  %ds:(%esi),(%dx)
 804866f:	6c                   	insb   (%dx),%es:(%edi)
 8048670:	73 45                	jae    80486b7 <_init-0x4e9>
 8048672:	69 00 5f 5a 53 74    	imul   $0x74535a5f,(%eax),%eax
 8048678:	6c                   	insb   (%dx),%es:(%edi)
 8048679:	73 49                	jae    80486c4 <_init-0x4dc>
 804867b:	53                   	push   %ebx
 804867c:	74 31                	je     80486af <_init-0x4f1>
 804867e:	31 63 68             	xor    %esp,0x68(%ebx)
 8048681:	61                   	popa   
 8048682:	72 5f                	jb     80486e3 <_init-0x4bd>
 8048684:	74 72                	je     80486f8 <_init-0x4a8>
 8048686:	61                   	popa   
 8048687:	69 74 73 49 63 45 45 	imul   $0x52454563,0x49(%ebx,%esi,2),%esi
 804868e:	52 
 804868f:	53                   	push   %ebx
 8048690:	74 31                	je     80486c3 <_init-0x4dd>
 8048692:	33 62 61             	xor    0x61(%edx),%esp
 8048695:	73 69                	jae    8048700 <_init-0x4a0>
 8048697:	63 5f 6f             	arpl   %bx,0x6f(%edi)
 804869a:	73 74                	jae    8048710 <_init-0x490>
 804869c:	72 65                	jb     8048703 <_init-0x49d>
 804869e:	61                   	popa   
 804869f:	6d                   	insl   (%dx),%es:(%edi)
 80486a0:	49                   	dec    %ecx
 80486a1:	63 54 5f 45          	arpl   %dx,0x45(%edi,%ebx,2)
 80486a5:	53                   	push   %ebx
 80486a6:	35 5f 50 4b 63       	xor    $0x634b505f,%eax
 80486ab:	00 5f 5a             	add    %bl,0x5a(%edi)
 80486ae:	4e                   	dec    %esi
 80486af:	53                   	push   %ebx
 80486b0:	74 38                	je     80486ea <_init-0x4b6>
 80486b2:	69 6f 73 5f 62 61 73 	imul   $0x7361625f,0x73(%edi),%ebp
 80486b9:	65                   	gs
 80486ba:	34 49                	xor    $0x49,%al
 80486bc:	6e                   	outsb  %ds:(%esi),(%dx)
 80486bd:	69 74 43 31 45 76 00 	imul   $0x5f007645,0x31(%ebx,%eax,2),%esi
 80486c4:	5f 
 80486c5:	5a                   	pop    %edx
 80486c6:	53                   	push   %ebx
 80486c7:	74 6c                	je     8048735 <_init-0x46b>
 80486c9:	73 49                	jae    8048714 <_init-0x48c>
 80486cb:	53                   	push   %ebx
 80486cc:	74 31                	je     80486ff <_init-0x4a1>
 80486ce:	31 63 68             	xor    %esp,0x68(%ebx)
 80486d1:	61                   	popa   
 80486d2:	72 5f                	jb     8048733 <_init-0x46d>
 80486d4:	74 72                	je     8048748 <_init-0x458>
 80486d6:	61                   	popa   
 80486d7:	69 74 73 49 63 45 45 	imul   $0x52454563,0x49(%ebx,%esi,2),%esi
 80486de:	52 
 80486df:	53                   	push   %ebx
 80486e0:	74 31                	je     8048713 <_init-0x48d>
 80486e2:	33 62 61             	xor    0x61(%edx),%esp
 80486e5:	73 69                	jae    8048750 <_init-0x450>
 80486e7:	63 5f 6f             	arpl   %bx,0x6f(%edi)
 80486ea:	73 74                	jae    8048760 <_init-0x440>
 80486ec:	72 65                	jb     8048753 <_init-0x44d>
 80486ee:	61                   	popa   
 80486ef:	6d                   	insl   (%dx),%es:(%edi)
 80486f0:	49                   	dec    %ecx
 80486f1:	63 54 5f 45          	arpl   %dx,0x45(%edi,%ebx,2)
 80486f5:	53                   	push   %ebx
 80486f6:	35 5f 63 00 5f       	xor    $0x5f00635f,%eax
 80486fb:	5a                   	pop    %edx
 80486fc:	4e                   	dec    %esi
 80486fd:	53                   	push   %ebx
 80486fe:	74 38                	je     8048738 <_init-0x468>
 8048700:	69 6f 73 5f 62 61 73 	imul   $0x7361625f,0x73(%edi),%ebp
 8048707:	65                   	gs
 8048708:	34 49                	xor    $0x49,%al
 804870a:	6e                   	outsb  %ds:(%esi),(%dx)
 804870b:	69 74 44 31 45 76 00 	imul   $0x5f007645,0x31(%esp,%eax,2),%esi
 8048712:	5f 
 8048713:	5f                   	pop    %edi
 8048714:	67 78 78             	addr16 js 804878f <_init-0x411>
 8048717:	5f                   	pop    %edi
 8048718:	70 65                	jo     804877f <_init-0x421>
 804871a:	72 73                	jb     804878f <_init-0x411>
 804871c:	6f                   	outsl  %ds:(%esi),(%dx)
 804871d:	6e                   	outsb  %ds:(%esi),(%dx)
 804871e:	61                   	popa   
 804871f:	6c                   	insb   (%dx),%es:(%edi)
 8048720:	69 74 79 5f 76 30 00 	imul   $0x5f003076,0x5f(%ecx,%edi,2),%esi
 8048727:	5f 
 8048728:	5a                   	pop    %edx
 8048729:	64                   	fs
 804872a:	61                   	popa   
 804872b:	50                   	push   %eax
 804872c:	76 00                	jbe    804872e <_init-0x472>
 804872e:	6c                   	insb   (%dx),%es:(%edi)
 804872f:	69 62 6d 2e 73 6f 2e 	imul   $0x2e6f732e,0x6d(%edx),%esp
 8048736:	36 00 73 69          	add    %dh,%ss:0x69(%ebx)
 804873a:	6e                   	outsb  %ds:(%esi),(%dx)
 804873b:	00 73 71             	add    %dh,0x71(%ebx)
 804873e:	72 74                	jb     80487b4 <_init-0x3ec>
 8048740:	00 70 6f             	add    %dh,0x6f(%eax)
 8048743:	77 00                	ja     8048745 <_init-0x45b>
 8048745:	63 6f 73             	arpl   %bp,0x73(%edi)
 8048748:	00 6c 6f 67          	add    %ch,0x67(%edi,%ebp,2)
 804874c:	00 73 71             	add    %dh,0x71(%ebx)
 804874f:	72 74                	jb     80487c5 <_init-0x3db>
 8048751:	66                   	data16
 8048752:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048756:	67 63 63 5f          	addr16 arpl %sp,0x5f(%bp,%di)
 804875a:	73 2e                	jae    804878a <_init-0x416>
 804875c:	73 6f                	jae    80487cd <_init-0x3d3>
 804875e:	2e 31 00             	xor    %eax,%cs:(%eax)
 8048761:	6c                   	insb   (%dx),%es:(%edi)
 8048762:	69 62 70 74 68 72 65 	imul   $0x65726874,0x70(%edx),%esp
 8048769:	61                   	popa   
 804876a:	64                   	fs
 804876b:	2e 73 6f             	jae,pn 80487dd <_init-0x3c3>
 804876e:	2e 30 00             	xor    %al,%cs:(%eax)
 8048771:	70 74                	jo     80487e7 <_init-0x3b9>
 8048773:	68 72 65 61 64       	push   $0x64616572
 8048778:	5f                   	pop    %edi
 8048779:	61                   	popa   
 804877a:	74 74                	je     80487f0 <_init-0x3b0>
 804877c:	72 5f                	jb     80487dd <_init-0x3c3>
 804877e:	69 6e 69 74 00 70 74 	imul   $0x74700074,0x69(%esi),%ebp
 8048785:	68 72 65 61 64       	push   $0x64616572
 804878a:	5f                   	pop    %edi
 804878b:	6d                   	insl   (%dx),%es:(%edi)
 804878c:	75 74                	jne    8048802 <_init-0x39e>
 804878e:	65                   	gs
 804878f:	78 5f                	js     80487f0 <_init-0x3b0>
 8048791:	75 6e                	jne    8048801 <_init-0x39f>
 8048793:	6c                   	insb   (%dx),%es:(%edi)
 8048794:	6f                   	outsl  %ds:(%esi),(%dx)
 8048795:	63 6b 00             	arpl   %bp,0x0(%ebx)
 8048798:	70 74                	jo     804880e <_init-0x392>
 804879a:	68 72 65 61 64       	push   $0x64616572
 804879f:	5f                   	pop    %edi
 80487a0:	6a 6f                	push   $0x6f
 80487a2:	69 6e 00 70 74 68 72 	imul   $0x72687470,0x0(%esi),%ebp
 80487a9:	65                   	gs
 80487aa:	61                   	popa   
 80487ab:	64                   	fs
 80487ac:	5f                   	pop    %edi
 80487ad:	63 72 65             	arpl   %si,0x65(%edx)
 80487b0:	61                   	popa   
 80487b1:	74 65                	je     8048818 <_init-0x388>
 80487b3:	00 70 74             	add    %dh,0x74(%eax)
 80487b6:	68 72 65 61 64       	push   $0x64616572
 80487bb:	5f                   	pop    %edi
 80487bc:	61                   	popa   
 80487bd:	74 74                	je     8048833 <_init-0x36d>
 80487bf:	72 5f                	jb     8048820 <_init-0x380>
 80487c1:	73 65                	jae    8048828 <_init-0x378>
 80487c3:	74 64                	je     8048829 <_init-0x377>
 80487c5:	65                   	gs
 80487c6:	74 61                	je     8048829 <_init-0x377>
 80487c8:	63 68 73             	arpl   %bp,0x73(%eax)
 80487cb:	74 61                	je     804882e <_init-0x372>
 80487cd:	74 65                	je     8048834 <_init-0x36c>
 80487cf:	00 70 74             	add    %dh,0x74(%eax)
 80487d2:	68 72 65 61 64       	push   $0x64616572
 80487d7:	5f                   	pop    %edi
 80487d8:	61                   	popa   
 80487d9:	74 74                	je     804884f <_init-0x351>
 80487db:	72 5f                	jb     804883c <_init-0x364>
 80487dd:	64                   	fs
 80487de:	65                   	gs
 80487df:	73 74                	jae    8048855 <_init-0x34b>
 80487e1:	72 6f                	jb     8048852 <_init-0x34e>
 80487e3:	79 00                	jns    80487e5 <_init-0x3bb>
 80487e5:	70 74                	jo     804885b <_init-0x345>
 80487e7:	68 72 65 61 64       	push   $0x64616572
 80487ec:	5f                   	pop    %edi
 80487ed:	6d                   	insl   (%dx),%es:(%edi)
 80487ee:	75 74                	jne    8048864 <_init-0x33c>
 80487f0:	65                   	gs
 80487f1:	78 5f                	js     8048852 <_init-0x34e>
 80487f3:	6c                   	insb   (%dx),%es:(%edi)
 80487f4:	6f                   	outsl  %ds:(%esi),(%dx)
 80487f5:	63 6b 00             	arpl   %bp,0x0(%ebx)
 80487f8:	70 74                	jo     804886e <_init-0x332>
 80487fa:	68 72 65 61 64       	push   $0x64616572
 80487ff:	5f                   	pop    %edi
 8048800:	6d                   	insl   (%dx),%es:(%edi)
 8048801:	75 74                	jne    8048877 <_init-0x329>
 8048803:	65                   	gs
 8048804:	78 5f                	js     8048865 <_init-0x33b>
 8048806:	64                   	fs
 8048807:	65                   	gs
 8048808:	73 74                	jae    804887e <_init-0x322>
 804880a:	72 6f                	jb     804887b <_init-0x325>
 804880c:	79 00                	jns    804880e <_init-0x392>
 804880e:	70 74                	jo     8048884 <_init-0x31c>
 8048810:	68 72 65 61 64       	push   $0x64616572
 8048815:	5f                   	pop    %edi
 8048816:	65                   	gs
 8048817:	78 69                	js     8048882 <_init-0x31e>
 8048819:	74 00                	je     804881b <_init-0x385>
 804881b:	70 74                	jo     8048891 <_init-0x30f>
 804881d:	68 72 65 61 64       	push   $0x64616572
 8048822:	5f                   	pop    %edi
 8048823:	6d                   	insl   (%dx),%es:(%edi)
 8048824:	75 74                	jne    804889a <_init-0x306>
 8048826:	65                   	gs
 8048827:	78 5f                	js     8048888 <_init-0x318>
 8048829:	69 6e 69 74 00 6c 69 	imul   $0x696c0074,0x69(%esi),%ebp
 8048830:	62 63 2e             	bound  %esp,0x2e(%ebx)
 8048833:	73 6f                	jae    80488a4 <_init-0x2fc>
 8048835:	2e 36 00 5f 49       	add    %bl,%cs:%ss:0x49(%edi)
 804883a:	4f                   	dec    %edi
 804883b:	5f                   	pop    %edi
 804883c:	73 74                	jae    80488b2 <_init-0x2ee>
 804883e:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048845:	64 
 8048846:	00 70 75             	add    %dh,0x75(%eax)
 8048849:	74 73                	je     80488be <_init-0x2e2>
 804884b:	00 74 69 6d          	add    %dh,0x6d(%ecx,%ebp,2)
 804884f:	65 00 5f 5f          	add    %bl,%gs:0x5f(%edi)
 8048853:	73 74                	jae    80488c9 <_init-0x2d7>
 8048855:	61                   	popa   
 8048856:	63 6b 5f             	arpl   %bp,0x5f(%ebx)
 8048859:	63 68 6b             	arpl   %bp,0x6b(%eax)
 804885c:	5f                   	pop    %edi
 804885d:	66 61                	popaw  
 804885f:	69 6c 00 70 75 74 63 	imul   $0x68637475,0x70(%eax,%eax,1),%ebp
 8048866:	68 
 8048867:	61                   	popa   
 8048868:	72 00                	jb     804886a <_init-0x336>
 804886a:	5f                   	pop    %edi
 804886b:	5f                   	pop    %edi
 804886c:	63 78 61             	arpl   %di,0x61(%eax)
 804886f:	5f                   	pop    %edi
 8048870:	61                   	popa   
 8048871:	74 65                	je     80488d8 <_init-0x2c8>
 8048873:	78 69                	js     80488de <_init-0x2c2>
 8048875:	74 00                	je     8048877 <_init-0x329>
 8048877:	67                   	addr16
 8048878:	65                   	gs
 8048879:	74 63                	je     80488de <_init-0x2c2>
 804887b:	68 61 72 00 6d       	push   $0x6d007261
 8048880:	65                   	gs
 8048881:	6d                   	insl   (%dx),%es:(%edi)
 8048882:	63 70 79             	arpl   %si,0x79(%eax)
 8048885:	00 72 61             	add    %dh,0x61(%edx)
 8048888:	6e                   	outsb  %ds:(%esi),(%dx)
 8048889:	64 00 6d 61          	add    %ch,%fs:0x61(%ebp)
 804888d:	6c                   	insb   (%dx),%es:(%edi)
 804888e:	6c                   	insb   (%dx),%es:(%edi)
 804888f:	6f                   	outsl  %ds:(%esi),(%dx)
 8048890:	63 00                	arpl   %ax,(%eax)
 8048892:	66                   	data16
 8048893:	77 72                	ja     8048907 <_init-0x299>
 8048895:	69 74 65 00 61 74 6f 	imul   $0x696f7461,0x0(%ebp),%esi
 804889c:	69 
 804889d:	00 66 70             	add    %ah,0x70(%esi)
 80488a0:	72 69                	jb     804890b <_init-0x295>
 80488a2:	6e                   	outsb  %ds:(%esi),(%dx)
 80488a3:	74 66                	je     804890b <_init-0x295>
 80488a5:	00 73 63             	add    %dh,0x63(%ebx)
 80488a8:	61                   	popa   
 80488a9:	6e                   	outsb  %ds:(%esi),(%dx)
 80488aa:	66                   	data16
 80488ab:	00 5f 5f             	add    %bl,0x5f(%edi)
 80488ae:	6c                   	insb   (%dx),%es:(%edi)
 80488af:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 80488b6:	72 74                	jb     804892c <_init-0x274>
 80488b8:	5f                   	pop    %edi
 80488b9:	6d                   	insl   (%dx),%es:(%edi)
 80488ba:	61                   	popa   
 80488bb:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%esi),%ebp
 80488c2:	00 47 4c             	add    %al,0x4c(%edi)
 80488c5:	49                   	dec    %ecx
 80488c6:	42                   	inc    %edx
 80488c7:	43                   	inc    %ebx
 80488c8:	5f                   	pop    %edi
 80488c9:	32 2e                	xor    (%esi),%ch
 80488cb:	30 00                	xor    %al,(%eax)
 80488cd:	47                   	inc    %edi
 80488ce:	4c                   	dec    %esp
 80488cf:	49                   	dec    %ecx
 80488d0:	42                   	inc    %edx
 80488d1:	43                   	inc    %ebx
 80488d2:	5f                   	pop    %edi
 80488d3:	32 2e                	xor    (%esi),%ch
 80488d5:	34 00                	xor    $0x0,%al
 80488d7:	47                   	inc    %edi
 80488d8:	4c                   	dec    %esp
 80488d9:	49                   	dec    %ecx
 80488da:	42                   	inc    %edx
 80488db:	43                   	inc    %ebx
 80488dc:	5f                   	pop    %edi
 80488dd:	32 2e                	xor    (%esi),%ch
 80488df:	31 2e                	xor    %ebp,(%esi)
 80488e1:	33 00                	xor    (%eax),%eax
 80488e3:	47                   	inc    %edi
 80488e4:	4c                   	dec    %esp
 80488e5:	49                   	dec    %ecx
 80488e6:	42                   	inc    %edx
 80488e7:	43                   	inc    %ebx
 80488e8:	5f                   	pop    %edi
 80488e9:	32 2e                	xor    (%esi),%ch
 80488eb:	31 00                	xor    %eax,(%eax)
 80488ed:	43                   	inc    %ebx
 80488ee:	58                   	pop    %eax
 80488ef:	58                   	pop    %eax
 80488f0:	41                   	inc    %ecx
 80488f1:	42                   	inc    %edx
 80488f2:	49                   	dec    %ecx
 80488f3:	5f                   	pop    %edi
 80488f4:	31 2e                	xor    %ebp,(%esi)
 80488f6:	33 00                	xor    (%eax),%eax
 80488f8:	47                   	inc    %edi
 80488f9:	4c                   	dec    %esp
 80488fa:	49                   	dec    %ecx
 80488fb:	42                   	inc    %edx
 80488fc:	43                   	inc    %ebx
 80488fd:	58                   	pop    %eax
 80488fe:	58                   	pop    %eax
 80488ff:	5f                   	pop    %edi
 8048900:	33 2e                	xor    (%esi),%ebp
 8048902:	34 00                	xor    $0x0,%al
Disassembly of section .gnu.version:

08048904 <.gnu.version>:
 8048904:	00 00                	add    %al,(%eax)
 8048906:	02 00                	add    (%eax),%al
 8048908:	03 00                	add    (%eax),%eax
 804890a:	04 00                	add    $0x0,%al
 804890c:	03 00                	add    (%eax),%eax
 804890e:	05 00 03 00 06       	add    $0x6000300,%eax
 8048913:	00 00                	add    %al,(%eax)
 8048915:	00 00                	add    %al,(%eax)
 8048917:	00 02                	add    %al,(%edx)
 8048919:	00 05 00 02 00 06    	add    %al,0x6000200
 804891f:	00 05 00 02 00 02    	add    %al,0x2000200
 8048925:	00 02                	add    %al,(%edx)
 8048927:	00 05 00 05 00 06    	add    %al,0x6000500
 804892d:	00 03                	add    %al,(%ebx)
 804892f:	00 07                	add    %al,(%edi)
 8048931:	00 02                	add    %al,(%edx)
 8048933:	00 05 00 06 00 03    	add    %al,0x3000600
 8048939:	00 05 00 05 00 03    	add    %al,0x3000500
 804893f:	00 05 00 02 00 05    	add    %al,0x5000200
 8048945:	00 05 00 05 00 03    	add    %al,0x3000500
 804894b:	00 08                	add    %cl,(%eax)
 804894d:	00 07                	add    %al,(%edi)
 804894f:	00 02                	add    %al,(%edx)
 8048951:	00 02                	add    %al,(%edx)
 8048953:	00 06                	add    %al,(%esi)
 8048955:	00 05 00 05 00 03    	add    %al,0x3000500
 804895b:	00 06                	add    %al,(%esi)
 804895d:	00 05 00 01 00 02    	add    %al,0x2000100
 8048963:	00 09                	add    %cl,(%ecx)
	...
Disassembly of section .gnu.version_r:

08048968 <.gnu.version_r>:
 8048968:	01 00                	add    %eax,(%eax)
 804896a:	01 00                	add    %eax,(%eax)
 804896c:	2a 01                	sub    (%ecx),%al
 804896e:	00 00                	add    %al,(%eax)
 8048970:	10 00                	adc    %al,(%eax)
 8048972:	00 00                	add    %al,(%eax)
 8048974:	20 00                	and    %al,(%eax)
 8048976:	00 00                	add    %al,(%eax)
 8048978:	10 69 69             	adc    %ch,0x69(%ecx)
 804897b:	0d 00 00 06 00       	or     $0x60000,%eax
 8048980:	bf 02 00 00 00       	mov    $0x2,%edi
 8048985:	00 00                	add    %al,(%eax)
 8048987:	00 01                	add    %al,(%ecx)
 8048989:	00 03                	add    %al,(%ebx)
 804898b:	00 2a                	add    %ch,(%edx)
 804898d:	02 00                	add    (%eax),%al
 804898f:	00 10                	add    %dl,(%eax)
 8048991:	00 00                	add    %al,(%eax)
 8048993:	00 40 00             	add    %al,0x0(%eax)
 8048996:	00 00                	add    %al,(%eax)
 8048998:	14 69                	adc    $0x69,%al
 804899a:	69 0d 00 00 08 00 c9 	imul   $0x2c9,0x80000,%ecx
 80489a1:	02 00 00 
 80489a4:	10 00                	adc    %al,(%eax)
 80489a6:	00 00                	add    %al,(%eax)
 80489a8:	10 69 69             	adc    %ch,0x69(%ecx)
 80489ab:	0d 00 00 05 00       	or     $0x50000,%eax
 80489b0:	bf 02 00 00 10       	mov    $0x10000002,%edi
 80489b5:	00 00                	add    %al,(%eax)
 80489b7:	00 73 1f             	add    %dh,0x1f(%ebx)
 80489ba:	69 09 00 00 04 00    	imul   $0x40000,(%ecx),%ecx
 80489c0:	d3 02                	roll   %cl,(%edx)
 80489c2:	00 00                	add    %al,(%eax)
 80489c4:	00 00                	add    %al,(%eax)
 80489c6:	00 00                	add    %al,(%eax)
 80489c8:	01 00                	add    %eax,(%eax)
 80489ca:	02 00                	add    (%eax),%al
 80489cc:	5d                   	pop    %ebp
 80489cd:	01 00                	add    %eax,(%eax)
 80489cf:	00 10                	add    %dl,(%eax)
 80489d1:	00 00                	add    %al,(%eax)
 80489d3:	00 30                	add    %dh,(%eax)
 80489d5:	00 00                	add    %al,(%eax)
 80489d7:	00 11                	add    %dl,(%ecx)
 80489d9:	69 69 0d 00 00 07 00 	imul   $0x70000,0xd(%ecx),%ebp
 80489e0:	df 02                	fild   (%edx)
 80489e2:	00 00                	add    %al,(%eax)
 80489e4:	10 00                	adc    %al,(%eax)
 80489e6:	00 00                	add    %al,(%eax)
 80489e8:	10 69 69             	adc    %ch,0x69(%ecx)
 80489eb:	0d 00 00 03 00       	or     $0x30000,%eax
 80489f0:	bf 02 00 00 00       	mov    $0x2,%edi
 80489f5:	00 00                	add    %al,(%eax)
 80489f7:	00 01                	add    %al,(%ecx)
 80489f9:	00 02                	add    %al,(%edx)
 80489fb:	00 01                	add    %al,(%ecx)
 80489fd:	00 00                	add    %al,(%eax)
 80489ff:	00 10                	add    %dl,(%eax)
 8048a01:	00 00                	add    %al,(%eax)
 8048a03:	00 00                	add    %al,(%eax)
 8048a05:	00 00                	add    %al,(%eax)
 8048a07:	00 d3                	add    %dl,%bl
 8048a09:	af                   	scas   %es:(%edi),%eax
 8048a0a:	6b 05 00 00 09 00 e9 	imul   $0xffffffe9,0x90000,%eax
 8048a11:	02 00                	add    (%eax),%al
 8048a13:	00 10                	add    %dl,(%eax)
 8048a15:	00 00                	add    %al,(%eax)
 8048a17:	00 74 29 92          	add    %dh,-0x6e(%ecx,%ebp,1)
 8048a1b:	08 00                	or     %al,(%eax)
 8048a1d:	00 02                	add    %al,(%edx)
 8048a1f:	00 f4                	add    %dh,%ah
 8048a21:	02 00                	add    (%eax),%al
 8048a23:	00 00                	add    %al,(%eax)
 8048a25:	00 00                	add    %al,(%eax)
	...
Disassembly of section .rel.dyn:

08048a28 <.rel.dyn>:
 8048a28:	10 01                	adc    %al,(%ecx)
 8048a2a:	05 08 06 08 00       	add    $0x80608,%eax
 8048a2f:	00 e0                	add    %ah,%al
 8048a31:	03 05 08 05 2f 00    	add    0x2f0508,%eax
	...
Disassembly of section .rel.plt:

08048a38 <.rel.plt>:
 8048a38:	20 01                	and    %al,(%ecx)
 8048a3a:	05 08 07 01 00       	add    $0x10708,%eax
 8048a3f:	00 24 01             	add    %ah,(%ecx,%eax,1)
 8048a42:	05 08 07 02 00       	add    $0x20708,%eax
 8048a47:	00 28                	add    %ch,(%eax)
 8048a49:	01 05 08 07 03 00    	add    %eax,0x30708
 8048a4f:	00 2c 01             	add    %ch,(%ecx,%eax,1)
 8048a52:	05 08 07 04 00       	add    $0x40708,%eax
 8048a57:	00 30                	add    %dh,(%eax)
 8048a59:	01 05 08 07 05 00    	add    %eax,0x50708
 8048a5f:	00 34 01             	add    %dh,(%ecx,%eax,1)
 8048a62:	05 08 07 06 00       	add    $0x60708,%eax
 8048a67:	00 38                	add    %bh,(%eax)
 8048a69:	01 05 08 07 07 00    	add    %eax,0x70708
 8048a6f:	00 3c 01             	add    %bh,(%ecx,%eax,1)
 8048a72:	05 08 07 08 00       	add    $0x80708,%eax
 8048a77:	00 40 01             	add    %al,0x1(%eax)
 8048a7a:	05 08 07 0a 00       	add    $0xa0708,%eax
 8048a7f:	00 44 01 05          	add    %al,0x5(%ecx,%eax,1)
 8048a83:	08 07                	or     %al,(%edi)
 8048a85:	0b 00                	or     (%eax),%eax
 8048a87:	00 48 01             	add    %cl,0x1(%eax)
 8048a8a:	05 08 07 0c 00       	add    $0xc0708,%eax
 8048a8f:	00 4c 01 05          	add    %cl,0x5(%ecx,%eax,1)
 8048a93:	08 07                	or     %al,(%edi)
 8048a95:	0d 00 00 50 01       	or     $0x1500000,%eax
 8048a9a:	05 08 07 0e 00       	add    $0xe0708,%eax
 8048a9f:	00 54 01 05          	add    %dl,0x5(%ecx,%eax,1)
 8048aa3:	08 07                	or     %al,(%edi)
 8048aa5:	0f 00 00             	sldt   (%eax)
 8048aa8:	58                   	pop    %eax
 8048aa9:	01 05 08 07 10 00    	add    %eax,0x100708
 8048aaf:	00 5c 01 05          	add    %bl,0x5(%ecx,%eax,1)
 8048ab3:	08 07                	or     %al,(%edi)
 8048ab5:	11 00                	adc    %eax,(%eax)
 8048ab7:	00 60 01             	add    %ah,0x1(%eax)
 8048aba:	05 08 07 12 00       	add    $0x120708,%eax
 8048abf:	00 64 01 05          	add    %ah,0x5(%ecx,%eax,1)
 8048ac3:	08 07                	or     %al,(%edi)
 8048ac5:	13 00                	adc    (%eax),%eax
 8048ac7:	00 68 01             	add    %ch,0x1(%eax)
 8048aca:	05 08 07 14 00       	add    $0x140708,%eax
 8048acf:	00 6c 01 05          	add    %ch,0x5(%ecx,%eax,1)
 8048ad3:	08 07                	or     %al,(%edi)
 8048ad5:	15 00 00 70 01       	adc    $0x1700000,%eax
 8048ada:	05 08 07 16 00       	add    $0x160708,%eax
 8048adf:	00 74 01 05          	add    %dh,0x5(%ecx,%eax,1)
 8048ae3:	08 07                	or     %al,(%edi)
 8048ae5:	17                   	pop    %ss
 8048ae6:	00 00                	add    %al,(%eax)
 8048ae8:	78 01                	js     8048aeb <_init-0xb5>
 8048aea:	05 08 07 18 00       	add    $0x180708,%eax
 8048aef:	00 7c 01 05          	add    %bh,0x5(%ecx,%eax,1)
 8048af3:	08 07                	or     %al,(%edi)
 8048af5:	19 00                	sbb    %eax,(%eax)
 8048af7:	00 80 01 05 08 07    	add    %al,0x7080501(%eax)
 8048afd:	1a 00                	sbb    (%eax),%al
 8048aff:	00 84 01 05 08 07 1b 	add    %al,0x1b070805(%ecx,%eax,1)
 8048b06:	00 00                	add    %al,(%eax)
 8048b08:	88 01                	mov    %al,(%ecx)
 8048b0a:	05 08 07 1c 00       	add    $0x1c0708,%eax
 8048b0f:	00 8c 01 05 08 07 1d 	add    %cl,0x1d070805(%ecx,%eax,1)
 8048b16:	00 00                	add    %al,(%eax)
 8048b18:	90                   	nop    
 8048b19:	01 05 08 07 1e 00    	add    %eax,0x1e0708
 8048b1f:	00 94 01 05 08 07 1f 	add    %dl,0x1f070805(%ecx,%eax,1)
 8048b26:	00 00                	add    %al,(%eax)
 8048b28:	98                   	cwtl   
 8048b29:	01 05 08 07 20 00    	add    %eax,0x200708
 8048b2f:	00 9c 01 05 08 07 21 	add    %bl,0x21070805(%ecx,%eax,1)
 8048b36:	00 00                	add    %al,(%eax)
 8048b38:	a0 01 05 08 07       	mov    0x7080501,%al
 8048b3d:	22 00                	and    (%eax),%al
 8048b3f:	00 a4 01 05 08 07 23 	add    %ah,0x23070805(%ecx,%eax,1)
 8048b46:	00 00                	add    %al,(%eax)
 8048b48:	a8 01                	test   $0x1,%al
 8048b4a:	05 08 07 24 00       	add    $0x240708,%eax
 8048b4f:	00 ac 01 05 08 07 25 	add    %ch,0x25070805(%ecx,%eax,1)
 8048b56:	00 00                	add    %al,(%eax)
 8048b58:	b0 01                	mov    $0x1,%al
 8048b5a:	05 08 07 26 00       	add    $0x260708,%eax
 8048b5f:	00 b4 01 05 08 07 27 	add    %dh,0x27070805(%ecx,%eax,1)
 8048b66:	00 00                	add    %al,(%eax)
 8048b68:	b8 01 05 08 07       	mov    $0x7080501,%eax
 8048b6d:	28 00                	sub    %al,(%eax)
 8048b6f:	00 bc 01 05 08 07 29 	add    %bh,0x29070805(%ecx,%eax,1)
 8048b76:	00 00                	add    %al,(%eax)
 8048b78:	c0 01 05             	rolb   $0x5,(%ecx)
 8048b7b:	08 07                	or     %al,(%edi)
 8048b7d:	2a 00                	sub    (%eax),%al
 8048b7f:	00 c4                	add    %al,%ah
 8048b81:	01 05 08 07 2b 00    	add    %eax,0x2b0708
 8048b87:	00 c8                	add    %cl,%al
 8048b89:	01 05 08 07 30 00    	add    %eax,0x300708
 8048b8f:	00 cc                	add    %cl,%ah
 8048b91:	01 05 08 07 2c 00    	add    %eax,0x2c0708
 8048b97:	00 d0                	add    %dl,%al
 8048b99:	01 05 08 07 2d 00    	add    %eax,0x2d0708
	...
Disassembly of section .init:

08048ba0 <_init>:
 8048ba0:	55                   	push   %ebp
 8048ba1:	89 e5                	mov    %esp,%ebp
 8048ba3:	53                   	push   %ebx
 8048ba4:	83 ec 04             	sub    $0x4,%esp
 8048ba7:	e8 00 00 00 00       	call   8048bac <_init+0xc>
 8048bac:	5b                   	pop    %ebx
 8048bad:	81 c3 68 75 00 00    	add    $0x7568,%ebx
 8048bb3:	8b 93 fc ff ff ff    	mov    -0x4(%ebx),%edx
 8048bb9:	85 d2                	test   %edx,%edx
 8048bbb:	74 05                	je     8048bc2 <_init+0x22>
 8048bbd:	e8 8e 00 00 00       	call   8048c50 <__gmon_start__@plt>
 8048bc2:	e8 49 03 00 00       	call   8048f10 <frame_dummy>
 8048bc7:	e8 14 5c 00 00       	call   804e7e0 <__do_global_ctors_aux>
 8048bcc:	58                   	pop    %eax
 8048bcd:	5b                   	pop    %ebx
 8048bce:	c9                   	leave  
 8048bcf:	c3                   	ret    
Disassembly of section .plt:

08048bd0 <std::ostream::operator<<(int)@plt-0x10>:
 8048bd0:	ff 35 18 01 05 08    	pushl  0x8050118
 8048bd6:	ff 25 1c 01 05 08    	jmp    *0x805011c
 8048bdc:	00 00                	add    %al,(%eax)
	...

08048be0 <std::ostream::operator<<(int)@plt>:
 8048be0:	ff 25 20 01 05 08    	jmp    *0x8050120
 8048be6:	68 00 00 00 00       	push   $0x0
 8048beb:	e9 e0 ff ff ff       	jmp    8048bd0 <_init+0x30>

08048bf0 <pthread_join@plt>:
 8048bf0:	ff 25 24 01 05 08    	jmp    *0x8050124
 8048bf6:	68 08 00 00 00       	push   $0x8
 8048bfb:	e9 d0 ff ff ff       	jmp    8048bd0 <_init+0x30>

08048c00 <__cxa_atexit@plt>:
 8048c00:	ff 25 28 01 05 08    	jmp    *0x8050128
 8048c06:	68 10 00 00 00       	push   $0x10
 8048c0b:	e9 c0 ff ff ff       	jmp    8048bd0 <_init+0x30>

08048c10 <pthread_attr_setdetachstate@plt>:
 8048c10:	ff 25 2c 01 05 08    	jmp    *0x805012c
 8048c16:	68 18 00 00 00       	push   $0x18
 8048c1b:	e9 b0 ff ff ff       	jmp    8048bd0 <_init+0x30>

08048c20 <getchar@plt>:
 8048c20:	ff 25 30 01 05 08    	jmp    *0x8050130
 8048c26:	68 20 00 00 00       	push   $0x20
 8048c2b:	e9 a0 ff ff ff       	jmp    8048bd0 <_init+0x30>

08048c30 <pthread_exit@plt>:
 8048c30:	ff 25 34 01 05 08    	jmp    *0x8050134
 8048c36:	68 28 00 00 00       	push   $0x28
 8048c3b:	e9 90 ff ff ff       	jmp    8048bd0 <_init+0x30>

08048c40 <sqrtf@plt>:
 8048c40:	ff 25 38 01 05 08    	jmp    *0x8050138
 8048c46:	68 30 00 00 00       	push   $0x30
 8048c4b:	e9 80 ff ff ff       	jmp    8048bd0 <_init+0x30>

08048c50 <__gmon_start__@plt>:
 8048c50:	ff 25 3c 01 05 08    	jmp    *0x805013c
 8048c56:	68 38 00 00 00       	push   $0x38
 8048c5b:	e9 70 ff ff ff       	jmp    8048bd0 <_init+0x30>

08048c60 <std::string::size() const@plt>:
 8048c60:	ff 25 40 01 05 08    	jmp    *0x8050140
 8048c66:	68 40 00 00 00       	push   $0x40
 8048c6b:	e9 60 ff ff ff       	jmp    8048bd0 <_init+0x30>

08048c70 <putchar@plt>:
 8048c70:	ff 25 44 01 05 08    	jmp    *0x8050144
 8048c76:	68 48 00 00 00       	push   $0x48
 8048c7b:	e9 50 ff ff ff       	jmp    8048bd0 <_init+0x30>

08048c80 <std::ios_base::Init::Init()@plt>:
 8048c80:	ff 25 48 01 05 08    	jmp    *0x8050148
 8048c86:	68 50 00 00 00       	push   $0x50
 8048c8b:	e9 40 ff ff ff       	jmp    8048bd0 <_init+0x30>

08048c90 <pow@plt>:
 8048c90:	ff 25 4c 01 05 08    	jmp    *0x805014c
 8048c96:	68 58 00 00 00       	push   $0x58
 8048c9b:	e9 30 ff ff ff       	jmp    8048bd0 <_init+0x30>

08048ca0 <__libc_start_main@plt>:
 8048ca0:	ff 25 50 01 05 08    	jmp    *0x8050150
 8048ca6:	68 60 00 00 00       	push   $0x60
 8048cab:	e9 20 ff ff ff       	jmp    8048bd0 <_init+0x30>

08048cb0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char)@plt>:
 8048cb0:	ff 25 54 01 05 08    	jmp    *0x8050154
 8048cb6:	68 68 00 00 00       	push   $0x68
 8048cbb:	e9 10 ff ff ff       	jmp    8048bd0 <_init+0x30>

08048cc0 <std::ios_base::Init::~Init()@plt>:
 8048cc0:	ff 25 58 01 05 08    	jmp    *0x8050158
 8048cc6:	68 70 00 00 00       	push   $0x70
 8048ccb:	e9 00 ff ff ff       	jmp    8048bd0 <_init+0x30>

08048cd0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>:
 8048cd0:	ff 25 5c 01 05 08    	jmp    *0x805015c
 8048cd6:	68 78 00 00 00       	push   $0x78
 8048cdb:	e9 f0 fe ff ff       	jmp    8048bd0 <_init+0x30>

08048ce0 <free@plt>:
 8048ce0:	ff 25 60 01 05 08    	jmp    *0x8050160
 8048ce6:	68 80 00 00 00       	push   $0x80
 8048ceb:	e9 e0 fe ff ff       	jmp    8048bd0 <_init+0x30>

08048cf0 <scanf@plt>:
 8048cf0:	ff 25 64 01 05 08    	jmp    *0x8050164
 8048cf6:	68 88 00 00 00       	push   $0x88
 8048cfb:	e9 d0 fe ff ff       	jmp    8048bd0 <_init+0x30>

08048d00 <sqrt@plt>:
 8048d00:	ff 25 68 01 05 08    	jmp    *0x8050168
 8048d06:	68 90 00 00 00       	push   $0x90
 8048d0b:	e9 c0 fe ff ff       	jmp    8048bd0 <_init+0x30>

08048d10 <pthread_mutex_unlock@plt>:
 8048d10:	ff 25 6c 01 05 08    	jmp    *0x805016c
 8048d16:	68 98 00 00 00       	push   $0x98
 8048d1b:	e9 b0 fe ff ff       	jmp    8048bd0 <_init+0x30>

08048d20 <pthread_attr_init@plt>:
 8048d20:	ff 25 70 01 05 08    	jmp    *0x8050170
 8048d26:	68 a0 00 00 00       	push   $0xa0
 8048d2b:	e9 a0 fe ff ff       	jmp    8048bd0 <_init+0x30>

08048d30 <std::string::operator[](unsigned int) const@plt>:
 8048d30:	ff 25 74 01 05 08    	jmp    *0x8050174
 8048d36:	68 a8 00 00 00       	push   $0xa8
 8048d3b:	e9 90 fe ff ff       	jmp    8048bd0 <_init+0x30>

08048d40 <memcpy@plt>:
 8048d40:	ff 25 78 01 05 08    	jmp    *0x8050178
 8048d46:	68 b0 00 00 00       	push   $0xb0
 8048d4b:	e9 80 fe ff ff       	jmp    8048bd0 <_init+0x30>

08048d50 <cos@plt>:
 8048d50:	ff 25 7c 01 05 08    	jmp    *0x805017c
 8048d56:	68 b8 00 00 00       	push   $0xb8
 8048d5b:	e9 70 fe ff ff       	jmp    8048bd0 <_init+0x30>

08048d60 <pthread_mutex_destroy@plt>:
 8048d60:	ff 25 80 01 05 08    	jmp    *0x8050180
 8048d66:	68 c0 00 00 00       	push   $0xc0
 8048d6b:	e9 60 fe ff ff       	jmp    8048bd0 <_init+0x30>

08048d70 <printf@plt>:
 8048d70:	ff 25 84 01 05 08    	jmp    *0x8050184
 8048d76:	68 c8 00 00 00       	push   $0xc8
 8048d7b:	e9 50 fe ff ff       	jmp    8048bd0 <_init+0x30>

08048d80 <atoi@plt>:
 8048d80:	ff 25 88 01 05 08    	jmp    *0x8050188
 8048d86:	68 d0 00 00 00       	push   $0xd0
 8048d8b:	e9 40 fe ff ff       	jmp    8048bd0 <_init+0x30>

08048d90 <pthread_mutex_init@plt>:
 8048d90:	ff 25 8c 01 05 08    	jmp    *0x805018c
 8048d96:	68 d8 00 00 00       	push   $0xd8
 8048d9b:	e9 30 fe ff ff       	jmp    8048bd0 <_init+0x30>

08048da0 <fwrite@plt>:
 8048da0:	ff 25 90 01 05 08    	jmp    *0x8050190
 8048da6:	68 e0 00 00 00       	push   $0xe0
 8048dab:	e9 20 fe ff ff       	jmp    8048bd0 <_init+0x30>

08048db0 <operator new[](unsigned int)@plt>:
 8048db0:	ff 25 94 01 05 08    	jmp    *0x8050194
 8048db6:	68 e8 00 00 00       	push   $0xe8
 8048dbb:	e9 10 fe ff ff       	jmp    8048bd0 <_init+0x30>

08048dc0 <fprintf@plt>:
 8048dc0:	ff 25 98 01 05 08    	jmp    *0x8050198
 8048dc6:	68 f0 00 00 00       	push   $0xf0
 8048dcb:	e9 00 fe ff ff       	jmp    8048bd0 <_init+0x30>

08048dd0 <time@plt>:
 8048dd0:	ff 25 9c 01 05 08    	jmp    *0x805019c
 8048dd6:	68 f8 00 00 00       	push   $0xf8
 8048ddb:	e9 f0 fd ff ff       	jmp    8048bd0 <_init+0x30>

08048de0 <malloc@plt>:
 8048de0:	ff 25 a0 01 05 08    	jmp    *0x80501a0
 8048de6:	68 00 01 00 00       	push   $0x100
 8048deb:	e9 e0 fd ff ff       	jmp    8048bd0 <_init+0x30>

08048df0 <pthread_mutex_lock@plt>:
 8048df0:	ff 25 a4 01 05 08    	jmp    *0x80501a4
 8048df6:	68 08 01 00 00       	push   $0x108
 8048dfb:	e9 d0 fd ff ff       	jmp    8048bd0 <_init+0x30>

08048e00 <__stack_chk_fail@plt>:
 8048e00:	ff 25 a8 01 05 08    	jmp    *0x80501a8
 8048e06:	68 10 01 00 00       	push   $0x110
 8048e0b:	e9 c0 fd ff ff       	jmp    8048bd0 <_init+0x30>

08048e10 <pthread_create@plt>:
 8048e10:	ff 25 ac 01 05 08    	jmp    *0x80501ac
 8048e16:	68 18 01 00 00       	push   $0x118
 8048e1b:	e9 b0 fd ff ff       	jmp    8048bd0 <_init+0x30>

08048e20 <operator delete[](void*)@plt>:
 8048e20:	ff 25 b0 01 05 08    	jmp    *0x80501b0
 8048e26:	68 20 01 00 00       	push   $0x120
 8048e2b:	e9 a0 fd ff ff       	jmp    8048bd0 <_init+0x30>

08048e30 <std::ostream::operator<<(float)@plt>:
 8048e30:	ff 25 b4 01 05 08    	jmp    *0x80501b4
 8048e36:	68 28 01 00 00       	push   $0x128
 8048e3b:	e9 90 fd ff ff       	jmp    8048bd0 <_init+0x30>

08048e40 <log@plt>:
 8048e40:	ff 25 b8 01 05 08    	jmp    *0x80501b8
 8048e46:	68 30 01 00 00       	push   $0x130
 8048e4b:	e9 80 fd ff ff       	jmp    8048bd0 <_init+0x30>

08048e50 <puts@plt>:
 8048e50:	ff 25 bc 01 05 08    	jmp    *0x80501bc
 8048e56:	68 38 01 00 00       	push   $0x138
 8048e5b:	e9 70 fd ff ff       	jmp    8048bd0 <_init+0x30>

08048e60 <rand@plt>:
 8048e60:	ff 25 c0 01 05 08    	jmp    *0x80501c0
 8048e66:	68 40 01 00 00       	push   $0x140
 8048e6b:	e9 60 fd ff ff       	jmp    8048bd0 <_init+0x30>

08048e70 <pthread_attr_destroy@plt>:
 8048e70:	ff 25 c4 01 05 08    	jmp    *0x80501c4
 8048e76:	68 48 01 00 00       	push   $0x148
 8048e7b:	e9 50 fd ff ff       	jmp    8048bd0 <_init+0x30>

08048e80 <__gxx_personality_v0@plt>:
 8048e80:	ff 25 c8 01 05 08    	jmp    *0x80501c8
 8048e86:	68 50 01 00 00       	push   $0x150
 8048e8b:	e9 40 fd ff ff       	jmp    8048bd0 <_init+0x30>

08048e90 <sin@plt>:
 8048e90:	ff 25 cc 01 05 08    	jmp    *0x80501cc
 8048e96:	68 58 01 00 00       	push   $0x158
 8048e9b:	e9 30 fd ff ff       	jmp    8048bd0 <_init+0x30>

08048ea0 <exit@plt>:
 8048ea0:	ff 25 d0 01 05 08    	jmp    *0x80501d0
 8048ea6:	68 60 01 00 00       	push   $0x160
 8048eab:	e9 20 fd ff ff       	jmp    8048bd0 <_init+0x30>
Disassembly of section .text:

08048eb0 <_start>:
 8048eb0:	31 ed                	xor    %ebp,%ebp
 8048eb2:	5e                   	pop    %esi
 8048eb3:	89 e1                	mov    %esp,%ecx
 8048eb5:	83 e4 f0             	and    $0xfffffff0,%esp
 8048eb8:	50                   	push   %eax
 8048eb9:	54                   	push   %esp
 8048eba:	52                   	push   %edx
 8048ebb:	68 70 e7 04 08       	push   $0x804e770
 8048ec0:	68 80 e7 04 08       	push   $0x804e780
 8048ec5:	51                   	push   %ecx
 8048ec6:	56                   	push   %esi
 8048ec7:	68 28 cb 04 08       	push   $0x804cb28
 8048ecc:	e8 cf fd ff ff       	call   8048ca0 <__libc_start_main@plt>
 8048ed1:	f4                   	hlt    
 8048ed2:	90                   	nop    
 8048ed3:	90                   	nop    
 8048ed4:	90                   	nop    
 8048ed5:	90                   	nop    
 8048ed6:	90                   	nop    
 8048ed7:	90                   	nop    
 8048ed8:	90                   	nop    
 8048ed9:	90                   	nop    
 8048eda:	90                   	nop    
 8048edb:	90                   	nop    
 8048edc:	90                   	nop    
 8048edd:	90                   	nop    
 8048ede:	90                   	nop    
 8048edf:	90                   	nop    

08048ee0 <__do_global_dtors_aux>:
 8048ee0:	55                   	push   %ebp
 8048ee1:	89 e5                	mov    %esp,%ebp
 8048ee3:	83 ec 08             	sub    $0x8,%esp
 8048ee6:	80 3d 6c 04 05 08 00 	cmpb   $0x0,0x805046c
 8048eed:	74 0c                	je     8048efb <__do_global_dtors_aux+0x1b>
 8048eef:	eb 1c                	jmp    8048f0d <__do_global_dtors_aux+0x2d>
 8048ef1:	83 c0 04             	add    $0x4,%eax
 8048ef4:	a3 e8 01 05 08       	mov    %eax,0x80501e8
 8048ef9:	ff d2                	call   *%edx
 8048efb:	a1 e8 01 05 08       	mov    0x80501e8,%eax
 8048f00:	8b 10                	mov    (%eax),%edx
 8048f02:	85 d2                	test   %edx,%edx
 8048f04:	75 eb                	jne    8048ef1 <__do_global_dtors_aux+0x11>
 8048f06:	c6 05 6c 04 05 08 01 	movb   $0x1,0x805046c
 8048f0d:	c9                   	leave  
 8048f0e:	c3                   	ret    
 8048f0f:	90                   	nop    

08048f10 <frame_dummy>:
 8048f10:	55                   	push   %ebp
 8048f11:	89 e5                	mov    %esp,%ebp
 8048f13:	83 ec 08             	sub    $0x8,%esp
 8048f16:	a1 1c 00 05 08       	mov    0x805001c,%eax
 8048f1b:	85 c0                	test   %eax,%eax
 8048f1d:	74 12                	je     8048f31 <frame_dummy+0x21>
 8048f1f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048f24:	85 c0                	test   %eax,%eax
 8048f26:	74 09                	je     8048f31 <frame_dummy+0x21>
 8048f28:	c7 04 24 1c 00 05 08 	movl   $0x805001c,(%esp)
 8048f2f:	ff d0                	call   *%eax
 8048f31:	c9                   	leave  
 8048f32:	c3                   	ret    
 8048f33:	90                   	nop    

08048f34 <GAThread::GAThread()>:
 8048f34:	55                   	push   %ebp
 8048f35:	89 e5                	mov    %esp,%ebp
 8048f37:	8b 45 08             	mov    0x8(%ebp),%eax
 8048f3a:	c7 80 fc 0f 00 00 ff 	movl   $0xffffffff,0xffc(%eax)
 8048f41:	ff ff ff 
 8048f44:	5d                   	pop    %ebp
 8048f45:	c3                   	ret    

08048f46 <GAThread::GAThread()>:
 8048f46:	55                   	push   %ebp
 8048f47:	89 e5                	mov    %esp,%ebp
 8048f49:	8b 45 08             	mov    0x8(%ebp),%eax
 8048f4c:	c7 80 fc 0f 00 00 ff 	movl   $0xffffffff,0xffc(%eax)
 8048f53:	ff ff ff 
 8048f56:	5d                   	pop    %ebp
 8048f57:	c3                   	ret    

08048f58 <GAThread::copy_global()>:
 8048f58:	55                   	push   %ebp
 8048f59:	89 e5                	mov    %esp,%ebp
 8048f5b:	83 ec 10             	sub    $0x10,%esp
 8048f5e:	8b 15 80 04 05 08    	mov    0x8050480,%edx
 8048f64:	8b 45 08             	mov    0x8(%ebp),%eax
 8048f67:	89 10                	mov    %edx,(%eax)
 8048f69:	8b 45 08             	mov    0x8(%ebp),%eax
 8048f6c:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 8048f73:	8b 15 84 04 05 08    	mov    0x8050484,%edx
 8048f79:	8b 45 08             	mov    0x8(%ebp),%eax
 8048f7c:	89 50 08             	mov    %edx,0x8(%eax)
 8048f7f:	8b 45 08             	mov    0x8(%ebp),%eax
 8048f82:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
 8048f89:	8b 45 08             	mov    0x8(%ebp),%eax
 8048f8c:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
 8048f93:	8b 45 08             	mov    0x8(%ebp),%eax
 8048f96:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
 8048f9d:	8b 15 8c 04 05 08    	mov    0x805048c,%edx
 8048fa3:	8b 45 08             	mov    0x8(%ebp),%eax
 8048fa6:	89 50 18             	mov    %edx,0x18(%eax)
 8048fa9:	8b 15 90 04 05 08    	mov    0x8050490,%edx
 8048faf:	8b 45 08             	mov    0x8(%ebp),%eax
 8048fb2:	89 50 1c             	mov    %edx,0x1c(%eax)
 8048fb5:	8b 15 94 04 05 08    	mov    0x8050494,%edx
 8048fbb:	8b 45 08             	mov    0x8(%ebp),%eax
 8048fbe:	89 50 20             	mov    %edx,0x20(%eax)
 8048fc1:	8b 15 98 04 05 08    	mov    0x8050498,%edx
 8048fc7:	8b 45 08             	mov    0x8(%ebp),%eax
 8048fca:	89 50 24             	mov    %edx,0x24(%eax)
 8048fcd:	8b 15 9c 04 05 08    	mov    0x805049c,%edx
 8048fd3:	8b 45 08             	mov    0x8(%ebp),%eax
 8048fd6:	89 50 28             	mov    %edx,0x28(%eax)
 8048fd9:	8b 15 a0 04 05 08    	mov    0x80504a0,%edx
 8048fdf:	8b 45 08             	mov    0x8(%ebp),%eax
 8048fe2:	89 50 2c             	mov    %edx,0x2c(%eax)
 8048fe5:	8b 15 a4 04 05 08    	mov    0x80504a4,%edx
 8048feb:	8b 45 08             	mov    0x8(%ebp),%eax
 8048fee:	89 50 30             	mov    %edx,0x30(%eax)
 8048ff1:	8b 15 a8 04 05 08    	mov    0x80504a8,%edx
 8048ff7:	8b 45 08             	mov    0x8(%ebp),%eax
 8048ffa:	89 50 34             	mov    %edx,0x34(%eax)
 8048ffd:	8b 45 08             	mov    0x8(%ebp),%eax
 8049000:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%eax)
 8049007:	8b 15 ac 04 05 08    	mov    0x80504ac,%edx
 804900d:	8b 45 08             	mov    0x8(%ebp),%eax
 8049010:	89 50 3c             	mov    %edx,0x3c(%eax)
 8049013:	8b 15 b0 04 05 08    	mov    0x80504b0,%edx
 8049019:	8b 45 08             	mov    0x8(%ebp),%eax
 804901c:	89 50 40             	mov    %edx,0x40(%eax)
 804901f:	8b 15 b4 04 05 08    	mov    0x80504b4,%edx
 8049025:	8b 45 08             	mov    0x8(%ebp),%eax
 8049028:	89 50 44             	mov    %edx,0x44(%eax)
 804902b:	8b 15 b8 04 05 08    	mov    0x80504b8,%edx
 8049031:	8b 45 08             	mov    0x8(%ebp),%eax
 8049034:	89 50 48             	mov    %edx,0x48(%eax)
 8049037:	8b 15 bc 04 05 08    	mov    0x80504bc,%edx
 804903d:	8b 45 08             	mov    0x8(%ebp),%eax
 8049040:	89 50 4c             	mov    %edx,0x4c(%eax)
 8049043:	8b 15 c0 04 05 08    	mov    0x80504c0,%edx
 8049049:	8b 45 08             	mov    0x8(%ebp),%eax
 804904c:	89 50 50             	mov    %edx,0x50(%eax)
 804904f:	8b 15 c4 04 05 08    	mov    0x80504c4,%edx
 8049055:	8b 45 08             	mov    0x8(%ebp),%eax
 8049058:	89 90 f8 0f 00 00    	mov    %edx,0xff8(%eax)
 804905e:	8b 15 c8 04 05 08    	mov    0x80504c8,%edx
 8049064:	8b 45 08             	mov    0x8(%ebp),%eax
 8049067:	89 90 fc 0f 00 00    	mov    %edx,0xffc(%eax)
 804906d:	8b 15 d0 04 05 08    	mov    0x80504d0,%edx
 8049073:	8b 45 08             	mov    0x8(%ebp),%eax
 8049076:	89 90 00 10 00 00    	mov    %edx,0x1000(%eax)
 804907c:	8b 15 d4 04 05 08    	mov    0x80504d4,%edx
 8049082:	8b 45 08             	mov    0x8(%ebp),%eax
 8049085:	89 90 04 10 00 00    	mov    %edx,0x1004(%eax)
 804908b:	8b 15 d8 04 05 08    	mov    0x80504d8,%edx
 8049091:	8b 45 08             	mov    0x8(%ebp),%eax
 8049094:	89 90 08 10 00 00    	mov    %edx,0x1008(%eax)
 804909a:	8b 15 dc 04 05 08    	mov    0x80504dc,%edx
 80490a0:	8b 45 08             	mov    0x8(%ebp),%eax
 80490a3:	89 90 0c 10 00 00    	mov    %edx,0x100c(%eax)
 80490a9:	8b 15 e0 04 05 08    	mov    0x80504e0,%edx
 80490af:	8b 45 08             	mov    0x8(%ebp),%eax
 80490b2:	89 90 10 10 00 00    	mov    %edx,0x1010(%eax)
 80490b8:	8b 15 e4 04 05 08    	mov    0x80504e4,%edx
 80490be:	8b 45 08             	mov    0x8(%ebp),%eax
 80490c1:	89 90 14 10 00 00    	mov    %edx,0x1014(%eax)
 80490c7:	8b 55 08             	mov    0x8(%ebp),%edx
 80490ca:	b8 00 00 00 00       	mov    $0x0,%eax
 80490cf:	89 82 18 10 00 00    	mov    %eax,0x1018(%edx)
 80490d5:	8b 55 08             	mov    0x8(%ebp),%edx
 80490d8:	b8 00 00 00 00       	mov    $0x0,%eax
 80490dd:	89 82 1c 10 00 00    	mov    %eax,0x101c(%edx)
 80490e3:	8b 55 08             	mov    0x8(%ebp),%edx
 80490e6:	b8 00 00 00 00       	mov    $0x0,%eax
 80490eb:	89 82 20 10 00 00    	mov    %eax,0x1020(%edx)
 80490f1:	8b 55 08             	mov    0x8(%ebp),%edx
 80490f4:	b8 00 00 00 00       	mov    $0x0,%eax
 80490f9:	89 82 24 10 00 00    	mov    %eax,0x1024(%edx)
 80490ff:	8b 15 f8 06 05 08    	mov    0x80506f8,%edx
 8049105:	8b 45 08             	mov    0x8(%ebp),%eax
 8049108:	89 90 08 12 00 00    	mov    %edx,0x1208(%eax)
 804910e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 8049115:	eb 32                	jmp    8049149 <GAThread::copy_global()+0x1f1>
 8049117:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 804911a:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804911d:	8b 14 85 80 06 05 08 	mov    0x8050680(,%eax,4),%edx
 8049124:	8b 45 08             	mov    0x8(%ebp),%eax
 8049127:	89 94 88 90 11 00 00 	mov    %edx,0x1190(%eax,%ecx,4)
 804912e:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 8049131:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049134:	8b 14 85 00 06 05 08 	mov    0x8050600(,%eax,4),%edx
 804913b:	8b 45 08             	mov    0x8(%ebp),%eax
 804913e:	89 94 88 18 11 00 00 	mov    %edx,0x1118(%eax,%ecx,4)
 8049145:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 8049149:	8b 45 08             	mov    0x8(%ebp),%eax
 804914c:	8b 40 18             	mov    0x18(%eax),%eax
 804914f:	83 e8 01             	sub    $0x1,%eax
 8049152:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 8049155:	7d c0                	jge    8049117 <GAThread::copy_global()+0x1bf>
 8049157:	c9                   	leave  
 8049158:	c3                   	ret    
 8049159:	90                   	nop    

0804915a <std::__verify_grouping(char const*, unsigned int, std::string const&)>:
 804915a:	55                   	push   %ebp
 804915b:	89 e5                	mov    %esp,%ebp
 804915d:	53                   	push   %ebx
 804915e:	83 ec 34             	sub    $0x34,%esp
 8049161:	8b 45 10             	mov    0x10(%ebp),%eax
 8049164:	89 04 24             	mov    %eax,(%esp)
 8049167:	e8 f4 fa ff ff       	call   8048c60 <std::string::size() const@plt>
 804916c:	83 e8 01             	sub    $0x1,%eax
 804916f:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049172:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049175:	83 e8 01             	sub    $0x1,%eax
 8049178:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804917b:	8d 45 ec             	lea    -0x14(%ebp),%eax
 804917e:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049182:	8d 45 f4             	lea    -0xc(%ebp),%eax
 8049185:	89 04 24             	mov    %eax,(%esp)
 8049188:	e8 bb 3d 00 00       	call   804cf48 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)>
 804918d:	8b 00                	mov    (%eax),%eax
 804918f:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8049192:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049195:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8049198:	c6 45 fb 01          	movb   $0x1,-0x5(%ebp)
 804919c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 80491a3:	eb 2e                	jmp    80491d3 <std::__verify_grouping(char const*, unsigned int, std::string const&)+0x79>
 80491a5:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80491a8:	89 44 24 04          	mov    %eax,0x4(%esp)
 80491ac:	8b 45 10             	mov    0x10(%ebp),%eax
 80491af:	89 04 24             	mov    %eax,(%esp)
 80491b2:	e8 79 fb ff ff       	call   8048d30 <std::string::operator[](unsigned int) const@plt>
 80491b7:	0f b6 10             	movzbl (%eax),%edx
 80491ba:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80491bd:	03 45 08             	add    0x8(%ebp),%eax
 80491c0:	0f b6 00             	movzbl (%eax),%eax
 80491c3:	38 c2                	cmp    %al,%dl
 80491c5:	0f 94 c0             	sete   %al
 80491c8:	88 45 fb             	mov    %al,-0x5(%ebp)
 80491cb:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)
 80491cf:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
 80491d3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80491d6:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 80491d9:	73 32                	jae    804920d <std::__verify_grouping(char const*, unsigned int, std::string const&)+0xb3>
 80491db:	80 7d fb 00          	cmpb   $0x0,-0x5(%ebp)
 80491df:	75 c4                	jne    80491a5 <std::__verify_grouping(char const*, unsigned int, std::string const&)+0x4b>
 80491e1:	eb 2a                	jmp    804920d <std::__verify_grouping(char const*, unsigned int, std::string const&)+0xb3>
 80491e3:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80491e6:	89 44 24 04          	mov    %eax,0x4(%esp)
 80491ea:	8b 45 10             	mov    0x10(%ebp),%eax
 80491ed:	89 04 24             	mov    %eax,(%esp)
 80491f0:	e8 3b fb ff ff       	call   8048d30 <std::string::operator[](unsigned int) const@plt>
 80491f5:	0f b6 10             	movzbl (%eax),%edx
 80491f8:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80491fb:	03 45 08             	add    0x8(%ebp),%eax
 80491fe:	0f b6 00             	movzbl (%eax),%eax
 8049201:	38 c2                	cmp    %al,%dl
 8049203:	0f 94 c0             	sete   %al
 8049206:	88 45 fb             	mov    %al,-0x5(%ebp)
 8049209:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)
 804920d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
 8049211:	74 06                	je     8049219 <std::__verify_grouping(char const*, unsigned int, std::string const&)+0xbf>
 8049213:	80 7d fb 00          	cmpb   $0x0,-0x5(%ebp)
 8049217:	75 ca                	jne    80491e3 <std::__verify_grouping(char const*, unsigned int, std::string const&)+0x89>
 8049219:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804921c:	03 45 08             	add    0x8(%ebp),%eax
 804921f:	0f b6 00             	movzbl (%eax),%eax
 8049222:	84 c0                	test   %al,%al
 8049224:	7e 35                	jle    804925b <std::__verify_grouping(char const*, unsigned int, std::string const&)+0x101>
 8049226:	0f b6 5d fb          	movzbl -0x5(%ebp),%ebx
 804922a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8049231:	00 
 8049232:	8b 45 10             	mov    0x10(%ebp),%eax
 8049235:	89 04 24             	mov    %eax,(%esp)
 8049238:	e8 f3 fa ff ff       	call   8048d30 <std::string::operator[](unsigned int) const@plt>
 804923d:	0f b6 10             	movzbl (%eax),%edx
 8049240:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049243:	03 45 08             	add    0x8(%ebp),%eax
 8049246:	0f b6 00             	movzbl (%eax),%eax
 8049249:	38 c2                	cmp    %al,%dl
 804924b:	0f 9e c0             	setle  %al
 804924e:	0f b6 c0             	movzbl %al,%eax
 8049251:	21 d8                	and    %ebx,%eax
 8049253:	85 c0                	test   %eax,%eax
 8049255:	0f 95 c0             	setne  %al
 8049258:	88 45 fb             	mov    %al,-0x5(%ebp)
 804925b:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
 804925f:	83 c4 34             	add    $0x34,%esp
 8049262:	5b                   	pop    %ebx
 8049263:	5d                   	pop    %ebp
 8049264:	c3                   	ret    
 8049265:	90                   	nop    

08049266 <__static_initialization_and_destruction_0(int, int)>:
 8049266:	55                   	push   %ebp
 8049267:	89 e5                	mov    %esp,%ebp
 8049269:	83 ec 18             	sub    $0x18,%esp
 804926c:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
 8049270:	75 31                	jne    80492a3 <__static_initialization_and_destruction_0(int, int)+0x3d>
 8049272:	81 7d 0c ff ff 00 00 	cmpl   $0xffff,0xc(%ebp)
 8049279:	75 28                	jne    80492a3 <__static_initialization_and_destruction_0(int, int)+0x3d>
 804927b:	c7 04 24 d4 07 05 08 	movl   $0x80507d4,(%esp)
 8049282:	e8 f9 f9 ff ff       	call   8048c80 <std::ios_base::Init::Init()@plt>
 8049287:	c7 44 24 08 e4 01 05 	movl   $0x80501e4,0x8(%esp)
 804928e:	08 
 804928f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8049296:	00 
 8049297:	c7 04 24 c2 92 04 08 	movl   $0x80492c2,(%esp)
 804929e:	e8 5d f9 ff ff       	call   8048c00 <__cxa_atexit@plt>
 80492a3:	c9                   	leave  
 80492a4:	c3                   	ret    
 80492a5:	90                   	nop    

080492a6 <global constructors keyed to gpop_size>:
 80492a6:	55                   	push   %ebp
 80492a7:	89 e5                	mov    %esp,%ebp
 80492a9:	83 ec 08             	sub    $0x8,%esp
 80492ac:	c7 44 24 04 ff ff 00 	movl   $0xffff,0x4(%esp)
 80492b3:	00 
 80492b4:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80492bb:	e8 a6 ff ff ff       	call   8049266 <__static_initialization_and_destruction_0(int, int)>
 80492c0:	c9                   	leave  
 80492c1:	c3                   	ret    

080492c2 <__tcf_0>:
 80492c2:	55                   	push   %ebp
 80492c3:	89 e5                	mov    %esp,%ebp
 80492c5:	83 ec 08             	sub    $0x8,%esp
 80492c8:	c7 04 24 d4 07 05 08 	movl   $0x80507d4,(%esp)
 80492cf:	e8 ec f9 ff ff       	call   8048cc0 <std::ios_base::Init::~Init()@plt>
 80492d4:	c9                   	leave  
 80492d5:	c3                   	ret    

080492d6 <GAThread::get_delta(float)>:
 80492d6:	55                   	push   %ebp
 80492d7:	89 e5                	mov    %esp,%ebp
 80492d9:	83 ec 28             	sub    $0x28,%esp
 80492dc:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 80492e3:	8b 45 08             	mov    0x8(%ebp),%eax
 80492e6:	8b 40 28             	mov    0x28(%eax),%eax
 80492e9:	85 c0                	test   %eax,%eax
 80492eb:	75 0b                	jne    80492f8 <GAThread::get_delta(float)+0x22>
 80492ed:	d9 45 0c             	flds   0xc(%ebp)
 80492f0:	d9 5d e8             	fstps  -0x18(%ebp)
 80492f3:	e9 92 00 00 00       	jmp    804938a <GAThread::get_delta(float)+0xb4>
 80492f8:	d9 45 0c             	flds   0xc(%ebp)
 80492fb:	d9 05 70 f6 04 08    	flds   0x804f670
 8049301:	da e9                	fucompp 
 8049303:	df e0                	fnstsw %ax
 8049305:	9e                   	sahf   
 8049306:	73 02                	jae    804930a <GAThread::get_delta(float)+0x34>
 8049308:	eb 08                	jmp    8049312 <GAThread::get_delta(float)+0x3c>
 804930a:	b8 00 00 80 bf       	mov    $0xbf800000,%eax
 804930f:	89 45 0c             	mov    %eax,0xc(%ebp)
 8049312:	d9 45 0c             	flds   0xc(%ebp)
 8049315:	d9 e8                	fld1   
 8049317:	d9 c9                	fxch   %st(1)
 8049319:	da e9                	fucompp 
 804931b:	df e0                	fnstsw %ax
 804931d:	9e                   	sahf   
 804931e:	77 02                	ja     8049322 <GAThread::get_delta(float)+0x4c>
 8049320:	eb 08                	jmp    804932a <GAThread::get_delta(float)+0x54>
 8049322:	b8 00 00 80 3f       	mov    $0x3f800000,%eax
 8049327:	89 45 0c             	mov    %eax,0xc(%ebp)
 804932a:	d9 45 0c             	flds   0xc(%ebp)
 804932d:	d9 ee                	fldz   
 804932f:	da e9                	fucompp 
 8049331:	df e0                	fnstsw %ax
 8049333:	9e                   	sahf   
 8049334:	77 02                	ja     8049338 <GAThread::get_delta(float)+0x62>
 8049336:	eb 0f                	jmp    8049347 <GAThread::get_delta(float)+0x71>
 8049338:	d9 45 0c             	flds   0xc(%ebp)
 804933b:	d9 e0                	fchs   
 804933d:	d9 5d 0c             	fstps  0xc(%ebp)
 8049340:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%ebp)
 8049347:	8b 45 08             	mov    0x8(%ebp),%eax
 804934a:	d9 80 0c 10 00 00    	flds   0x100c(%eax)
 8049350:	d9 e8                	fld1   
 8049352:	de c1                	faddp  %st,%st(1)
 8049354:	d9 e8                	fld1   
 8049356:	de f1                	fdivp  %st,%st(1)
 8049358:	d9 45 0c             	flds   0xc(%ebp)
 804935b:	d9 e8                	fld1   
 804935d:	de e1                	fsubp  %st,%st(1)
 804935f:	d9 c9                	fxch   %st(1)
 8049361:	dd 5c 24 08          	fstpl  0x8(%esp)
 8049365:	dd 1c 24             	fstpl  (%esp)
 8049368:	e8 23 f9 ff ff       	call   8048c90 <pow@plt>
 804936d:	d9 e8                	fld1   
 804936f:	de e1                	fsubp  %st,%st(1)
 8049371:	d9 5d fc             	fstps  -0x4(%ebp)
 8049374:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)
 8049378:	74 0a                	je     8049384 <GAThread::get_delta(float)+0xae>
 804937a:	d9 45 fc             	flds   -0x4(%ebp)
 804937d:	d9 e0                	fchs   
 804937f:	d9 5d e8             	fstps  -0x18(%ebp)
 8049382:	eb 06                	jmp    804938a <GAThread::get_delta(float)+0xb4>
 8049384:	d9 45 fc             	flds   -0x4(%ebp)
 8049387:	d9 5d e8             	fstps  -0x18(%ebp)
 804938a:	d9 45 e8             	flds   -0x18(%ebp)
 804938d:	c9                   	leave  
 804938e:	c3                   	ret    
 804938f:	90                   	nop    

08049390 <GAThread::get_beta(float)>:
 8049390:	55                   	push   %ebp
 8049391:	89 e5                	mov    %esp,%ebp
 8049393:	83 ec 28             	sub    $0x28,%esp
 8049396:	8b 45 08             	mov    0x8(%ebp),%eax
 8049399:	8b 40 28             	mov    0x28(%eax),%eax
 804939c:	85 c0                	test   %eax,%eax
 804939e:	75 0f                	jne    80493af <GAThread::get_beta(float)+0x1f>
 80493a0:	d9 45 0c             	flds   0xc(%ebp)
 80493a3:	d9 c0                	fld    %st(0)
 80493a5:	de c1                	faddp  %st,%st(1)
 80493a7:	d9 5d e8             	fstps  -0x18(%ebp)
 80493aa:	e9 a6 00 00 00       	jmp    8049455 <GAThread::get_beta(float)+0xc5>
 80493af:	d9 45 0c             	flds   0xc(%ebp)
 80493b2:	d9 e8                	fld1   
 80493b4:	de e1                	fsubp  %st,%st(1)
 80493b6:	dd 05 78 f6 04 08    	fldl   0x804f678
 80493bc:	da e9                	fucompp 
 80493be:	df e0                	fnstsw %ax
 80493c0:	9e                   	sahf   
 80493c1:	77 02                	ja     80493c5 <GAThread::get_beta(float)+0x35>
 80493c3:	eb 08                	jmp    80493cd <GAThread::get_beta(float)+0x3d>
 80493c5:	b8 ef ff 7f 3f       	mov    $0x3f7fffef,%eax
 80493ca:	89 45 0c             	mov    %eax,0xc(%ebp)
 80493cd:	d9 45 0c             	flds   0xc(%ebp)
 80493d0:	d9 ee                	fldz   
 80493d2:	da e9                	fucompp 
 80493d4:	df e0                	fnstsw %ax
 80493d6:	9e                   	sahf   
 80493d7:	77 02                	ja     80493db <GAThread::get_beta(float)+0x4b>
 80493d9:	eb 08                	jmp    80493e3 <GAThread::get_beta(float)+0x53>
 80493db:	b8 00 00 00 00       	mov    $0x0,%eax
 80493e0:	89 45 0c             	mov    %eax,0xc(%ebp)
 80493e3:	d9 45 0c             	flds   0xc(%ebp)
 80493e6:	d9 05 80 f6 04 08    	flds   0x804f680
 80493ec:	da e9                	fucompp 
 80493ee:	df e0                	fnstsw %ax
 80493f0:	9e                   	sahf   
 80493f1:	77 02                	ja     80493f5 <GAThread::get_beta(float)+0x65>
 80493f3:	eb 29                	jmp    804941e <GAThread::get_beta(float)+0x8e>
 80493f5:	8b 45 08             	mov    0x8(%ebp),%eax
 80493f8:	d9 80 08 10 00 00    	flds   0x1008(%eax)
 80493fe:	d9 e8                	fld1   
 8049400:	de c1                	faddp  %st,%st(1)
 8049402:	d9 e8                	fld1   
 8049404:	de f1                	fdivp  %st,%st(1)
 8049406:	d9 45 0c             	flds   0xc(%ebp)
 8049409:	d8 c0                	fadd   %st(0),%st
 804940b:	d9 c9                	fxch   %st(1)
 804940d:	dd 5c 24 08          	fstpl  0x8(%esp)
 8049411:	dd 1c 24             	fstpl  (%esp)
 8049414:	e8 77 f8 ff ff       	call   8048c90 <pow@plt>
 8049419:	d9 5d fc             	fstps  -0x4(%ebp)
 804941c:	eb 31                	jmp    804944f <GAThread::get_beta(float)+0xbf>
 804941e:	8b 45 08             	mov    0x8(%ebp),%eax
 8049421:	d9 80 08 10 00 00    	flds   0x1008(%eax)
 8049427:	d9 e8                	fld1   
 8049429:	de c1                	faddp  %st,%st(1)
 804942b:	d9 e8                	fld1   
 804942d:	de f1                	fdivp  %st,%st(1)
 804942f:	d9 45 0c             	flds   0xc(%ebp)
 8049432:	d9 e8                	fld1   
 8049434:	de e1                	fsubp  %st,%st(1)
 8049436:	dd 05 88 f6 04 08    	fldl   0x804f688
 804943c:	de f1                	fdivp  %st,%st(1)
 804943e:	d9 c9                	fxch   %st(1)
 8049440:	dd 5c 24 08          	fstpl  0x8(%esp)
 8049444:	dd 1c 24             	fstpl  (%esp)
 8049447:	e8 44 f8 ff ff       	call   8048c90 <pow@plt>
 804944c:	d9 5d fc             	fstps  -0x4(%ebp)
 804944f:	d9 45 fc             	flds   -0x4(%ebp)
 8049452:	d9 5d e8             	fstps  -0x18(%ebp)
 8049455:	d9 45 e8             	flds   -0x18(%ebp)
 8049458:	c9                   	leave  
 8049459:	c3                   	ret    

0804945a <free_pool()>:
 804945a:	55                   	push   %ebp
 804945b:	89 e5                	mov    %esp,%ebp
 804945d:	83 ec 18             	sub    $0x18,%esp
 8049460:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 8049467:	eb 46                	jmp    80494af <free_pool()+0x55>
 8049469:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804946c:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 8049472:	89 c2                	mov    %eax,%edx
 8049474:	a1 04 07 05 08       	mov    0x8050704,%eax
 8049479:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804947c:	8b 80 80 00 00 00    	mov    0x80(%eax),%eax
 8049482:	89 04 24             	mov    %eax,(%esp)
 8049485:	e8 56 f8 ff ff       	call   8048ce0 <free@plt>
 804948a:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804948d:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 8049493:	89 c2                	mov    %eax,%edx
 8049495:	a1 04 07 05 08       	mov    0x8050704,%eax
 804949a:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804949d:	8b 80 84 00 00 00    	mov    0x84(%eax),%eax
 80494a3:	89 04 24             	mov    %eax,(%esp)
 80494a6:	e8 35 f8 ff ff       	call   8048ce0 <free@plt>
 80494ab:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 80494af:	a1 b4 07 05 08       	mov    0x80507b4,%eax
 80494b4:	39 45 fc             	cmp    %eax,-0x4(%ebp)
 80494b7:	7c b0                	jl     8049469 <free_pool()+0xf>
 80494b9:	a1 a0 07 05 08       	mov    0x80507a0,%eax
 80494be:	89 04 24             	mov    %eax,(%esp)
 80494c1:	e8 1a f8 ff ff       	call   8048ce0 <free@plt>
 80494c6:	a1 a4 07 05 08       	mov    0x80507a4,%eax
 80494cb:	89 04 24             	mov    %eax,(%esp)
 80494ce:	e8 0d f8 ff ff       	call   8048ce0 <free@plt>
 80494d3:	c9                   	leave  
 80494d4:	c3                   	ret    
 80494d5:	90                   	nop    

080494d6 <GAThread::free_all()>:
 80494d6:	55                   	push   %ebp
 80494d7:	89 e5                	mov    %esp,%ebp
 80494d9:	83 ec 18             	sub    $0x18,%esp
 80494dc:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 80494e3:	e9 90 00 00 00       	jmp    8049578 <GAThread::free_all()+0xa2>
 80494e8:	8b 45 08             	mov    0x8(%ebp),%eax
 80494eb:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 80494f1:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80494f4:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 80494fa:	8d 04 02             	lea    (%edx,%eax,1),%eax
 80494fd:	8b 80 80 00 00 00    	mov    0x80(%eax),%eax
 8049503:	89 04 24             	mov    %eax,(%esp)
 8049506:	e8 d5 f7 ff ff       	call   8048ce0 <free@plt>
 804950b:	8b 45 08             	mov    0x8(%ebp),%eax
 804950e:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 8049514:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049517:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804951d:	8d 04 02             	lea    (%edx,%eax,1),%eax
 8049520:	8b 80 80 00 00 00    	mov    0x80(%eax),%eax
 8049526:	89 04 24             	mov    %eax,(%esp)
 8049529:	e8 b2 f7 ff ff       	call   8048ce0 <free@plt>
 804952e:	8b 45 08             	mov    0x8(%ebp),%eax
 8049531:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 8049537:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804953a:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 8049540:	8d 04 02             	lea    (%edx,%eax,1),%eax
 8049543:	8b 80 84 00 00 00    	mov    0x84(%eax),%eax
 8049549:	89 04 24             	mov    %eax,(%esp)
 804954c:	e8 8f f7 ff ff       	call   8048ce0 <free@plt>
 8049551:	8b 45 08             	mov    0x8(%ebp),%eax
 8049554:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804955a:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804955d:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 8049563:	8d 04 02             	lea    (%edx,%eax,1),%eax
 8049566:	8b 80 84 00 00 00    	mov    0x84(%eax),%eax
 804956c:	89 04 24             	mov    %eax,(%esp)
 804956f:	e8 6c f7 ff ff       	call   8048ce0 <free@plt>
 8049574:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 8049578:	8b 45 08             	mov    0x8(%ebp),%eax
 804957b:	8b 00                	mov    (%eax),%eax
 804957d:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 8049580:	0f 8f 62 ff ff ff    	jg     80494e8 <GAThread::free_all()+0x12>
 8049586:	8b 45 08             	mov    0x8(%ebp),%eax
 8049589:	8b 80 0c 12 00 00    	mov    0x120c(%eax),%eax
 804958f:	89 04 24             	mov    %eax,(%esp)
 8049592:	e8 49 f7 ff ff       	call   8048ce0 <free@plt>
 8049597:	8b 45 08             	mov    0x8(%ebp),%eax
 804959a:	8b 80 10 12 00 00    	mov    0x1210(%eax),%eax
 80495a0:	89 04 24             	mov    %eax,(%esp)
 80495a3:	e8 38 f7 ff ff       	call   8048ce0 <free@plt>
 80495a8:	8b 45 08             	mov    0x8(%ebp),%eax
 80495ab:	8b 80 94 12 00 00    	mov    0x1294(%eax),%eax
 80495b1:	89 04 24             	mov    %eax,(%esp)
 80495b4:	e8 27 f7 ff ff       	call   8048ce0 <free@plt>
 80495b9:	8b 45 08             	mov    0x8(%ebp),%eax
 80495bc:	8b 80 98 12 00 00    	mov    0x1298(%eax),%eax
 80495c2:	89 04 24             	mov    %eax,(%esp)
 80495c5:	e8 16 f7 ff ff       	call   8048ce0 <free@plt>
 80495ca:	c9                   	leave  
 80495cb:	c3                   	ret    

080495cc <error_ptr_null(char const*)>:
 80495cc:	55                   	push   %ebp
 80495cd:	89 e5                	mov    %esp,%ebp
 80495cf:	83 ec 08             	sub    $0x8,%esp
 80495d2:	8b 45 08             	mov    0x8(%ebp),%eax
 80495d5:	89 44 24 04          	mov    %eax,0x4(%esp)
 80495d9:	c7 04 24 30 e8 04 08 	movl   $0x804e830,(%esp)
 80495e0:	e8 8b f7 ff ff       	call   8048d70 <printf@plt>
 80495e5:	c7 04 24 53 e8 04 08 	movl   $0x804e853,(%esp)
 80495ec:	e8 7f f7 ff ff       	call   8048d70 <printf@plt>
 80495f1:	c7 04 24 ff ff ff ff 	movl   $0xffffffff,(%esp)
 80495f8:	e8 a3 f8 ff ff       	call   8048ea0 <exit@plt>
 80495fd:	90                   	nop    

080495fe <GAThread::objective(float*)>:
 80495fe:	55                   	push   %ebp
 80495ff:	89 e5                	mov    %esp,%ebp
 8049601:	83 ec 38             	sub    $0x38,%esp
 8049604:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8049608:	75 0c                	jne    8049616 <GAThread::objective(float*)+0x18>
 804960a:	c7 04 24 6e e8 04 08 	movl   $0x804e86e,(%esp)
 8049611:	e8 b6 ff ff ff       	call   80495cc <error_ptr_null(char const*)>
 8049616:	8b 45 08             	mov    0x8(%ebp),%eax
 8049619:	c7 80 fc 0f 00 00 ff 	movl   $0xffffffff,0xffc(%eax)
 8049620:	ff ff ff 
 8049623:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049626:	d9 00                	flds   (%eax)
 8049628:	d9 ee                	fldz   
 804962a:	da e9                	fucompp 
 804962c:	df e0                	fnstsw %ax
 804962e:	9e                   	sahf   
 804962f:	77 02                	ja     8049633 <GAThread::objective(float*)+0x35>
 8049631:	eb 0c                	jmp    804963f <GAThread::objective(float*)+0x41>
 8049633:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049636:	d9 00                	flds   (%eax)
 8049638:	d9 e0                	fchs   
 804963a:	d9 5d dc             	fstps  -0x24(%ebp)
 804963d:	eb 08                	jmp    8049647 <GAThread::objective(float*)+0x49>
 804963f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049642:	d9 00                	flds   (%eax)
 8049644:	d9 5d dc             	fstps  -0x24(%ebp)
 8049647:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804964a:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804964d:	d9 45 d8             	flds   -0x28(%ebp)
 8049650:	c9                   	leave  
 8049651:	c3                   	ret    

08049652 <GAThread::decodevalue(unsigned int*, double*)>:
 8049652:	55                   	push   %ebp
 8049653:	89 e5                	mov    %esp,%ebp
 8049655:	83 ec 48             	sub    $0x48,%esp
 8049658:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
 804965f:	8b 45 08             	mov    0x8(%ebp),%eax
 8049662:	8b 40 48             	mov    0x48(%eax),%eax
 8049665:	85 c0                	test   %eax,%eax
 8049667:	0f 84 18 01 00 00    	je     8049785 <GAThread::decodevalue(unsigned int*, double*)+0x133>
 804966d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8049671:	75 0c                	jne    804967f <GAThread::decodevalue(unsigned int*, double*)+0x2d>
 8049673:	c7 04 24 7f e8 04 08 	movl   $0x804e87f,(%esp)
 804967a:	e8 4d ff ff ff       	call   80495cc <error_ptr_null(char const*)>
 804967f:	8b 45 08             	mov    0x8(%ebp),%eax
 8049682:	8b 50 20             	mov    0x20(%eax),%edx
 8049685:	8b 45 08             	mov    0x8(%ebp),%eax
 8049688:	8b 40 1c             	mov    0x1c(%eax),%eax
 804968b:	89 c1                	mov    %eax,%ecx
 804968d:	89 d0                	mov    %edx,%eax
 804968f:	c1 fa 1f             	sar    $0x1f,%edx
 8049692:	f7 f9                	idiv   %ecx
 8049694:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8049697:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804969e:	e9 d3 00 00 00       	jmp    8049776 <GAThread::decodevalue(unsigned int*, double*)+0x124>
 80496a3:	8b 45 08             	mov    0x8(%ebp),%eax
 80496a6:	8b 40 24             	mov    0x24(%eax),%eax
 80496a9:	83 e8 01             	sub    $0x1,%eax
 80496ac:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 80496af:	75 19                	jne    80496ca <GAThread::decodevalue(unsigned int*, double*)+0x78>
 80496b1:	8b 45 08             	mov    0x8(%ebp),%eax
 80496b4:	8b 40 20             	mov    0x20(%eax),%eax
 80496b7:	89 c2                	mov    %eax,%edx
 80496b9:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80496bc:	c1 e0 05             	shl    $0x5,%eax
 80496bf:	89 d1                	mov    %edx,%ecx
 80496c1:	29 c1                	sub    %eax,%ecx
 80496c3:	89 c8                	mov    %ecx,%eax
 80496c5:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80496c8:	eb 07                	jmp    80496d1 <GAThread::decodevalue(unsigned int*, double*)+0x7f>
 80496ca:	c7 45 f4 20 00 00 00 	movl   $0x20,-0xc(%ebp)
 80496d1:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80496d4:	c1 e0 02             	shl    $0x2,%eax
 80496d7:	03 45 0c             	add    0xc(%ebp),%eax
 80496da:	8b 00                	mov    (%eax),%eax
 80496dc:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80496df:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 80496e6:	eb 7e                	jmp    8049766 <GAThread::decodevalue(unsigned int*, double*)+0x114>
 80496e8:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80496eb:	89 c2                	mov    %eax,%edx
 80496ed:	c1 e2 05             	shl    $0x5,%edx
 80496f0:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80496f3:	8d 04 02             	lea    (%edx,%eax,1),%eax
 80496f6:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80496f9:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80496fc:	23 45 f0             	and    -0x10(%ebp),%eax
 80496ff:	83 f8 01             	cmp    $0x1,%eax
 8049702:	75 5b                	jne    804975f <GAThread::decodevalue(unsigned int*, double*)+0x10d>
 8049704:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8049707:	89 d0                	mov    %edx,%eax
 8049709:	c1 fa 1f             	sar    $0x1f,%edx
 804970c:	f7 7d e0             	idivl  -0x20(%ebp)
 804970f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8049712:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8049715:	0f af 45 e0          	imul   -0x20(%ebp),%eax
 8049719:	29 45 ec             	sub    %eax,-0x14(%ebp)
 804971c:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804971f:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8049722:	29 d0                	sub    %edx,%eax
 8049724:	83 e8 01             	sub    $0x1,%eax
 8049727:	50                   	push   %eax
 8049728:	db 04 24             	fildl  (%esp)
 804972b:	8d 64 24 04          	lea    0x4(%esp),%esp
 804972f:	dd 5c 24 08          	fstpl  0x8(%esp)
 8049733:	dd 05 90 f6 04 08    	fldl   0x804f690
 8049739:	dd 1c 24             	fstpl  (%esp)
 804973c:	e8 4f f5 ff ff       	call   8048c90 <pow@plt>
 8049741:	dd 5d d8             	fstpl  -0x28(%ebp)
 8049744:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8049747:	c1 e0 03             	shl    $0x3,%eax
 804974a:	89 c2                	mov    %eax,%edx
 804974c:	03 55 10             	add    0x10(%ebp),%edx
 804974f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8049752:	c1 e0 03             	shl    $0x3,%eax
 8049755:	03 45 10             	add    0x10(%ebp),%eax
 8049758:	dd 00                	fldl   (%eax)
 804975a:	dc 45 d8             	faddl  -0x28(%ebp)
 804975d:	dd 1a                	fstpl  (%edx)
 804975f:	d1 7d f0             	sarl   -0x10(%ebp)
 8049762:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 8049766:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8049769:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804976c:	0f 8c 76 ff ff ff    	jl     80496e8 <GAThread::decodevalue(unsigned int*, double*)+0x96>
 8049772:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 8049776:	8b 45 08             	mov    0x8(%ebp),%eax
 8049779:	8b 40 24             	mov    0x24(%eax),%eax
 804977c:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 804977f:	0f 8f 1e ff ff ff    	jg     80496a3 <GAThread::decodevalue(unsigned int*, double*)+0x51>
 8049785:	c9                   	leave  
 8049786:	c3                   	ret    
 8049787:	90                   	nop    

08049788 <GAThread::decode_string(indiv*)>:
 8049788:	55                   	push   %ebp
 8049789:	89 e5                	mov    %esp,%ebp
 804978b:	83 ec 28             	sub    $0x28,%esp
 804978e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8049792:	75 0c                	jne    80497a0 <GAThread::decode_string(indiv*)+0x18>
 8049794:	c7 04 24 94 e8 04 08 	movl   $0x804e894,(%esp)
 804979b:	e8 2c fe ff ff       	call   80495cc <error_ptr_null(char const*)>
 80497a0:	8b 45 08             	mov    0x8(%ebp),%eax
 80497a3:	8b 40 48             	mov    0x48(%eax),%eax
 80497a6:	85 c0                	test   %eax,%eax
 80497a8:	0f 84 1b 01 00 00    	je     80498c9 <GAThread::decode_string(indiv*)+0x141>
 80497ae:	8b 45 08             	mov    0x8(%ebp),%eax
 80497b1:	8b 40 1c             	mov    0x1c(%eax),%eax
 80497b4:	c1 e0 03             	shl    $0x3,%eax
 80497b7:	89 04 24             	mov    %eax,(%esp)
 80497ba:	e8 21 f6 ff ff       	call   8048de0 <malloc@plt>
 80497bf:	89 45 fc             	mov    %eax,-0x4(%ebp)
 80497c2:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 80497c9:	eb 11                	jmp    80497dc <GAThread::decode_string(indiv*)+0x54>
 80497cb:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80497ce:	c1 e0 03             	shl    $0x3,%eax
 80497d1:	03 45 fc             	add    -0x4(%ebp),%eax
 80497d4:	d9 ee                	fldz   
 80497d6:	dd 18                	fstpl  (%eax)
 80497d8:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 80497dc:	8b 45 08             	mov    0x8(%ebp),%eax
 80497df:	8b 40 1c             	mov    0x1c(%eax),%eax
 80497e2:	83 e8 01             	sub    $0x1,%eax
 80497e5:	3b 45 f8             	cmp    -0x8(%ebp),%eax
 80497e8:	7d e1                	jge    80497cb <GAThread::decode_string(indiv*)+0x43>
 80497ea:	8b 45 0c             	mov    0xc(%ebp),%eax
 80497ed:	8b 90 80 00 00 00    	mov    0x80(%eax),%edx
 80497f3:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80497f6:	89 44 24 08          	mov    %eax,0x8(%esp)
 80497fa:	89 54 24 04          	mov    %edx,0x4(%esp)
 80497fe:	8b 45 08             	mov    0x8(%ebp),%eax
 8049801:	89 04 24             	mov    %eax,(%esp)
 8049804:	e8 49 fe ff ff       	call   8049652 <GAThread::decodevalue(unsigned int*, double*)>
 8049809:	8b 45 08             	mov    0x8(%ebp),%eax
 804980c:	8b 50 20             	mov    0x20(%eax),%edx
 804980f:	8b 45 08             	mov    0x8(%ebp),%eax
 8049812:	8b 40 1c             	mov    0x1c(%eax),%eax
 8049815:	89 c1                	mov    %eax,%ecx
 8049817:	89 d0                	mov    %edx,%eax
 8049819:	c1 fa 1f             	sar    $0x1f,%edx
 804981c:	f7 f9                	idiv   %ecx
 804981e:	50                   	push   %eax
 804981f:	db 04 24             	fildl  (%esp)
 8049822:	8d 64 24 04          	lea    0x4(%esp),%esp
 8049826:	dd 5c 24 08          	fstpl  0x8(%esp)
 804982a:	dd 05 90 f6 04 08    	fldl   0x804f690
 8049830:	dd 1c 24             	fstpl  (%esp)
 8049833:	e8 58 f4 ff ff       	call   8048c90 <pow@plt>
 8049838:	d9 e8                	fld1   
 804983a:	de e9                	fsubrp %st,%st(1)
 804983c:	dd 5d f0             	fstpl  -0x10(%ebp)
 804983f:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 8049846:	eb 68                	jmp    80498b0 <GAThread::decode_string(indiv*)+0x128>
 8049848:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804984b:	c1 e0 03             	shl    $0x3,%eax
 804984e:	89 c2                	mov    %eax,%edx
 8049850:	03 55 fc             	add    -0x4(%ebp),%edx
 8049853:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8049856:	c1 e0 03             	shl    $0x3,%eax
 8049859:	03 45 fc             	add    -0x4(%ebp),%eax
 804985c:	dd 00                	fldl   (%eax)
 804985e:	dc 75 f0             	fdivl  -0x10(%ebp)
 8049861:	dd 1a                	fstpl  (%edx)
 8049863:	8b 4d f8             	mov    -0x8(%ebp),%ecx
 8049866:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8049869:	c1 e0 03             	shl    $0x3,%eax
 804986c:	03 45 fc             	add    -0x4(%ebp),%eax
 804986f:	dd 00                	fldl   (%eax)
 8049871:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8049874:	8b 45 08             	mov    0x8(%ebp),%eax
 8049877:	d9 84 90 90 11 00 00 	flds   0x1190(%eax,%edx,4)
 804987e:	de c9                	fmulp  %st,%st(1)
 8049880:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8049883:	c1 e0 03             	shl    $0x3,%eax
 8049886:	03 45 fc             	add    -0x4(%ebp),%eax
 8049889:	dd 00                	fldl   (%eax)
 804988b:	d9 e8                	fld1   
 804988d:	de e1                	fsubp  %st,%st(1)
 804988f:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8049892:	8b 45 08             	mov    0x8(%ebp),%eax
 8049895:	d9 84 90 18 11 00 00 	flds   0x1118(%eax,%edx,4)
 804989c:	de c9                	fmulp  %st,%st(1)
 804989e:	de c1                	faddp  %st,%st(1)
 80498a0:	d9 5d ec             	fstps  -0x14(%ebp)
 80498a3:	d9 45 ec             	flds   -0x14(%ebp)
 80498a6:	8b 45 0c             	mov    0xc(%ebp),%eax
 80498a9:	d9 1c 88             	fstps  (%eax,%ecx,4)
 80498ac:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 80498b0:	8b 45 08             	mov    0x8(%ebp),%eax
 80498b3:	8b 40 1c             	mov    0x1c(%eax),%eax
 80498b6:	83 e8 01             	sub    $0x1,%eax
 80498b9:	3b 45 f8             	cmp    -0x8(%ebp),%eax
 80498bc:	7d 8a                	jge    8049848 <GAThread::decode_string(indiv*)+0xc0>
 80498be:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80498c1:	89 04 24             	mov    %eax,(%esp)
 80498c4:	e8 17 f4 ff ff       	call   8048ce0 <free@plt>
 80498c9:	c9                   	leave  
 80498ca:	c3                   	ret    
 80498cb:	90                   	nop    

080498cc <copy_individual(indiv*, indiv*, int)>:
 80498cc:	55                   	push   %ebp
 80498cd:	89 e5                	mov    %esp,%ebp
 80498cf:	83 ec 18             	sub    $0x18,%esp
 80498d2:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 80498d6:	75 0c                	jne    80498e4 <copy_individual(indiv*, indiv*, int)+0x18>
 80498d8:	c7 04 24 af e8 04 08 	movl   $0x804e8af,(%esp)
 80498df:	e8 e8 fc ff ff       	call   80495cc <error_ptr_null(char const*)>
 80498e4:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 80498e8:	75 0c                	jne    80498f6 <copy_individual(indiv*, indiv*, int)+0x2a>
 80498ea:	c7 04 24 c9 e8 04 08 	movl   $0x804e8c9,(%esp)
 80498f1:	e8 d6 fc ff ff       	call   80495cc <error_ptr_null(char const*)>
 80498f6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 80498fd:	eb 16                	jmp    8049915 <copy_individual(indiv*, indiv*, int)+0x49>
 80498ff:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 8049902:	8b 55 fc             	mov    -0x4(%ebp),%edx
 8049905:	8b 45 08             	mov    0x8(%ebp),%eax
 8049908:	8b 14 90             	mov    (%eax,%edx,4),%edx
 804990b:	8b 45 0c             	mov    0xc(%ebp),%eax
 804990e:	89 14 88             	mov    %edx,(%eax,%ecx,4)
 8049911:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 8049915:	83 7d fc 1d          	cmpl   $0x1d,-0x4(%ebp)
 8049919:	7e e4                	jle    80498ff <copy_individual(indiv*, indiv*, int)+0x33>
 804991b:	8b 45 08             	mov    0x8(%ebp),%eax
 804991e:	8b 50 7c             	mov    0x7c(%eax),%edx
 8049921:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049924:	89 50 7c             	mov    %edx,0x7c(%eax)
 8049927:	8b 45 08             	mov    0x8(%ebp),%eax
 804992a:	8b 50 78             	mov    0x78(%eax),%edx
 804992d:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049930:	89 50 78             	mov    %edx,0x78(%eax)
 8049933:	8b 45 08             	mov    0x8(%ebp),%eax
 8049936:	8b 90 88 00 00 00    	mov    0x88(%eax),%edx
 804993c:	8b 45 0c             	mov    0xc(%ebp),%eax
 804993f:	89 90 88 00 00 00    	mov    %edx,0x88(%eax)
 8049945:	8b 45 08             	mov    0x8(%ebp),%eax
 8049948:	8b 90 8c 00 00 00    	mov    0x8c(%eax),%edx
 804994e:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049951:	89 90 8c 00 00 00    	mov    %edx,0x8c(%eax)
 8049957:	8b 45 08             	mov    0x8(%ebp),%eax
 804995a:	8b 90 90 00 00 00    	mov    0x90(%eax),%edx
 8049960:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049963:	89 90 90 00 00 00    	mov    %edx,0x90(%eax)
 8049969:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 8049970:	eb 2c                	jmp    804999e <copy_individual(indiv*, indiv*, int)+0xd2>
 8049972:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049975:	8b 90 80 00 00 00    	mov    0x80(%eax),%edx
 804997b:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804997e:	c1 e0 02             	shl    $0x2,%eax
 8049981:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 8049984:	8b 45 08             	mov    0x8(%ebp),%eax
 8049987:	8b 90 80 00 00 00    	mov    0x80(%eax),%edx
 804998d:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049990:	c1 e0 02             	shl    $0x2,%eax
 8049993:	8d 04 02             	lea    (%edx,%eax,1),%eax
 8049996:	8b 00                	mov    (%eax),%eax
 8049998:	89 01                	mov    %eax,(%ecx)
 804999a:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 804999e:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80499a1:	3b 45 10             	cmp    0x10(%ebp),%eax
 80499a4:	7c cc                	jl     8049972 <copy_individual(indiv*, indiv*, int)+0xa6>
 80499a6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 80499ad:	eb 2c                	jmp    80499db <copy_individual(indiv*, indiv*, int)+0x10f>
 80499af:	8b 45 0c             	mov    0xc(%ebp),%eax
 80499b2:	8b 90 84 00 00 00    	mov    0x84(%eax),%edx
 80499b8:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80499bb:	c1 e0 02             	shl    $0x2,%eax
 80499be:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 80499c1:	8b 45 08             	mov    0x8(%ebp),%eax
 80499c4:	8b 90 84 00 00 00    	mov    0x84(%eax),%edx
 80499ca:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80499cd:	c1 e0 02             	shl    $0x2,%eax
 80499d0:	8d 04 02             	lea    (%edx,%eax,1),%eax
 80499d3:	8b 00                	mov    (%eax),%eax
 80499d5:	89 01                	mov    %eax,(%ecx)
 80499d7:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 80499db:	83 7d fc 07          	cmpl   $0x7,-0x4(%ebp)
 80499df:	7e ce                	jle    80499af <copy_individual(indiv*, indiv*, int)+0xe3>
 80499e1:	c9                   	leave  
 80499e2:	c3                   	ret    
 80499e3:	90                   	nop    

080499e4 <nomemory(char const*)>:
 80499e4:	55                   	push   %ebp
 80499e5:	89 e5                	mov    %esp,%ebp
 80499e7:	83 ec 08             	sub    $0x8,%esp
 80499ea:	8b 45 08             	mov    0x8(%ebp),%eax
 80499ed:	89 44 24 04          	mov    %eax,0x4(%esp)
 80499f1:	c7 04 24 e4 e8 04 08 	movl   $0x804e8e4,(%esp)
 80499f8:	e8 73 f3 ff ff       	call   8048d70 <printf@plt>
 80499fd:	c7 04 24 53 e8 04 08 	movl   $0x804e853,(%esp)
 8049a04:	e8 67 f3 ff ff       	call   8048d70 <printf@plt>
 8049a09:	c7 04 24 ff ff ff ff 	movl   $0xffffffff,(%esp)
 8049a10:	e8 8b f4 ff ff       	call   8048ea0 <exit@plt>
 8049a15:	90                   	nop    

08049a16 <initreport(_IO_FILE*)>:
 8049a16:	55                   	push   %ebp
 8049a17:	89 e5                	mov    %esp,%ebp
 8049a19:	83 ec 38             	sub    $0x38,%esp
 8049a1c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 8049a20:	75 0c                	jne    8049a2e <initreport(_IO_FILE*)+0x18>
 8049a22:	c7 04 24 08 e9 04 08 	movl   $0x804e908,(%esp)
 8049a29:	e8 9e fb ff ff       	call   80495cc <error_ptr_null(char const*)>
 8049a2e:	8b 45 08             	mov    0x8(%ebp),%eax
 8049a31:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049a35:	c7 44 24 08 2f 00 00 	movl   $0x2f,0x8(%esp)
 8049a3c:	00 
 8049a3d:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049a44:	00 
 8049a45:	c7 04 24 20 e9 04 08 	movl   $0x804e920,(%esp)
 8049a4c:	e8 4f f3 ff ff       	call   8048da0 <fwrite@plt>
 8049a51:	8b 45 08             	mov    0x8(%ebp),%eax
 8049a54:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049a58:	c7 44 24 08 2e 00 00 	movl   $0x2e,0x8(%esp)
 8049a5f:	00 
 8049a60:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049a67:	00 
 8049a68:	c7 04 24 50 e9 04 08 	movl   $0x804e950,(%esp)
 8049a6f:	e8 2c f3 ff ff       	call   8048da0 <fwrite@plt>
 8049a74:	8b 45 08             	mov    0x8(%ebp),%eax
 8049a77:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049a7b:	c7 44 24 08 2e 00 00 	movl   $0x2e,0x8(%esp)
 8049a82:	00 
 8049a83:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049a8a:	00 
 8049a8b:	c7 04 24 80 e9 04 08 	movl   $0x804e980,(%esp)
 8049a92:	e8 09 f3 ff ff       	call   8048da0 <fwrite@plt>
 8049a97:	a1 b8 04 05 08       	mov    0x80504b8,%eax
 8049a9c:	85 c0                	test   %eax,%eax
 8049a9e:	74 23                	je     8049ac3 <initreport(_IO_FILE*)+0xad>
 8049aa0:	8b 45 08             	mov    0x8(%ebp),%eax
 8049aa3:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049aa7:	c7 44 24 08 12 00 00 	movl   $0x12,0x8(%esp)
 8049aae:	00 
 8049aaf:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049ab6:	00 
 8049ab7:	c7 04 24 af e9 04 08 	movl   $0x804e9af,(%esp)
 8049abe:	e8 dd f2 ff ff       	call   8048da0 <fwrite@plt>
 8049ac3:	a1 bc 04 05 08       	mov    0x80504bc,%eax
 8049ac8:	85 c0                	test   %eax,%eax
 8049aca:	74 52                	je     8049b1e <initreport(_IO_FILE*)+0x108>
 8049acc:	a1 9c 04 05 08       	mov    0x805049c,%eax
 8049ad1:	83 f8 01             	cmp    $0x1,%eax
 8049ad4:	75 25                	jne    8049afb <initreport(_IO_FILE*)+0xe5>
 8049ad6:	8b 45 08             	mov    0x8(%ebp),%eax
 8049ad9:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049add:	c7 44 24 08 15 00 00 	movl   $0x15,0x8(%esp)
 8049ae4:	00 
 8049ae5:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049aec:	00 
 8049aed:	c7 04 24 c2 e9 04 08 	movl   $0x804e9c2,(%esp)
 8049af4:	e8 a7 f2 ff ff       	call   8048da0 <fwrite@plt>
 8049af9:	eb 23                	jmp    8049b1e <initreport(_IO_FILE*)+0x108>
 8049afb:	8b 45 08             	mov    0x8(%ebp),%eax
 8049afe:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049b02:	c7 44 24 08 15 00 00 	movl   $0x15,0x8(%esp)
 8049b09:	00 
 8049b0a:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049b11:	00 
 8049b12:	c7 04 24 d8 e9 04 08 	movl   $0x804e9d8,(%esp)
 8049b19:	e8 82 f2 ff ff       	call   8048da0 <fwrite@plt>
 8049b1e:	a1 a4 04 05 08       	mov    0x80504a4,%eax
 8049b23:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8049b26:	83 7d e8 02          	cmpl   $0x2,-0x18(%ebp)
 8049b2a:	74 2c                	je     8049b58 <initreport(_IO_FILE*)+0x142>
 8049b2c:	83 7d e8 03          	cmpl   $0x3,-0x18(%ebp)
 8049b30:	74 4b                	je     8049b7d <initreport(_IO_FILE*)+0x167>
 8049b32:	83 7d e8 01          	cmpl   $0x1,-0x18(%ebp)
 8049b36:	74 02                	je     8049b3a <initreport(_IO_FILE*)+0x124>
 8049b38:	eb 66                	jmp    8049ba0 <initreport(_IO_FILE*)+0x18a>
 8049b3a:	a1 c4 04 05 08       	mov    0x80504c4,%eax
 8049b3f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049b43:	c7 44 24 04 f0 e9 04 	movl   $0x804e9f0,0x4(%esp)
 8049b4a:	08 
 8049b4b:	8b 45 08             	mov    0x8(%ebp),%eax
 8049b4e:	89 04 24             	mov    %eax,(%esp)
 8049b51:	e8 6a f2 ff ff       	call   8048dc0 <fprintf@plt>
 8049b56:	eb 48                	jmp    8049ba0 <initreport(_IO_FILE*)+0x18a>
 8049b58:	8b 45 08             	mov    0x8(%ebp),%eax
 8049b5b:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049b5f:	c7 44 24 08 1f 00 00 	movl   $0x1f,0x8(%esp)
 8049b66:	00 
 8049b67:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049b6e:	00 
 8049b6f:	c7 04 24 18 ea 04 08 	movl   $0x804ea18,(%esp)
 8049b76:	e8 25 f2 ff ff       	call   8048da0 <fwrite@plt>
 8049b7b:	eb 23                	jmp    8049ba0 <initreport(_IO_FILE*)+0x18a>
 8049b7d:	8b 45 08             	mov    0x8(%ebp),%eax
 8049b80:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049b84:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)
 8049b8b:	00 
 8049b8c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049b93:	00 
 8049b94:	c7 04 24 38 ea 04 08 	movl   $0x804ea38,(%esp)
 8049b9b:	e8 00 f2 ff ff       	call   8048da0 <fwrite@plt>
 8049ba0:	a1 a0 04 05 08       	mov    0x80504a0,%eax
 8049ba5:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8049ba8:	83 7d ec 02          	cmpl   $0x2,-0x14(%ebp)
 8049bac:	74 33                	je     8049be1 <initreport(_IO_FILE*)+0x1cb>
 8049bae:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)
 8049bb2:	74 42                	je     8049bf6 <initreport(_IO_FILE*)+0x1e0>
 8049bb4:	83 7d ec 01          	cmpl   $0x1,-0x14(%ebp)
 8049bb8:	74 02                	je     8049bbc <initreport(_IO_FILE*)+0x1a6>
 8049bba:	eb 5f                	jmp    8049c1b <initreport(_IO_FILE*)+0x205>
 8049bbc:	8b 45 08             	mov    0x8(%ebp),%eax
 8049bbf:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049bc3:	c7 44 24 08 2c 00 00 	movl   $0x2c,0x8(%esp)
 8049bca:	00 
 8049bcb:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049bd2:	00 
 8049bd3:	c7 04 24 64 ea 04 08 	movl   $0x804ea64,(%esp)
 8049bda:	e8 c1 f1 ff ff       	call   8048da0 <fwrite@plt>
 8049bdf:	eb 5d                	jmp    8049c3e <initreport(_IO_FILE*)+0x228>
 8049be1:	c7 44 24 04 94 ea 04 	movl   $0x804ea94,0x4(%esp)
 8049be8:	08 
 8049be9:	8b 45 08             	mov    0x8(%ebp),%eax
 8049bec:	89 04 24             	mov    %eax,(%esp)
 8049bef:	e8 cc f1 ff ff       	call   8048dc0 <fprintf@plt>
 8049bf4:	eb 48                	jmp    8049c3e <initreport(_IO_FILE*)+0x228>
 8049bf6:	8b 45 08             	mov    0x8(%ebp),%eax
 8049bf9:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049bfd:	c7 44 24 08 29 00 00 	movl   $0x29,0x8(%esp)
 8049c04:	00 
 8049c05:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049c0c:	00 
 8049c0d:	c7 04 24 cc ea 04 08 	movl   $0x804eacc,(%esp)
 8049c14:	e8 87 f1 ff ff       	call   8048da0 <fwrite@plt>
 8049c19:	eb 23                	jmp    8049c3e <initreport(_IO_FILE*)+0x228>
 8049c1b:	8b 45 08             	mov    0x8(%ebp),%eax
 8049c1e:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049c22:	c7 44 24 08 1e 00 00 	movl   $0x1e,0x8(%esp)
 8049c29:	00 
 8049c2a:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049c31:	00 
 8049c32:	c7 04 24 f8 ea 04 08 	movl   $0x804eaf8,(%esp)
 8049c39:	e8 62 f1 ff ff       	call   8048da0 <fwrite@plt>
 8049c3e:	a1 b8 04 05 08       	mov    0x80504b8,%eax
 8049c43:	85 c0                	test   %eax,%eax
 8049c45:	74 25                	je     8049c6c <initreport(_IO_FILE*)+0x256>
 8049c47:	8b 45 08             	mov    0x8(%ebp),%eax
 8049c4a:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049c4e:	c7 44 24 08 26 00 00 	movl   $0x26,0x8(%esp)
 8049c55:	00 
 8049c56:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049c5d:	00 
 8049c5e:	c7 04 24 18 eb 04 08 	movl   $0x804eb18,(%esp)
 8049c65:	e8 36 f1 ff ff       	call   8048da0 <fwrite@plt>
 8049c6a:	eb 23                	jmp    8049c8f <initreport(_IO_FILE*)+0x279>
 8049c6c:	8b 45 08             	mov    0x8(%ebp),%eax
 8049c6f:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049c73:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)
 8049c7a:	00 
 8049c7b:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049c82:	00 
 8049c83:	c7 04 24 40 eb 04 08 	movl   $0x804eb40,(%esp)
 8049c8a:	e8 11 f1 ff ff       	call   8048da0 <fwrite@plt>
 8049c8f:	8b 45 08             	mov    0x8(%ebp),%eax
 8049c92:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049c96:	c7 44 24 08 18 00 00 	movl   $0x18,0x8(%esp)
 8049c9d:	00 
 8049c9e:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049ca5:	00 
 8049ca6:	c7 04 24 69 eb 04 08 	movl   $0x804eb69,(%esp)
 8049cad:	e8 ee f0 ff ff       	call   8048da0 <fwrite@plt>
 8049cb2:	a1 b4 04 05 08       	mov    0x80504b4,%eax
 8049cb7:	85 c0                	test   %eax,%eax
 8049cb9:	74 25                	je     8049ce0 <initreport(_IO_FILE*)+0x2ca>
 8049cbb:	8b 45 08             	mov    0x8(%ebp),%eax
 8049cbe:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049cc2:	c7 44 24 08 06 00 00 	movl   $0x6,0x8(%esp)
 8049cc9:	00 
 8049cca:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049cd1:	00 
 8049cd2:	c7 04 24 82 eb 04 08 	movl   $0x804eb82,(%esp)
 8049cd9:	e8 c2 f0 ff ff       	call   8048da0 <fwrite@plt>
 8049cde:	eb 23                	jmp    8049d03 <initreport(_IO_FILE*)+0x2ed>
 8049ce0:	8b 45 08             	mov    0x8(%ebp),%eax
 8049ce3:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049ce7:	c7 44 24 08 09 00 00 	movl   $0x9,0x8(%esp)
 8049cee:	00 
 8049cef:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049cf6:	00 
 8049cf7:	c7 04 24 89 eb 04 08 	movl   $0x804eb89,(%esp)
 8049cfe:	e8 9d f0 ff ff       	call   8048da0 <fwrite@plt>
 8049d03:	a1 80 04 05 08       	mov    0x8050480,%eax
 8049d08:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049d0c:	c7 44 24 04 94 eb 04 	movl   $0x804eb94,0x4(%esp)
 8049d13:	08 
 8049d14:	8b 45 08             	mov    0x8(%ebp),%eax
 8049d17:	89 04 24             	mov    %eax,(%esp)
 8049d1a:	e8 a1 f0 ff ff       	call   8048dc0 <fprintf@plt>
 8049d1f:	a1 84 04 05 08       	mov    0x8050484,%eax
 8049d24:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049d28:	c7 44 24 04 b8 eb 04 	movl   $0x804ebb8,0x4(%esp)
 8049d2f:	08 
 8049d30:	8b 45 08             	mov    0x8(%ebp),%eax
 8049d33:	89 04 24             	mov    %eax,(%esp)
 8049d36:	e8 85 f0 ff ff       	call   8048dc0 <fprintf@plt>
 8049d3b:	d9 05 e0 04 05 08    	flds   0x80504e0
 8049d41:	dd 5c 24 08          	fstpl  0x8(%esp)
 8049d45:	c7 44 24 04 dc eb 04 	movl   $0x804ebdc,0x4(%esp)
 8049d4c:	08 
 8049d4d:	8b 45 08             	mov    0x8(%ebp),%eax
 8049d50:	89 04 24             	mov    %eax,(%esp)
 8049d53:	e8 68 f0 ff ff       	call   8048dc0 <fprintf@plt>
 8049d58:	d9 05 e4 04 05 08    	flds   0x80504e4
 8049d5e:	dd 5c 24 08          	fstpl  0x8(%esp)
 8049d62:	c7 44 24 04 04 ec 04 	movl   $0x804ec04,0x4(%esp)
 8049d69:	08 
 8049d6a:	8b 45 08             	mov    0x8(%ebp),%eax
 8049d6d:	89 04 24             	mov    %eax,(%esp)
 8049d70:	e8 4b f0 ff ff       	call   8048dc0 <fprintf@plt>
 8049d75:	a1 ac 04 05 08       	mov    0x80504ac,%eax
 8049d7a:	85 c0                	test   %eax,%eax
 8049d7c:	74 40                	je     8049dbe <initreport(_IO_FILE*)+0x3a8>
 8049d7e:	8b 45 08             	mov    0x8(%ebp),%eax
 8049d81:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049d85:	c7 44 24 08 16 00 00 	movl   $0x16,0x8(%esp)
 8049d8c:	00 
 8049d8d:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049d94:	00 
 8049d95:	c7 04 24 29 ec 04 08 	movl   $0x804ec29,(%esp)
 8049d9c:	e8 ff ef ff ff       	call   8048da0 <fwrite@plt>
 8049da1:	d9 05 f8 06 05 08    	flds   0x80506f8
 8049da7:	dd 5c 24 08          	fstpl  0x8(%esp)
 8049dab:	c7 44 24 04 40 ec 04 	movl   $0x804ec40,0x4(%esp)
 8049db2:	08 
 8049db3:	8b 45 08             	mov    0x8(%ebp),%eax
 8049db6:	89 04 24             	mov    %eax,(%esp)
 8049db9:	e8 02 f0 ff ff       	call   8048dc0 <fprintf@plt>
 8049dbe:	a1 b8 04 05 08       	mov    0x80504b8,%eax
 8049dc3:	85 c0                	test   %eax,%eax
 8049dc5:	74 1c                	je     8049de3 <initreport(_IO_FILE*)+0x3cd>
 8049dc7:	a1 94 04 05 08       	mov    0x8050494,%eax
 8049dcc:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049dd0:	c7 44 24 04 68 ec 04 	movl   $0x804ec68,0x4(%esp)
 8049dd7:	08 
 8049dd8:	8b 45 08             	mov    0x8(%ebp),%eax
 8049ddb:	89 04 24             	mov    %eax,(%esp)
 8049dde:	e8 dd ef ff ff       	call   8048dc0 <fprintf@plt>
 8049de3:	a1 8c 04 05 08       	mov    0x805048c,%eax
 8049de8:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049dec:	c7 44 24 04 8c ec 04 	movl   $0x804ec8c,0x4(%esp)
 8049df3:	08 
 8049df4:	8b 45 08             	mov    0x8(%ebp),%eax
 8049df7:	89 04 24             	mov    %eax,(%esp)
 8049dfa:	e8 c1 ef ff ff       	call   8048dc0 <fprintf@plt>
 8049dff:	a1 a8 04 05 08       	mov    0x80504a8,%eax
 8049e04:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049e08:	c7 44 24 04 b0 ec 04 	movl   $0x804ecb0,0x4(%esp)
 8049e0f:	08 
 8049e10:	8b 45 08             	mov    0x8(%ebp),%eax
 8049e13:	89 04 24             	mov    %eax,(%esp)
 8049e16:	e8 a5 ef ff ff       	call   8048dc0 <fprintf@plt>
 8049e1b:	a1 bc 04 05 08       	mov    0x80504bc,%eax
 8049e20:	85 c0                	test   %eax,%eax
 8049e22:	74 44                	je     8049e68 <initreport(_IO_FILE*)+0x452>
 8049e24:	a1 9c 04 05 08       	mov    0x805049c,%eax
 8049e29:	83 f8 01             	cmp    $0x1,%eax
 8049e2c:	75 3a                	jne    8049e68 <initreport(_IO_FILE*)+0x452>
 8049e2e:	d9 05 d8 04 05 08    	flds   0x80504d8
 8049e34:	dd 5c 24 08          	fstpl  0x8(%esp)
 8049e38:	c7 44 24 04 d4 ec 04 	movl   $0x804ecd4,0x4(%esp)
 8049e3f:	08 
 8049e40:	8b 45 08             	mov    0x8(%ebp),%eax
 8049e43:	89 04 24             	mov    %eax,(%esp)
 8049e46:	e8 75 ef ff ff       	call   8048dc0 <fprintf@plt>
 8049e4b:	d9 05 dc 04 05 08    	flds   0x80504dc
 8049e51:	dd 5c 24 08          	fstpl  0x8(%esp)
 8049e55:	c7 44 24 04 fc ec 04 	movl   $0x804ecfc,0x4(%esp)
 8049e5c:	08 
 8049e5d:	8b 45 08             	mov    0x8(%ebp),%eax
 8049e60:	89 04 24             	mov    %eax,(%esp)
 8049e63:	e8 58 ef ff ff       	call   8048dc0 <fprintf@plt>
 8049e68:	a1 a4 04 05 08       	mov    0x80504a4,%eax
 8049e6d:	83 f8 01             	cmp    $0x1,%eax
 8049e70:	75 23                	jne    8049e95 <initreport(_IO_FILE*)+0x47f>
 8049e72:	8b 45 08             	mov    0x8(%ebp),%eax
 8049e75:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049e79:	c7 44 24 08 1e 00 00 	movl   $0x1e,0x8(%esp)
 8049e80:	00 
 8049e81:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049e88:	00 
 8049e89:	c7 04 24 24 ed 04 08 	movl   $0x804ed24,(%esp)
 8049e90:	e8 0b ef ff ff       	call   8048da0 <fwrite@plt>
 8049e95:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 8049e9c:	eb 3f                	jmp    8049edd <initreport(_IO_FILE*)+0x4c7>
 8049e9e:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049ea1:	d9 04 85 80 06 05 08 	flds   0x8050680(,%eax,4)
 8049ea8:	8b 55 fc             	mov    -0x4(%ebp),%edx
 8049eab:	83 c2 01             	add    $0x1,%edx
 8049eae:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049eb1:	d9 04 85 00 06 05 08 	flds   0x8050600(,%eax,4)
 8049eb8:	d9 c9                	fxch   %st(1)
 8049eba:	dd 5c 24 14          	fstpl  0x14(%esp)
 8049ebe:	89 54 24 10          	mov    %edx,0x10(%esp)
 8049ec2:	dd 5c 24 08          	fstpl  0x8(%esp)
 8049ec6:	c7 44 24 04 44 ed 04 	movl   $0x804ed44,0x4(%esp)
 8049ecd:	08 
 8049ece:	8b 45 08             	mov    0x8(%ebp),%eax
 8049ed1:	89 04 24             	mov    %eax,(%esp)
 8049ed4:	e8 e7 ee ff ff       	call   8048dc0 <fprintf@plt>
 8049ed9:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 8049edd:	a1 8c 04 05 08       	mov    0x805048c,%eax
 8049ee2:	83 e8 01             	sub    $0x1,%eax
 8049ee5:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 8049ee8:	7d b4                	jge    8049e9e <initreport(_IO_FILE*)+0x488>
 8049eea:	8b 45 08             	mov    0x8(%ebp),%eax
 8049eed:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049ef1:	c7 44 24 08 33 00 00 	movl   $0x33,0x8(%esp)
 8049ef8:	00 
 8049ef9:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049f00:	00 
 8049f01:	c7 04 24 64 ed 04 08 	movl   $0x804ed64,(%esp)
 8049f08:	e8 93 ee ff ff       	call   8048da0 <fwrite@plt>
 8049f0d:	c9                   	leave  
 8049f0e:	c3                   	ret    
 8049f0f:	90                   	nop    

08049f10 <writechrom1(unsigned int*, float*)>:
 8049f10:	55                   	push   %ebp
 8049f11:	89 e5                	mov    %esp,%ebp
 8049f13:	53                   	push   %ebx
 8049f14:	83 ec 54             	sub    $0x54,%esp
 8049f17:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
 8049f1e:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)
 8049f25:	a1 b8 04 05 08       	mov    0x80504b8,%eax
 8049f2a:	85 c0                	test   %eax,%eax
 8049f2c:	0f 84 42 01 00 00    	je     804a074 <writechrom1(unsigned int*, float*)+0x164>
 8049f32:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 8049f36:	75 0c                	jne    8049f44 <writechrom1(unsigned int*, float*)+0x34>
 8049f38:	c7 04 24 98 ed 04 08 	movl   $0x804ed98,(%esp)
 8049f3f:	e8 88 f6 ff ff       	call   80495cc <error_ptr_null(char const*)>
 8049f44:	8b 45 08             	mov    0x8(%ebp),%eax
 8049f47:	8b 00                	mov    (%eax),%eax
 8049f49:	83 e0 07             	and    $0x7,%eax
 8049f4c:	83 c0 01             	add    $0x1,%eax
 8049f4f:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8049f52:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 8049f59:	e9 0a 01 00 00       	jmp    804a068 <writechrom1(unsigned int*, float*)+0x158>
 8049f5e:	8b 5d e8             	mov    -0x18(%ebp),%ebx
 8049f61:	83 c3 01             	add    $0x1,%ebx
 8049f64:	c7 44 24 04 ac ed 04 	movl   $0x804edac,0x4(%esp)
 8049f6b:	08 
 8049f6c:	c7 04 24 e0 03 05 08 	movl   $0x80503e0,(%esp)
 8049f73:	e8 58 ed ff ff       	call   8048cd0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
 8049f78:	89 5c 24 04          	mov    %ebx,0x4(%esp)
 8049f7c:	89 04 24             	mov    %eax,(%esp)
 8049f7f:	e8 5c ec ff ff       	call   8048be0 <std::ostream::operator<<(int)@plt>
 8049f84:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)
 8049f8b:	00 
 8049f8c:	89 04 24             	mov    %eax,(%esp)
 8049f8f:	e8 1c ed ff ff       	call   8048cb0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char)@plt>
 8049f94:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 8049f9b:	e9 8b 00 00 00       	jmp    804a02b <writechrom1(unsigned int*, float*)+0x11b>
 8049fa0:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8049fa3:	89 d0                	mov    %edx,%eax
 8049fa5:	01 c0                	add    %eax,%eax
 8049fa7:	01 d0                	add    %edx,%eax
 8049fa9:	c1 e0 02             	shl    $0x2,%eax
 8049fac:	03 45 f8             	add    -0x8(%ebp),%eax
 8049faf:	01 c0                	add    %eax,%eax
 8049fb1:	83 c0 04             	add    $0x4,%eax
 8049fb4:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049fb7:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049fba:	c1 e8 05             	shr    $0x5,%eax
 8049fbd:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8049fc0:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8049fc3:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8049fc6:	c1 e0 05             	shl    $0x5,%eax
 8049fc9:	89 d1                	mov    %edx,%ecx
 8049fcb:	29 c1                	sub    %eax,%ecx
 8049fcd:	89 c8                	mov    %ecx,%eax
 8049fcf:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8049fd2:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8049fd5:	c1 e0 02             	shl    $0x2,%eax
 8049fd8:	03 45 08             	add    0x8(%ebp),%eax
 8049fdb:	8b 00                	mov    (%eax),%eax
 8049fdd:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 8049fe0:	83 c1 01             	add    $0x1,%ecx
 8049fe3:	d3 e8                	shr    %cl,%eax
 8049fe5:	23 45 cc             	and    -0x34(%ebp),%eax
 8049fe8:	8d 14 00             	lea    (%eax,%eax,1),%edx
 8049feb:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8049fee:	c1 e0 02             	shl    $0x2,%eax
 8049ff1:	03 45 08             	add    0x8(%ebp),%eax
 8049ff4:	8b 00                	mov    (%eax),%eax
 8049ff6:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 8049ff9:	d3 e8                	shr    %cl,%eax
 8049ffb:	23 45 cc             	and    -0x34(%ebp),%eax
 8049ffe:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a001:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804a004:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804a007:	89 44 24 04          	mov    %eax,0x4(%esp)
 804a00b:	c7 04 24 e0 03 05 08 	movl   $0x80503e0,(%esp)
 804a012:	e8 c9 eb ff ff       	call   8048be0 <std::ostream::operator<<(int)@plt>
 804a017:	c7 44 24 04 b7 ed 04 	movl   $0x804edb7,0x4(%esp)
 804a01e:	08 
 804a01f:	89 04 24             	mov    %eax,(%esp)
 804a022:	e8 a9 ec ff ff       	call   8048cd0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
 804a027:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 804a02b:	83 7d f8 0b          	cmpl   $0xb,-0x8(%ebp)
 804a02f:	0f 8e 6b ff ff ff    	jle    8049fa0 <writechrom1(unsigned int*, float*)+0x90>
 804a035:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a038:	c1 e0 02             	shl    $0x2,%eax
 804a03b:	03 45 0c             	add    0xc(%ebp),%eax
 804a03e:	8b 00                	mov    (%eax),%eax
 804a040:	89 44 24 04          	mov    %eax,0x4(%esp)
 804a044:	c7 04 24 e0 03 05 08 	movl   $0x80503e0,(%esp)
 804a04b:	e8 e0 ed ff ff       	call   8048e30 <std::ostream::operator<<(float)@plt>
 804a050:	c7 44 24 04 b9 ed 04 	movl   $0x804edb9,0x4(%esp)
 804a057:	08 
 804a058:	c7 04 24 e0 03 05 08 	movl   $0x80503e0,(%esp)
 804a05f:	e8 6c ec ff ff       	call   8048cd0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
 804a064:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
 804a068:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a06b:	3b 45 c4             	cmp    -0x3c(%ebp),%eax
 804a06e:	0f 8c ea fe ff ff    	jl     8049f5e <writechrom1(unsigned int*, float*)+0x4e>
 804a074:	83 c4 54             	add    $0x54,%esp
 804a077:	5b                   	pop    %ebx
 804a078:	5d                   	pop    %ebp
 804a079:	c3                   	ret    

0804a07a <writechrom(unsigned int*)>:
 804a07a:	55                   	push   %ebp
 804a07b:	89 e5                	mov    %esp,%ebp
 804a07d:	83 ec 38             	sub    $0x38,%esp
 804a080:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 804a087:	c7 45 e8 03 00 00 00 	movl   $0x3,-0x18(%ebp)
 804a08e:	a1 b8 04 05 08       	mov    0x80504b8,%eax
 804a093:	85 c0                	test   %eax,%eax
 804a095:	0f 84 1d 01 00 00    	je     804a1b8 <writechrom(unsigned int*)+0x13e>
 804a09b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 804a09f:	75 0c                	jne    804a0ad <writechrom(unsigned int*)+0x33>
 804a0a1:	c7 04 24 98 ed 04 08 	movl   $0x804ed98,(%esp)
 804a0a8:	e8 1f f5 ff ff       	call   80495cc <error_ptr_null(char const*)>
 804a0ad:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 804a0b4:	e9 e5 00 00 00       	jmp    804a19e <writechrom(unsigned int*)+0x124>
 804a0b9:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804a0bc:	c1 e0 02             	shl    $0x2,%eax
 804a0bf:	03 45 08             	add    0x8(%ebp),%eax
 804a0c2:	8b 00                	mov    (%eax),%eax
 804a0c4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804a0c7:	a1 98 04 05 08       	mov    0x8050498,%eax
 804a0cc:	83 e8 01             	sub    $0x1,%eax
 804a0cf:	3b 45 f8             	cmp    -0x8(%ebp),%eax
 804a0d2:	75 18                	jne    804a0ec <writechrom(unsigned int*)+0x72>
 804a0d4:	a1 94 04 05 08       	mov    0x8050494,%eax
 804a0d9:	89 c2                	mov    %eax,%edx
 804a0db:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804a0de:	c1 e0 05             	shl    $0x5,%eax
 804a0e1:	89 d1                	mov    %edx,%ecx
 804a0e3:	29 c1                	sub    %eax,%ecx
 804a0e5:	89 c8                	mov    %ecx,%eax
 804a0e7:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804a0ea:	eb 07                	jmp    804a0f3 <writechrom(unsigned int*)+0x79>
 804a0ec:	c7 45 f4 20 00 00 00 	movl   $0x20,-0xc(%ebp)
 804a0f3:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804a0fa:	e9 8f 00 00 00       	jmp    804a18e <writechrom(unsigned int*)+0x114>
 804a0ff:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a102:	23 45 e4             	and    -0x1c(%ebp),%eax
 804a105:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804a108:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804a10b:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804a10e:	83 7d dc 01          	cmpl   $0x1,-0x24(%ebp)
 804a112:	74 48                	je     804a15c <writechrom(unsigned int*)+0xe2>
 804a114:	83 7d dc 01          	cmpl   $0x1,-0x24(%ebp)
 804a118:	7f 08                	jg     804a122 <writechrom(unsigned int*)+0xa8>
 804a11a:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
 804a11e:	74 52                	je     804a172 <writechrom(unsigned int*)+0xf8>
 804a120:	eb 64                	jmp    804a186 <writechrom(unsigned int*)+0x10c>
 804a122:	83 7d dc 02          	cmpl   $0x2,-0x24(%ebp)
 804a126:	74 1e                	je     804a146 <writechrom(unsigned int*)+0xcc>
 804a128:	83 7d dc 03          	cmpl   $0x3,-0x24(%ebp)
 804a12c:	74 02                	je     804a130 <writechrom(unsigned int*)+0xb6>
 804a12e:	eb 56                	jmp    804a186 <writechrom(unsigned int*)+0x10c>
 804a130:	c7 44 24 04 bc ed 04 	movl   $0x804edbc,0x4(%esp)
 804a137:	08 
 804a138:	c7 04 24 e0 03 05 08 	movl   $0x80503e0,(%esp)
 804a13f:	e8 8c eb ff ff       	call   8048cd0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
 804a144:	eb 40                	jmp    804a186 <writechrom(unsigned int*)+0x10c>
 804a146:	c7 44 24 04 bf ed 04 	movl   $0x804edbf,0x4(%esp)
 804a14d:	08 
 804a14e:	c7 04 24 e0 03 05 08 	movl   $0x80503e0,(%esp)
 804a155:	e8 76 eb ff ff       	call   8048cd0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
 804a15a:	eb 2a                	jmp    804a186 <writechrom(unsigned int*)+0x10c>
 804a15c:	c7 44 24 04 c2 ed 04 	movl   $0x804edc2,0x4(%esp)
 804a163:	08 
 804a164:	c7 04 24 e0 03 05 08 	movl   $0x80503e0,(%esp)
 804a16b:	e8 60 eb ff ff       	call   8048cd0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
 804a170:	eb 14                	jmp    804a186 <writechrom(unsigned int*)+0x10c>
 804a172:	c7 44 24 04 c5 ed 04 	movl   $0x804edc5,0x4(%esp)
 804a179:	08 
 804a17a:	c7 04 24 e0 03 05 08 	movl   $0x80503e0,(%esp)
 804a181:	e8 4a eb ff ff       	call   8048cd0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
 804a186:	c1 6d e4 02          	shrl   $0x2,-0x1c(%ebp)
 804a18a:	83 45 fc 02          	addl   $0x2,-0x4(%ebp)
 804a18e:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804a191:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804a194:	0f 8c 65 ff ff ff    	jl     804a0ff <writechrom(unsigned int*)+0x85>
 804a19a:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 804a19e:	a1 98 04 05 08       	mov    0x8050498,%eax
 804a1a3:	39 45 f8             	cmp    %eax,-0x8(%ebp)
 804a1a6:	0f 8c 0d ff ff ff    	jl     804a0b9 <writechrom(unsigned int*)+0x3f>
 804a1ac:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)
 804a1b3:	e8 b8 ea ff ff       	call   8048c70 <putchar@plt>
 804a1b8:	c9                   	leave  
 804a1b9:	c3                   	ret    

0804a1ba <initpool()>:
 804a1ba:	55                   	push   %ebp
 804a1bb:	89 e5                	mov    %esp,%ebp
 804a1bd:	53                   	push   %ebx
 804a1be:	83 ec 54             	sub    $0x54,%esp
 804a1c1:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)
 804a1c8:	a1 94 04 05 08       	mov    0x8050494,%eax
 804a1cd:	c1 e8 05             	shr    $0x5,%eax
 804a1d0:	a3 98 04 05 08       	mov    %eax,0x8050498
 804a1d5:	a1 94 04 05 08       	mov    0x8050494,%eax
 804a1da:	83 e0 1f             	and    $0x1f,%eax
 804a1dd:	85 c0                	test   %eax,%eax
 804a1df:	74 0d                	je     804a1ee <initpool()+0x34>
 804a1e1:	a1 98 04 05 08       	mov    0x8050498,%eax
 804a1e6:	83 c0 01             	add    $0x1,%eax
 804a1e9:	a3 98 04 05 08       	mov    %eax,0x8050498
 804a1ee:	a1 98 04 05 08       	mov    0x8050498,%eax
 804a1f3:	c1 e0 02             	shl    $0x2,%eax
 804a1f6:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804a1f9:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 804a200:	eb 43                	jmp    804a245 <initpool()+0x8b>
 804a202:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a205:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a20b:	89 c2                	mov    %eax,%edx
 804a20d:	a1 04 07 05 08       	mov    0x8050704,%eax
 804a212:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 804a215:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804a218:	89 04 24             	mov    %eax,(%esp)
 804a21b:	e8 c0 eb ff ff       	call   8048de0 <malloc@plt>
 804a220:	89 83 80 00 00 00    	mov    %eax,0x80(%ebx)
 804a226:	8b 83 80 00 00 00    	mov    0x80(%ebx),%eax
 804a22c:	85 c0                	test   %eax,%eax
 804a22e:	0f 94 c0             	sete   %al
 804a231:	84 c0                	test   %al,%al
 804a233:	74 0c                	je     804a241 <initpool()+0x87>
 804a235:	c7 04 24 c8 ed 04 08 	movl   $0x804edc8,(%esp)
 804a23c:	e8 a3 f7 ff ff       	call   80499e4 <nomemory(char const*)>
 804a241:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
 804a245:	a1 b4 07 05 08       	mov    0x80507b4,%eax
 804a24a:	39 45 e8             	cmp    %eax,-0x18(%ebp)
 804a24d:	7c b3                	jl     804a202 <initpool()+0x48>
 804a24f:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804a252:	89 04 24             	mov    %eax,(%esp)
 804a255:	e8 86 eb ff ff       	call   8048de0 <malloc@plt>
 804a25a:	a3 a0 07 05 08       	mov    %eax,0x80507a0
 804a25f:	a1 a0 07 05 08       	mov    0x80507a0,%eax
 804a264:	85 c0                	test   %eax,%eax
 804a266:	0f 94 c0             	sete   %al
 804a269:	84 c0                	test   %al,%al
 804a26b:	74 0c                	je     804a279 <initpool()+0xbf>
 804a26d:	c7 04 24 d9 ed 04 08 	movl   $0x804edd9,(%esp)
 804a274:	e8 6b f7 ff ff       	call   80499e4 <nomemory(char const*)>
 804a279:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 804a280:	eb 44                	jmp    804a2c6 <initpool()+0x10c>
 804a282:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a285:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a28b:	89 c2                	mov    %eax,%edx
 804a28d:	a1 04 07 05 08       	mov    0x8050704,%eax
 804a292:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 804a295:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
 804a29c:	e8 3f eb ff ff       	call   8048de0 <malloc@plt>
 804a2a1:	89 83 84 00 00 00    	mov    %eax,0x84(%ebx)
 804a2a7:	8b 83 84 00 00 00    	mov    0x84(%ebx),%eax
 804a2ad:	85 c0                	test   %eax,%eax
 804a2af:	0f 94 c0             	sete   %al
 804a2b2:	84 c0                	test   %al,%al
 804a2b4:	74 0c                	je     804a2c2 <initpool()+0x108>
 804a2b6:	c7 04 24 ef ed 04 08 	movl   $0x804edef,(%esp)
 804a2bd:	e8 22 f7 ff ff       	call   80499e4 <nomemory(char const*)>
 804a2c2:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
 804a2c6:	a1 b4 07 05 08       	mov    0x80507b4,%eax
 804a2cb:	39 45 e8             	cmp    %eax,-0x18(%ebp)
 804a2ce:	7c b2                	jl     804a282 <initpool()+0xc8>
 804a2d0:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
 804a2d7:	e8 04 eb ff ff       	call   8048de0 <malloc@plt>
 804a2dc:	a3 a4 07 05 08       	mov    %eax,0x80507a4
 804a2e1:	a1 a4 07 05 08       	mov    0x80507a4,%eax
 804a2e6:	85 c0                	test   %eax,%eax
 804a2e8:	0f 94 c0             	sete   %al
 804a2eb:	84 c0                	test   %al,%al
 804a2ed:	74 0c                	je     804a2fb <initpool()+0x141>
 804a2ef:	c7 04 24 d9 ed 04 08 	movl   $0x804edd9,(%esp)
 804a2f6:	e8 e9 f6 ff ff       	call   80499e4 <nomemory(char const*)>
 804a2fb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804a302:	e9 77 02 00 00       	jmp    804a57e <initpool()+0x3c4>
 804a307:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a30a:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a310:	89 c2                	mov    %eax,%edx
 804a312:	a1 04 07 05 08       	mov    0x8050704,%eax
 804a317:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804a31a:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a31d:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a323:	89 c2                	mov    %eax,%edx
 804a325:	a1 04 07 05 08       	mov    0x8050704,%eax
 804a32a:	01 c2                	add    %eax,%edx
 804a32c:	b8 00 00 00 00       	mov    $0x0,%eax
 804a331:	89 42 7c             	mov    %eax,0x7c(%edx)
 804a334:	8b 42 7c             	mov    0x7c(%edx),%eax
 804a337:	89 41 78             	mov    %eax,0x78(%ecx)
 804a33a:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a33d:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a343:	89 c2                	mov    %eax,%edx
 804a345:	a1 04 07 05 08       	mov    0x8050704,%eax
 804a34a:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804a34d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a350:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a356:	89 c2                	mov    %eax,%edx
 804a358:	a1 04 07 05 08       	mov    0x8050704,%eax
 804a35d:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a360:	c7 80 8c 00 00 00 00 	movl   $0x0,0x8c(%eax)
 804a367:	00 00 00 
 804a36a:	8b 80 8c 00 00 00    	mov    0x8c(%eax),%eax
 804a370:	89 81 88 00 00 00    	mov    %eax,0x88(%ecx)
 804a376:	a1 90 04 05 08       	mov    0x8050490,%eax
 804a37b:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804a37e:	eb 5a                	jmp    804a3da <initpool()+0x220>
 804a380:	e8 db ea ff ff       	call   8048e60 <rand@plt>
 804a385:	50                   	push   %eax
 804a386:	db 04 24             	fildl  (%esp)
 804a389:	8d 64 24 04          	lea    0x4(%esp),%esp
 804a38d:	dd 05 98 f6 04 08    	fldl   0x804f698
 804a393:	de f9                	fdivrp %st,%st(1)
 804a395:	dd 5d d0             	fstpl  -0x30(%ebp)
 804a398:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a39b:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a3a1:	89 c2                	mov    %eax,%edx
 804a3a3:	a1 04 07 05 08       	mov    0x8050704,%eax
 804a3a8:	01 c2                	add    %eax,%edx
 804a3aa:	8b 4d e8             	mov    -0x18(%ebp),%ecx
 804a3ad:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a3b0:	d9 04 85 00 06 05 08 	flds   0x8050600(,%eax,4)
 804a3b7:	d9 e8                	fld1   
 804a3b9:	dc 65 d0             	fsubl  -0x30(%ebp)
 804a3bc:	de c9                	fmulp  %st,%st(1)
 804a3be:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a3c1:	d9 04 85 80 06 05 08 	flds   0x8050680(,%eax,4)
 804a3c8:	dc 4d d0             	fmull  -0x30(%ebp)
 804a3cb:	de c1                	faddp  %st,%st(1)
 804a3cd:	d9 5d c4             	fstps  -0x3c(%ebp)
 804a3d0:	d9 45 c4             	flds   -0x3c(%ebp)
 804a3d3:	d9 1c 8a             	fstps  (%edx,%ecx,4)
 804a3d6:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
 804a3da:	a1 8c 04 05 08       	mov    0x805048c,%eax
 804a3df:	83 e8 01             	sub    $0x1,%eax
 804a3e2:	3b 45 e8             	cmp    -0x18(%ebp),%eax
 804a3e5:	7d 99                	jge    804a380 <initpool()+0x1c6>
 804a3e7:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 804a3ee:	eb 43                	jmp    804a433 <initpool()+0x279>
 804a3f0:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a3f3:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a3f9:	89 c2                	mov    %eax,%edx
 804a3fb:	a1 04 07 05 08       	mov    0x8050704,%eax
 804a400:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a403:	8b 90 84 00 00 00    	mov    0x84(%eax),%edx
 804a409:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a40c:	c1 e0 02             	shl    $0x2,%eax
 804a40f:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 804a412:	e8 49 ea ff ff       	call   8048e60 <rand@plt>
 804a417:	50                   	push   %eax
 804a418:	db 04 24             	fildl  (%esp)
 804a41b:	8d 64 24 04          	lea    0x4(%esp),%esp
 804a41f:	dd 05 98 f6 04 08    	fldl   0x804f698
 804a425:	de f9                	fdivrp %st,%st(1)
 804a427:	d9 5d c4             	fstps  -0x3c(%ebp)
 804a42a:	d9 45 c4             	flds   -0x3c(%ebp)
 804a42d:	d9 1b                	fstps  (%ebx)
 804a42f:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 804a433:	83 7d f0 07          	cmpl   $0x7,-0x10(%ebp)
 804a437:	7e b7                	jle    804a3f0 <initpool()+0x236>
 804a439:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 804a440:	e9 27 01 00 00       	jmp    804a56c <initpool()+0x3b2>
 804a445:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a448:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a44e:	89 c2                	mov    %eax,%edx
 804a450:	a1 04 07 05 08       	mov    0x8050704,%eax
 804a455:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a458:	8b 90 80 00 00 00    	mov    0x80(%eax),%edx
 804a45e:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a461:	c1 e0 02             	shl    $0x2,%eax
 804a464:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a467:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 804a46d:	a1 98 04 05 08       	mov    0x8050498,%eax
 804a472:	83 e8 01             	sub    $0x1,%eax
 804a475:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 804a478:	75 18                	jne    804a492 <initpool()+0x2d8>
 804a47a:	a1 94 04 05 08       	mov    0x8050494,%eax
 804a47f:	89 c2                	mov    %eax,%edx
 804a481:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a484:	c1 e0 05             	shl    $0x5,%eax
 804a487:	89 d1                	mov    %edx,%ecx
 804a489:	29 c1                	sub    %eax,%ecx
 804a48b:	89 c8                	mov    %ecx,%eax
 804a48d:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804a490:	eb 07                	jmp    804a499 <initpool()+0x2df>
 804a492:	c7 45 e0 20 00 00 00 	movl   $0x20,-0x20(%ebp)
 804a499:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
 804a4a0:	e9 b7 00 00 00       	jmp    804a55c <initpool()+0x3a2>
 804a4a5:	b8 00 00 00 3f       	mov    $0x3f000000,%eax
 804a4aa:	89 04 24             	mov    %eax,(%esp)
 804a4ad:	e8 6c 2f 00 00       	call   804d41e <flip1(float)>
 804a4b2:	85 c0                	test   %eax,%eax
 804a4b4:	0f 95 c0             	setne  %al
 804a4b7:	84 c0                	test   %al,%al
 804a4b9:	74 4b                	je     804a506 <initpool()+0x34c>
 804a4bb:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a4be:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a4c4:	89 c2                	mov    %eax,%edx
 804a4c6:	a1 04 07 05 08       	mov    0x8050704,%eax
 804a4cb:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a4ce:	8b 90 80 00 00 00    	mov    0x80(%eax),%edx
 804a4d4:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a4d7:	c1 e0 02             	shl    $0x2,%eax
 804a4da:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804a4dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a4e0:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a4e6:	89 c2                	mov    %eax,%edx
 804a4e8:	a1 04 07 05 08       	mov    0x8050704,%eax
 804a4ed:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a4f0:	8b 90 80 00 00 00    	mov    0x80(%eax),%edx
 804a4f6:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a4f9:	c1 e0 02             	shl    $0x2,%eax
 804a4fc:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a4ff:	8b 00                	mov    (%eax),%eax
 804a501:	0b 45 dc             	or     -0x24(%ebp),%eax
 804a504:	89 01                	mov    %eax,(%ecx)
 804a506:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804a509:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804a50c:	74 4a                	je     804a558 <initpool()+0x39e>
 804a50e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a511:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a517:	89 c2                	mov    %eax,%edx
 804a519:	a1 04 07 05 08       	mov    0x8050704,%eax
 804a51e:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a521:	8b 90 80 00 00 00    	mov    0x80(%eax),%edx
 804a527:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a52a:	c1 e0 02             	shl    $0x2,%eax
 804a52d:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804a530:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a533:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a539:	89 c2                	mov    %eax,%edx
 804a53b:	a1 04 07 05 08       	mov    0x8050704,%eax
 804a540:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a543:	8b 90 80 00 00 00    	mov    0x80(%eax),%edx
 804a549:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a54c:	c1 e0 02             	shl    $0x2,%eax
 804a54f:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a552:	8b 00                	mov    (%eax),%eax
 804a554:	01 c0                	add    %eax,%eax
 804a556:	89 01                	mov    %eax,(%ecx)
 804a558:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
 804a55c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804a55f:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804a562:	0f 8e 3d ff ff ff    	jle    804a4a5 <initpool()+0x2eb>
 804a568:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 804a56c:	a1 98 04 05 08       	mov    0x8050498,%eax
 804a571:	39 45 f0             	cmp    %eax,-0x10(%ebp)
 804a574:	0f 8c cb fe ff ff    	jl     804a445 <initpool()+0x28b>
 804a57a:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 804a57e:	a1 b4 07 05 08       	mov    0x80507b4,%eax
 804a583:	39 45 f4             	cmp    %eax,-0xc(%ebp)
 804a586:	0f 8c 7b fd ff ff    	jl     804a307 <initpool()+0x14d>
 804a58c:	a1 98 04 05 08       	mov    0x8050498,%eax
 804a591:	8b 15 04 07 05 08    	mov    0x8050704,%edx
 804a597:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a59b:	c7 44 24 04 20 07 05 	movl   $0x8050720,0x4(%esp)
 804a5a2:	08 
 804a5a3:	89 14 24             	mov    %edx,(%esp)
 804a5a6:	e8 21 f3 ff ff       	call   80498cc <copy_individual(indiv*, indiv*, int)>
 804a5ab:	83 c4 54             	add    $0x54,%esp
 804a5ae:	5b                   	pop    %ebx
 804a5af:	5d                   	pop    %ebp
 804a5b0:	c3                   	ret    
 804a5b1:	90                   	nop    

0804a5b2 <GAThread::statistics(int)>:
 804a5b2:	55                   	push   %ebp
 804a5b3:	89 e5                	mov    %esp,%ebp
 804a5b5:	53                   	push   %ebx
 804a5b6:	81 ec d4 00 00 00    	sub    $0xd4,%esp
 804a5bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804a5c3:	e9 95 00 00 00       	jmp    804a65d <GAThread::statistics(int)+0xab>
 804a5c8:	8b 45 08             	mov    0x8(%ebp),%eax
 804a5cb:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804a5d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a5d4:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a5da:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 804a5dd:	8b 45 08             	mov    0x8(%ebp),%eax
 804a5e0:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804a5e6:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a5e9:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a5ef:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a5f2:	8b 88 84 00 00 00    	mov    0x84(%eax),%ecx
 804a5f8:	8b 45 08             	mov    0x8(%ebp),%eax
 804a5fb:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804a601:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a604:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a60a:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a60d:	8b 80 80 00 00 00    	mov    0x80(%eax),%eax
 804a613:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 804a617:	89 44 24 04          	mov    %eax,0x4(%esp)
 804a61b:	8b 45 08             	mov    0x8(%ebp),%eax
 804a61e:	89 04 24             	mov    %eax,(%esp)
 804a621:	e8 ce 30 00 00       	call   804d6f4 <GAThread::objectivenew(unsigned int*, float*)>
 804a626:	d9 5b 78             	fstps  0x78(%ebx)
 804a629:	8b 45 08             	mov    0x8(%ebp),%eax
 804a62c:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804a632:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a635:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a63b:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804a63e:	8b 45 08             	mov    0x8(%ebp),%eax
 804a641:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804a647:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a64a:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a650:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a653:	8b 40 78             	mov    0x78(%eax),%eax
 804a656:	89 41 7c             	mov    %eax,0x7c(%ecx)
 804a659:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 804a65d:	8b 45 08             	mov    0x8(%ebp),%eax
 804a660:	8b 00                	mov    (%eax),%eax
 804a662:	83 e8 01             	sub    $0x1,%eax
 804a665:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804a668:	0f 8d 5a ff ff ff    	jge    804a5c8 <GAThread::statistics(int)+0x16>
 804a66e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 804a672:	75 12                	jne    804a686 <GAThread::statistics(int)+0xd4>
 804a674:	8b 45 08             	mov    0x8(%ebp),%eax
 804a677:	8b 90 8c 12 00 00    	mov    0x128c(%eax),%edx
 804a67d:	8b 45 08             	mov    0x8(%ebp),%eax
 804a680:	89 90 90 12 00 00    	mov    %edx,0x1290(%eax)
 804a686:	8b 45 08             	mov    0x8(%ebp),%eax
 804a689:	8b 80 10 12 00 00    	mov    0x1210(%eax),%eax
 804a68f:	8d 8d 44 ff ff ff    	lea    -0xbc(%ebp),%ecx
 804a695:	89 c2                	mov    %eax,%edx
 804a697:	b8 94 00 00 00       	mov    $0x94,%eax
 804a69c:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a6a0:	89 54 24 04          	mov    %edx,0x4(%esp)
 804a6a4:	89 0c 24             	mov    %ecx,(%esp)
 804a6a7:	e8 94 e6 ff ff       	call   8048d40 <memcpy@plt>
 804a6ac:	8b 45 08             	mov    0x8(%ebp),%eax
 804a6af:	8b 80 10 12 00 00    	mov    0x1210(%eax),%eax
 804a6b5:	8b 50 78             	mov    0x78(%eax),%edx
 804a6b8:	8b 45 08             	mov    0x8(%ebp),%eax
 804a6bb:	89 90 1c 10 00 00    	mov    %edx,0x101c(%eax)
 804a6c1:	8b 45 08             	mov    0x8(%ebp),%eax
 804a6c4:	8b 90 1c 10 00 00    	mov    0x101c(%eax),%edx
 804a6ca:	8b 45 08             	mov    0x8(%ebp),%eax
 804a6cd:	89 90 18 10 00 00    	mov    %edx,0x1018(%eax)
 804a6d3:	8b 45 08             	mov    0x8(%ebp),%eax
 804a6d6:	8b 80 10 12 00 00    	mov    0x1210(%eax),%eax
 804a6dc:	8b 50 78             	mov    0x78(%eax),%edx
 804a6df:	8b 45 08             	mov    0x8(%ebp),%eax
 804a6e2:	89 90 24 10 00 00    	mov    %edx,0x1024(%eax)
 804a6e8:	8b 45 08             	mov    0x8(%ebp),%eax
 804a6eb:	8b 90 24 10 00 00    	mov    0x1024(%eax),%edx
 804a6f1:	8b 45 08             	mov    0x8(%ebp),%eax
 804a6f4:	89 90 20 10 00 00    	mov    %edx,0x1020(%eax)
 804a6fa:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804a701:	eb 37                	jmp    804a73a <GAThread::statistics(int)+0x188>
 804a703:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 804a706:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 804a709:	8b 45 08             	mov    0x8(%ebp),%eax
 804a70c:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804a712:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a715:	8b 14 82             	mov    (%edx,%eax,4),%edx
 804a718:	8b 45 08             	mov    0x8(%ebp),%eax
 804a71b:	89 94 88 28 10 00 00 	mov    %edx,0x1028(%eax,%ecx,4)
 804a722:	8b 45 08             	mov    0x8(%ebp),%eax
 804a725:	8b 94 88 28 10 00 00 	mov    0x1028(%eax,%ecx,4),%edx
 804a72c:	8b 45 08             	mov    0x8(%ebp),%eax
 804a72f:	89 94 98 a0 10 00 00 	mov    %edx,0x10a0(%eax,%ebx,4)
 804a736:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 804a73a:	8b 45 08             	mov    0x8(%ebp),%eax
 804a73d:	8b 40 18             	mov    0x18(%eax),%eax
 804a740:	83 e8 01             	sub    $0x1,%eax
 804a743:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804a746:	7d bb                	jge    804a703 <GAThread::statistics(int)+0x151>
 804a748:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 804a74f:	e9 b0 02 00 00       	jmp    804aa04 <GAThread::statistics(int)+0x452>
 804a754:	8b 45 08             	mov    0x8(%ebp),%eax
 804a757:	8b 80 fc 0f 00 00    	mov    0xffc(%eax),%eax
 804a75d:	50                   	push   %eax
 804a75e:	db 04 24             	fildl  (%esp)
 804a761:	8d 64 24 04          	lea    0x4(%esp),%esp
 804a765:	d9 45 bc             	flds   -0x44(%ebp)
 804a768:	de c9                	fmulp  %st,%st(1)
 804a76a:	8b 45 08             	mov    0x8(%ebp),%eax
 804a76d:	8b 80 fc 0f 00 00    	mov    0xffc(%eax),%eax
 804a773:	50                   	push   %eax
 804a774:	db 04 24             	fildl  (%esp)
 804a777:	8d 64 24 04          	lea    0x4(%esp),%esp
 804a77b:	8b 45 08             	mov    0x8(%ebp),%eax
 804a77e:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804a784:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a787:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a78d:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a790:	d9 40 78             	flds   0x78(%eax)
 804a793:	de c9                	fmulp  %st,%st(1)
 804a795:	d9 c9                	fxch   %st(1)
 804a797:	da e9                	fucompp 
 804a799:	df e0                	fnstsw %ax
 804a79b:	9e                   	sahf   
 804a79c:	77 02                	ja     804a7a0 <GAThread::statistics(int)+0x1ee>
 804a79e:	eb 32                	jmp    804a7d2 <GAThread::statistics(int)+0x220>
 804a7a0:	8b 45 08             	mov    0x8(%ebp),%eax
 804a7a3:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804a7a9:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a7ac:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a7b2:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a7b5:	8d 8d 44 ff ff ff    	lea    -0xbc(%ebp),%ecx
 804a7bb:	89 c2                	mov    %eax,%edx
 804a7bd:	b8 94 00 00 00       	mov    $0x94,%eax
 804a7c2:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a7c6:	89 54 24 04          	mov    %edx,0x4(%esp)
 804a7ca:	89 0c 24             	mov    %ecx,(%esp)
 804a7cd:	e8 6e e5 ff ff       	call   8048d40 <memcpy@plt>
 804a7d2:	8b 45 08             	mov    0x8(%ebp),%eax
 804a7d5:	8b 80 fc 0f 00 00    	mov    0xffc(%eax),%eax
 804a7db:	50                   	push   %eax
 804a7dc:	db 04 24             	fildl  (%esp)
 804a7df:	8d 64 24 04          	lea    0x4(%esp),%esp
 804a7e3:	8b 45 08             	mov    0x8(%ebp),%eax
 804a7e6:	d9 80 20 10 00 00    	flds   0x1020(%eax)
 804a7ec:	de c9                	fmulp  %st,%st(1)
 804a7ee:	8b 45 08             	mov    0x8(%ebp),%eax
 804a7f1:	8b 80 fc 0f 00 00    	mov    0xffc(%eax),%eax
 804a7f7:	50                   	push   %eax
 804a7f8:	db 04 24             	fildl  (%esp)
 804a7fb:	8d 64 24 04          	lea    0x4(%esp),%esp
 804a7ff:	8b 45 08             	mov    0x8(%ebp),%eax
 804a802:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804a808:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a80b:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a811:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a814:	d9 40 78             	flds   0x78(%eax)
 804a817:	de c9                	fmulp  %st,%st(1)
 804a819:	da e9                	fucompp 
 804a81b:	df e0                	fnstsw %ax
 804a81d:	9e                   	sahf   
 804a81e:	77 02                	ja     804a822 <GAThread::statistics(int)+0x270>
 804a820:	eb 21                	jmp    804a843 <GAThread::statistics(int)+0x291>
 804a822:	8b 45 08             	mov    0x8(%ebp),%eax
 804a825:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804a82b:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a82e:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a834:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a837:	8b 50 78             	mov    0x78(%eax),%edx
 804a83a:	8b 45 08             	mov    0x8(%ebp),%eax
 804a83d:	89 90 20 10 00 00    	mov    %edx,0x1020(%eax)
 804a843:	8b 45 08             	mov    0x8(%ebp),%eax
 804a846:	8b 80 fc 0f 00 00    	mov    0xffc(%eax),%eax
 804a84c:	50                   	push   %eax
 804a84d:	db 04 24             	fildl  (%esp)
 804a850:	8d 64 24 04          	lea    0x4(%esp),%esp
 804a854:	8b 45 08             	mov    0x8(%ebp),%eax
 804a857:	d9 80 24 10 00 00    	flds   0x1024(%eax)
 804a85d:	de c9                	fmulp  %st,%st(1)
 804a85f:	8b 45 08             	mov    0x8(%ebp),%eax
 804a862:	8b 80 fc 0f 00 00    	mov    0xffc(%eax),%eax
 804a868:	50                   	push   %eax
 804a869:	db 04 24             	fildl  (%esp)
 804a86c:	8d 64 24 04          	lea    0x4(%esp),%esp
 804a870:	8b 45 08             	mov    0x8(%ebp),%eax
 804a873:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804a879:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a87c:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a882:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a885:	d9 40 78             	flds   0x78(%eax)
 804a888:	de c9                	fmulp  %st,%st(1)
 804a88a:	d9 c9                	fxch   %st(1)
 804a88c:	da e9                	fucompp 
 804a88e:	df e0                	fnstsw %ax
 804a890:	9e                   	sahf   
 804a891:	77 02                	ja     804a895 <GAThread::statistics(int)+0x2e3>
 804a893:	eb 21                	jmp    804a8b6 <GAThread::statistics(int)+0x304>
 804a895:	8b 45 08             	mov    0x8(%ebp),%eax
 804a898:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804a89e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a8a1:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a8a7:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a8aa:	8b 50 78             	mov    0x78(%eax),%edx
 804a8ad:	8b 45 08             	mov    0x8(%ebp),%eax
 804a8b0:	89 90 24 10 00 00    	mov    %edx,0x1024(%eax)
 804a8b6:	8b 45 08             	mov    0x8(%ebp),%eax
 804a8b9:	d9 80 18 10 00 00    	flds   0x1018(%eax)
 804a8bf:	8b 45 08             	mov    0x8(%ebp),%eax
 804a8c2:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804a8c8:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a8cb:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a8d1:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a8d4:	d9 40 78             	flds   0x78(%eax)
 804a8d7:	de c1                	faddp  %st,%st(1)
 804a8d9:	8b 45 08             	mov    0x8(%ebp),%eax
 804a8dc:	d9 98 18 10 00 00    	fstps  0x1018(%eax)
 804a8e2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 804a8e9:	e9 00 01 00 00       	jmp    804a9ee <GAThread::statistics(int)+0x43c>
 804a8ee:	8b 45 08             	mov    0x8(%ebp),%eax
 804a8f1:	8b 80 fc 0f 00 00    	mov    0xffc(%eax),%eax
 804a8f7:	50                   	push   %eax
 804a8f8:	db 04 24             	fildl  (%esp)
 804a8fb:	8d 64 24 04          	lea    0x4(%esp),%esp
 804a8ff:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804a902:	8b 45 08             	mov    0x8(%ebp),%eax
 804a905:	d9 84 90 a0 10 00 00 	flds   0x10a0(%eax,%edx,4)
 804a90c:	de c9                	fmulp  %st,%st(1)
 804a90e:	8b 45 08             	mov    0x8(%ebp),%eax
 804a911:	8b 80 fc 0f 00 00    	mov    0xffc(%eax),%eax
 804a917:	50                   	push   %eax
 804a918:	db 04 24             	fildl  (%esp)
 804a91b:	8d 64 24 04          	lea    0x4(%esp),%esp
 804a91f:	8b 45 08             	mov    0x8(%ebp),%eax
 804a922:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804a928:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a92b:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a931:	01 c2                	add    %eax,%edx
 804a933:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a936:	d9 04 82             	flds   (%edx,%eax,4)
 804a939:	de c9                	fmulp  %st,%st(1)
 804a93b:	da e9                	fucompp 
 804a93d:	df e0                	fnstsw %ax
 804a93f:	9e                   	sahf   
 804a940:	77 02                	ja     804a944 <GAThread::statistics(int)+0x392>
 804a942:	eb 27                	jmp    804a96b <GAThread::statistics(int)+0x3b9>
 804a944:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 804a947:	8b 45 08             	mov    0x8(%ebp),%eax
 804a94a:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804a950:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a953:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a959:	01 c2                	add    %eax,%edx
 804a95b:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a95e:	8b 14 82             	mov    (%edx,%eax,4),%edx
 804a961:	8b 45 08             	mov    0x8(%ebp),%eax
 804a964:	89 94 88 a0 10 00 00 	mov    %edx,0x10a0(%eax,%ecx,4)
 804a96b:	8b 45 08             	mov    0x8(%ebp),%eax
 804a96e:	8b 80 fc 0f 00 00    	mov    0xffc(%eax),%eax
 804a974:	50                   	push   %eax
 804a975:	db 04 24             	fildl  (%esp)
 804a978:	8d 64 24 04          	lea    0x4(%esp),%esp
 804a97c:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804a97f:	8b 45 08             	mov    0x8(%ebp),%eax
 804a982:	d9 84 90 28 10 00 00 	flds   0x1028(%eax,%edx,4)
 804a989:	de c9                	fmulp  %st,%st(1)
 804a98b:	8b 45 08             	mov    0x8(%ebp),%eax
 804a98e:	8b 80 fc 0f 00 00    	mov    0xffc(%eax),%eax
 804a994:	50                   	push   %eax
 804a995:	db 04 24             	fildl  (%esp)
 804a998:	8d 64 24 04          	lea    0x4(%esp),%esp
 804a99c:	8b 45 08             	mov    0x8(%ebp),%eax
 804a99f:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804a9a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a9a8:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a9ae:	01 c2                	add    %eax,%edx
 804a9b0:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a9b3:	d9 04 82             	flds   (%edx,%eax,4)
 804a9b6:	de c9                	fmulp  %st,%st(1)
 804a9b8:	d9 c9                	fxch   %st(1)
 804a9ba:	da e9                	fucompp 
 804a9bc:	df e0                	fnstsw %ax
 804a9be:	9e                   	sahf   
 804a9bf:	77 02                	ja     804a9c3 <GAThread::statistics(int)+0x411>
 804a9c1:	eb 27                	jmp    804a9ea <GAThread::statistics(int)+0x438>
 804a9c3:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 804a9c6:	8b 45 08             	mov    0x8(%ebp),%eax
 804a9c9:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804a9cf:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a9d2:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804a9d8:	01 c2                	add    %eax,%edx
 804a9da:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a9dd:	8b 14 82             	mov    (%edx,%eax,4),%edx
 804a9e0:	8b 45 08             	mov    0x8(%ebp),%eax
 804a9e3:	89 94 88 28 10 00 00 	mov    %edx,0x1028(%eax,%ecx,4)
 804a9ea:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 804a9ee:	8b 45 08             	mov    0x8(%ebp),%eax
 804a9f1:	8b 40 18             	mov    0x18(%eax),%eax
 804a9f4:	83 e8 01             	sub    $0x1,%eax
 804a9f7:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 804a9fa:	0f 8d ee fe ff ff    	jge    804a8ee <GAThread::statistics(int)+0x33c>
 804aa00:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 804aa04:	8b 45 08             	mov    0x8(%ebp),%eax
 804aa07:	8b 00                	mov    (%eax),%eax
 804aa09:	83 e8 01             	sub    $0x1,%eax
 804aa0c:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804aa0f:	0f 8d 3f fd ff ff    	jge    804a754 <GAThread::statistics(int)+0x1a2>
 804aa15:	8b 45 08             	mov    0x8(%ebp),%eax
 804aa18:	d9 80 18 10 00 00    	flds   0x1018(%eax)
 804aa1e:	8b 45 08             	mov    0x8(%ebp),%eax
 804aa21:	8b 00                	mov    (%eax),%eax
 804aa23:	50                   	push   %eax
 804aa24:	db 04 24             	fildl  (%esp)
 804aa27:	8d 64 24 04          	lea    0x4(%esp),%esp
 804aa2b:	de f9                	fdivrp %st,%st(1)
 804aa2d:	8b 45 08             	mov    0x8(%ebp),%eax
 804aa30:	d9 98 1c 10 00 00    	fstps  0x101c(%eax)
 804aa36:	8b 45 08             	mov    0x8(%ebp),%eax
 804aa39:	8b 80 fc 0f 00 00    	mov    0xffc(%eax),%eax
 804aa3f:	50                   	push   %eax
 804aa40:	db 04 24             	fildl  (%esp)
 804aa43:	8d 64 24 04          	lea    0x4(%esp),%esp
 804aa47:	d9 45 bc             	flds   -0x44(%ebp)
 804aa4a:	de c9                	fmulp  %st,%st(1)
 804aa4c:	8b 45 08             	mov    0x8(%ebp),%eax
 804aa4f:	8b 80 fc 0f 00 00    	mov    0xffc(%eax),%eax
 804aa55:	50                   	push   %eax
 804aa56:	db 04 24             	fildl  (%esp)
 804aa59:	8d 64 24 04          	lea    0x4(%esp),%esp
 804aa5d:	8b 45 08             	mov    0x8(%ebp),%eax
 804aa60:	d9 80 8c 12 00 00    	flds   0x128c(%eax)
 804aa66:	de c9                	fmulp  %st,%st(1)
 804aa68:	da e9                	fucompp 
 804aa6a:	df e0                	fnstsw %ax
 804aa6c:	9e                   	sahf   
 804aa6d:	77 02                	ja     804aa71 <GAThread::statistics(int)+0x4bf>
 804aa6f:	eb 2e                	jmp    804aa9f <GAThread::statistics(int)+0x4ed>
 804aa71:	8b 45 08             	mov    0x8(%ebp),%eax
 804aa74:	8b 40 24             	mov    0x24(%eax),%eax
 804aa77:	8b 55 08             	mov    0x8(%ebp),%edx
 804aa7a:	81 c2 14 12 00 00    	add    $0x1214,%edx
 804aa80:	89 44 24 08          	mov    %eax,0x8(%esp)
 804aa84:	89 54 24 04          	mov    %edx,0x4(%esp)
 804aa88:	8d 85 44 ff ff ff    	lea    -0xbc(%ebp),%eax
 804aa8e:	89 04 24             	mov    %eax,(%esp)
 804aa91:	e8 36 ee ff ff       	call   80498cc <copy_individual(indiv*, indiv*, int)>
 804aa96:	8b 55 08             	mov    0x8(%ebp),%edx
 804aa99:	8b 45 0c             	mov    0xc(%ebp),%eax
 804aa9c:	89 42 14             	mov    %eax,0x14(%edx)
 804aa9f:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 804aaa2:	8b 55 bc             	mov    -0x44(%ebp),%edx
 804aaa5:	8b 45 08             	mov    0x8(%ebp),%eax
 804aaa8:	89 94 88 a8 12 00 00 	mov    %edx,0x12a8(%eax,%ecx,4)
 804aaaf:	81 c4 d4 00 00 00    	add    $0xd4,%esp
 804aab5:	5b                   	pop    %ebx
 804aab6:	5d                   	pop    %ebp
 804aab7:	c3                   	ret    

0804aab8 <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)>:
 804aab8:	55                   	push   %ebp
 804aab9:	89 e5                	mov    %esp,%ebp
 804aabb:	53                   	push   %ebx
 804aabc:	83 ec 44             	sub    $0x44,%esp
 804aabf:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
 804aac6:	8b 45 08             	mov    0x8(%ebp),%eax
 804aac9:	8b 40 48             	mov    0x48(%eax),%eax
 804aacc:	85 c0                	test   %eax,%eax
 804aace:	0f 84 14 03 00 00    	je     804ade8 <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)+0x330>
 804aad4:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 804aad8:	75 0c                	jne    804aae6 <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)+0x2e>
 804aada:	c7 04 24 fc ed 04 08 	movl   $0x804edfc,(%esp)
 804aae1:	e8 e6 ea ff ff       	call   80495cc <error_ptr_null(char const*)>
 804aae6:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
 804aaea:	75 0c                	jne    804aaf8 <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)+0x40>
 804aaec:	c7 04 24 14 ee 04 08 	movl   $0x804ee14,(%esp)
 804aaf3:	e8 d4 ea ff ff       	call   80495cc <error_ptr_null(char const*)>
 804aaf8:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
 804aafc:	75 0c                	jne    804ab0a <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)+0x52>
 804aafe:	c7 04 24 2c ee 04 08 	movl   $0x804ee2c,(%esp)
 804ab05:	e8 c2 ea ff ff       	call   80495cc <error_ptr_null(char const*)>
 804ab0a:	83 7d 24 00          	cmpl   $0x0,0x24(%ebp)
 804ab0e:	75 0c                	jne    804ab1c <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)+0x64>
 804ab10:	c7 04 24 43 ee 04 08 	movl   $0x804ee43,(%esp)
 804ab17:	e8 b0 ea ff ff       	call   80495cc <error_ptr_null(char const*)>
 804ab1c:	8b 45 0c             	mov    0xc(%ebp),%eax
 804ab1f:	8b 00                	mov    (%eax),%eax
 804ab21:	89 c1                	mov    %eax,%ecx
 804ab23:	23 4d e8             	and    -0x18(%ebp),%ecx
 804ab26:	8b 45 0c             	mov    0xc(%ebp),%eax
 804ab29:	8b 10                	mov    (%eax),%edx
 804ab2b:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804ab2e:	01 c0                	add    %eax,%eax
 804ab30:	21 d0                	and    %edx,%eax
 804ab32:	01 c1                	add    %eax,%ecx
 804ab34:	8b 45 0c             	mov    0xc(%ebp),%eax
 804ab37:	8b 10                	mov    (%eax),%edx
 804ab39:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804ab3c:	c1 e0 02             	shl    $0x2,%eax
 804ab3f:	21 d0                	and    %edx,%eax
 804ab41:	8d 04 01             	lea    (%ecx,%eax,1),%eax
 804ab44:	83 c0 01             	add    $0x1,%eax
 804ab47:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804ab4a:	8b 45 14             	mov    0x14(%ebp),%eax
 804ab4d:	8b 00                	mov    (%eax),%eax
 804ab4f:	89 c1                	mov    %eax,%ecx
 804ab51:	23 4d e8             	and    -0x18(%ebp),%ecx
 804ab54:	8b 45 14             	mov    0x14(%ebp),%eax
 804ab57:	8b 10                	mov    (%eax),%edx
 804ab59:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804ab5c:	01 c0                	add    %eax,%eax
 804ab5e:	21 d0                	and    %edx,%eax
 804ab60:	01 c1                	add    %eax,%ecx
 804ab62:	8b 45 14             	mov    0x14(%ebp),%eax
 804ab65:	8b 10                	mov    (%eax),%edx
 804ab67:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804ab6a:	c1 e0 02             	shl    $0x2,%eax
 804ab6d:	21 d0                	and    %edx,%eax
 804ab6f:	8d 04 01             	lea    (%ecx,%eax,1),%eax
 804ab72:	83 c0 01             	add    $0x1,%eax
 804ab75:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804ab78:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804ab7b:	3b 45 dc             	cmp    -0x24(%ebp),%eax
 804ab7e:	73 08                	jae    804ab88 <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)+0xd0>
 804ab80:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804ab83:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804ab86:	eb 06                	jmp    804ab8e <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)+0xd6>
 804ab88:	8b 4d dc             	mov    -0x24(%ebp),%ecx
 804ab8b:	89 4d c8             	mov    %ecx,-0x38(%ebp)
 804ab8e:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804ab91:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804ab94:	8b 55 d8             	mov    -0x28(%ebp),%edx
 804ab97:	89 d0                	mov    %edx,%eax
 804ab99:	c1 e0 02             	shl    $0x2,%eax
 804ab9c:	01 d0                	add    %edx,%eax
 804ab9e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 804aba5:	01 d0                	add    %edx,%eax
 804aba7:	83 c0 04             	add    $0x4,%eax
 804abaa:	89 44 24 08          	mov    %eax,0x8(%esp)
 804abae:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 804abb5:	00 
 804abb6:	8b 45 08             	mov    0x8(%ebp),%eax
 804abb9:	89 04 24             	mov    %eax,(%esp)
 804abbc:	e8 17 25 00 00       	call   804d0d8 <GAThread::rnd(int, int)>
 804abc1:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804abc4:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 804abc7:	83 e9 04             	sub    $0x4,%ecx
 804abca:	c7 45 c4 1f 85 eb 51 	movl   $0x51eb851f,-0x3c(%ebp)
 804abd1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804abd4:	f7 e9                	imul   %ecx
 804abd6:	c1 fa 03             	sar    $0x3,%edx
 804abd9:	89 c8                	mov    %ecx,%eax
 804abdb:	c1 f8 1f             	sar    $0x1f,%eax
 804abde:	89 d1                	mov    %edx,%ecx
 804abe0:	29 c1                	sub    %eax,%ecx
 804abe2:	89 c8                	mov    %ecx,%eax
 804abe4:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804abe7:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804abea:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804abed:	eb 34                	jmp    804ac23 <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)+0x16b>
 804abef:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804abf2:	c1 e0 02             	shl    $0x2,%eax
 804abf5:	89 c2                	mov    %eax,%edx
 804abf7:	03 55 28             	add    0x28(%ebp),%edx
 804abfa:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804abfd:	c1 e0 02             	shl    $0x2,%eax
 804ac00:	03 45 10             	add    0x10(%ebp),%eax
 804ac03:	8b 00                	mov    (%eax),%eax
 804ac05:	89 02                	mov    %eax,(%edx)
 804ac07:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ac0a:	c1 e0 02             	shl    $0x2,%eax
 804ac0d:	89 c2                	mov    %eax,%edx
 804ac0f:	03 55 20             	add    0x20(%ebp),%edx
 804ac12:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ac15:	c1 e0 02             	shl    $0x2,%eax
 804ac18:	03 45 18             	add    0x18(%ebp),%eax
 804ac1b:	8b 00                	mov    (%eax),%eax
 804ac1d:	89 02                	mov    %eax,(%edx)
 804ac1f:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 804ac23:	83 7d f0 07          	cmpl   $0x7,-0x10(%ebp)
 804ac27:	7e c6                	jle    804abef <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)+0x137>
 804ac29:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 804ac30:	eb 34                	jmp    804ac66 <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)+0x1ae>
 804ac32:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ac35:	c1 e0 02             	shl    $0x2,%eax
 804ac38:	89 c2                	mov    %eax,%edx
 804ac3a:	03 55 28             	add    0x28(%ebp),%edx
 804ac3d:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ac40:	c1 e0 02             	shl    $0x2,%eax
 804ac43:	03 45 18             	add    0x18(%ebp),%eax
 804ac46:	8b 00                	mov    (%eax),%eax
 804ac48:	89 02                	mov    %eax,(%edx)
 804ac4a:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ac4d:	c1 e0 02             	shl    $0x2,%eax
 804ac50:	89 c2                	mov    %eax,%edx
 804ac52:	03 55 20             	add    0x20(%ebp),%edx
 804ac55:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ac58:	c1 e0 02             	shl    $0x2,%eax
 804ac5b:	03 45 10             	add    0x10(%ebp),%eax
 804ac5e:	8b 00                	mov    (%eax),%eax
 804ac60:	89 02                	mov    %eax,(%edx)
 804ac62:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 804ac66:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ac69:	3b 45 ec             	cmp    -0x14(%ebp),%eax
 804ac6c:	7c c4                	jl     804ac32 <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)+0x17a>
 804ac6e:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804ac71:	29 45 f4             	sub    %eax,-0xc(%ebp)
 804ac74:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 804ac7b:	e9 59 01 00 00       	jmp    804add9 <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)+0x321>
 804ac80:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804ac83:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804ac86:	c1 e2 05             	shl    $0x5,%edx
 804ac89:	39 d0                	cmp    %edx,%eax
 804ac8b:	72 3d                	jb     804acca <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)+0x212>
 804ac8d:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ac90:	c1 e0 02             	shl    $0x2,%eax
 804ac93:	03 45 1c             	add    0x1c(%ebp),%eax
 804ac96:	8d 50 fc             	lea    -0x4(%eax),%edx
 804ac99:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ac9c:	c1 e0 02             	shl    $0x2,%eax
 804ac9f:	03 45 0c             	add    0xc(%ebp),%eax
 804aca2:	83 e8 04             	sub    $0x4,%eax
 804aca5:	8b 00                	mov    (%eax),%eax
 804aca7:	89 02                	mov    %eax,(%edx)
 804aca9:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804acac:	c1 e0 02             	shl    $0x2,%eax
 804acaf:	03 45 24             	add    0x24(%ebp),%eax
 804acb2:	8d 50 fc             	lea    -0x4(%eax),%edx
 804acb5:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804acb8:	c1 e0 02             	shl    $0x2,%eax
 804acbb:	03 45 14             	add    0x14(%ebp),%eax
 804acbe:	83 e8 04             	sub    $0x4,%eax
 804acc1:	8b 00                	mov    (%eax),%eax
 804acc3:	89 02                	mov    %eax,(%edx)
 804acc5:	e9 0b 01 00 00       	jmp    804add5 <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)+0x31d>
 804acca:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804accd:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804acd0:	c1 e2 05             	shl    $0x5,%edx
 804acd3:	39 d0                	cmp    %edx,%eax
 804acd5:	0f 83 c2 00 00 00    	jae    804ad9d <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)+0x2e5>
 804acdb:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804acde:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ace1:	c1 e0 05             	shl    $0x5,%eax
 804ace4:	83 e8 20             	sub    $0x20,%eax
 804ace7:	39 c2                	cmp    %eax,%edx
 804ace9:	0f 86 ae 00 00 00    	jbe    804ad9d <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)+0x2e5>
 804acef:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
 804acf6:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%ebp)
 804acfd:	eb 14                	jmp    804ad13 <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)+0x25b>
 804acff:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
 804ad06:	d1 65 e8             	shll   -0x18(%ebp)
 804ad09:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804ad0c:	09 45 e8             	or     %eax,-0x18(%ebp)
 804ad0f:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 804ad13:	8b 4d f8             	mov    -0x8(%ebp),%ecx
 804ad16:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad19:	c1 e0 05             	shl    $0x5,%eax
 804ad1c:	f7 d8                	neg    %eax
 804ad1e:	89 c2                	mov    %eax,%edx
 804ad20:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804ad23:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804ad26:	83 c0 1f             	add    $0x1f,%eax
 804ad29:	39 c1                	cmp    %eax,%ecx
 804ad2b:	76 d2                	jbe    804acff <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)+0x247>
 804ad2d:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad30:	c1 e0 02             	shl    $0x2,%eax
 804ad33:	03 45 1c             	add    0x1c(%ebp),%eax
 804ad36:	8d 58 fc             	lea    -0x4(%eax),%ebx
 804ad39:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad3c:	c1 e0 02             	shl    $0x2,%eax
 804ad3f:	03 45 0c             	add    0xc(%ebp),%eax
 804ad42:	83 e8 04             	sub    $0x4,%eax
 804ad45:	8b 00                	mov    (%eax),%eax
 804ad47:	89 c1                	mov    %eax,%ecx
 804ad49:	23 4d e8             	and    -0x18(%ebp),%ecx
 804ad4c:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad4f:	c1 e0 02             	shl    $0x2,%eax
 804ad52:	03 45 14             	add    0x14(%ebp),%eax
 804ad55:	83 e8 04             	sub    $0x4,%eax
 804ad58:	8b 10                	mov    (%eax),%edx
 804ad5a:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804ad5d:	f7 d0                	not    %eax
 804ad5f:	21 d0                	and    %edx,%eax
 804ad61:	09 c8                	or     %ecx,%eax
 804ad63:	89 03                	mov    %eax,(%ebx)
 804ad65:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad68:	c1 e0 02             	shl    $0x2,%eax
 804ad6b:	03 45 24             	add    0x24(%ebp),%eax
 804ad6e:	8d 48 fc             	lea    -0x4(%eax),%ecx
 804ad71:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad74:	c1 e0 02             	shl    $0x2,%eax
 804ad77:	03 45 0c             	add    0xc(%ebp),%eax
 804ad7a:	83 e8 04             	sub    $0x4,%eax
 804ad7d:	8b 10                	mov    (%eax),%edx
 804ad7f:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804ad82:	f7 d0                	not    %eax
 804ad84:	21 c2                	and    %eax,%edx
 804ad86:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad89:	c1 e0 02             	shl    $0x2,%eax
 804ad8c:	03 45 14             	add    0x14(%ebp),%eax
 804ad8f:	83 e8 04             	sub    $0x4,%eax
 804ad92:	8b 00                	mov    (%eax),%eax
 804ad94:	23 45 e8             	and    -0x18(%ebp),%eax
 804ad97:	09 d0                	or     %edx,%eax
 804ad99:	89 01                	mov    %eax,(%ecx)
 804ad9b:	eb 38                	jmp    804add5 <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)+0x31d>
 804ad9d:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ada0:	c1 e0 02             	shl    $0x2,%eax
 804ada3:	03 45 1c             	add    0x1c(%ebp),%eax
 804ada6:	8d 50 fc             	lea    -0x4(%eax),%edx
 804ada9:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804adac:	c1 e0 02             	shl    $0x2,%eax
 804adaf:	03 45 14             	add    0x14(%ebp),%eax
 804adb2:	83 e8 04             	sub    $0x4,%eax
 804adb5:	8b 00                	mov    (%eax),%eax
 804adb7:	89 02                	mov    %eax,(%edx)
 804adb9:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804adbc:	c1 e0 02             	shl    $0x2,%eax
 804adbf:	03 45 24             	add    0x24(%ebp),%eax
 804adc2:	8d 50 fc             	lea    -0x4(%eax),%edx
 804adc5:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804adc8:	c1 e0 02             	shl    $0x2,%eax
 804adcb:	03 45 0c             	add    0xc(%ebp),%eax
 804adce:	83 e8 04             	sub    $0x4,%eax
 804add1:	8b 00                	mov    (%eax),%eax
 804add3:	89 02                	mov    %eax,(%edx)
 804add5:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 804add9:	8b 45 08             	mov    0x8(%ebp),%eax
 804addc:	8b 40 24             	mov    0x24(%eax),%eax
 804addf:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 804ade2:	0f 8d 98 fe ff ff    	jge    804ac80 <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)+0x1c8>
 804ade8:	83 c4 44             	add    $0x44,%esp
 804adeb:	5b                   	pop    %ebx
 804adec:	5d                   	pop    %ebp
 804aded:	c3                   	ret    

0804adee <GAThread::reset1()>:
 804adee:	55                   	push   %ebp
 804adef:	89 e5                	mov    %esp,%ebp
 804adf1:	83 ec 28             	sub    $0x28,%esp
 804adf4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804adfb:	eb 11                	jmp    804ae0e <GAThread::reset1()+0x20>
 804adfd:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 804ae00:	8b 55 08             	mov    0x8(%ebp),%edx
 804ae03:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804ae06:	89 44 8a 54          	mov    %eax,0x54(%edx,%ecx,4)
 804ae0a:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 804ae0e:	8b 45 08             	mov    0x8(%ebp),%eax
 804ae11:	8b 00                	mov    (%eax),%eax
 804ae13:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 804ae16:	7f e5                	jg     804adfd <GAThread::reset1()+0xf>
 804ae18:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804ae1f:	eb 76                	jmp    804ae97 <GAThread::reset1()+0xa9>
 804ae21:	8b 45 08             	mov    0x8(%ebp),%eax
 804ae24:	8b 00                	mov    (%eax),%eax
 804ae26:	83 e8 01             	sub    $0x1,%eax
 804ae29:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ae2d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804ae34:	00 
 804ae35:	8b 45 08             	mov    0x8(%ebp),%eax
 804ae38:	89 04 24             	mov    %eax,(%esp)
 804ae3b:	e8 98 22 00 00       	call   804d0d8 <GAThread::rnd(int, int)>
 804ae40:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804ae43:	8b 45 08             	mov    0x8(%ebp),%eax
 804ae46:	8b 00                	mov    (%eax),%eax
 804ae48:	83 e8 01             	sub    $0x1,%eax
 804ae4b:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ae4f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804ae56:	00 
 804ae57:	8b 45 08             	mov    0x8(%ebp),%eax
 804ae5a:	89 04 24             	mov    %eax,(%esp)
 804ae5d:	e8 76 22 00 00       	call   804d0d8 <GAThread::rnd(int, int)>
 804ae62:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804ae65:	8b 55 f8             	mov    -0x8(%ebp),%edx
 804ae68:	8b 45 08             	mov    0x8(%ebp),%eax
 804ae6b:	8b 44 90 54          	mov    0x54(%eax,%edx,4),%eax
 804ae6f:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804ae72:	8b 4d f8             	mov    -0x8(%ebp),%ecx
 804ae75:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804ae78:	8b 45 08             	mov    0x8(%ebp),%eax
 804ae7b:	8b 54 90 54          	mov    0x54(%eax,%edx,4),%edx
 804ae7f:	8b 45 08             	mov    0x8(%ebp),%eax
 804ae82:	89 54 88 54          	mov    %edx,0x54(%eax,%ecx,4)
 804ae86:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 804ae89:	8b 55 08             	mov    0x8(%ebp),%edx
 804ae8c:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ae8f:	89 44 8a 54          	mov    %eax,0x54(%edx,%ecx,4)
 804ae93:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 804ae97:	8b 45 08             	mov    0x8(%ebp),%eax
 804ae9a:	8b 00                	mov    (%eax),%eax
 804ae9c:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 804ae9f:	7f 80                	jg     804ae21 <GAThread::reset1()+0x33>
 804aea1:	c9                   	leave  
 804aea2:	c3                   	ret    
 804aea3:	90                   	nop    

0804aea4 <GAThread::preselect_tour()>:
 804aea4:	55                   	push   %ebp
 804aea5:	89 e5                	mov    %esp,%ebp
 804aea7:	83 ec 08             	sub    $0x8,%esp
 804aeaa:	8b 45 08             	mov    0x8(%ebp),%eax
 804aead:	89 04 24             	mov    %eax,(%esp)
 804aeb0:	e8 39 ff ff ff       	call   804adee <GAThread::reset1()>
 804aeb5:	8b 45 08             	mov    0x8(%ebp),%eax
 804aeb8:	c7 80 f4 0f 00 00 00 	movl   $0x0,0xff4(%eax)
 804aebf:	00 00 00 
 804aec2:	c9                   	leave  
 804aec3:	c3                   	ret    

0804aec4 <GAThread::tour_select()>:
 804aec4:	55                   	push   %ebp
 804aec5:	89 e5                	mov    %esp,%ebp
 804aec7:	83 ec 18             	sub    $0x18,%esp
 804aeca:	8b 45 08             	mov    0x8(%ebp),%eax
 804aecd:	8b 10                	mov    (%eax),%edx
 804aecf:	8b 45 08             	mov    0x8(%ebp),%eax
 804aed2:	8b 80 f4 0f 00 00    	mov    0xff4(%eax),%eax
 804aed8:	29 c2                	sub    %eax,%edx
 804aeda:	8b 45 08             	mov    0x8(%ebp),%eax
 804aedd:	8b 80 f8 0f 00 00    	mov    0xff8(%eax),%eax
 804aee3:	39 c2                	cmp    %eax,%edx
 804aee5:	7d 18                	jge    804aeff <GAThread::tour_select()+0x3b>
 804aee7:	8b 45 08             	mov    0x8(%ebp),%eax
 804aeea:	89 04 24             	mov    %eax,(%esp)
 804aeed:	e8 fc fe ff ff       	call   804adee <GAThread::reset1()>
 804aef2:	8b 45 08             	mov    0x8(%ebp),%eax
 804aef5:	c7 80 f4 0f 00 00 00 	movl   $0x0,0xff4(%eax)
 804aefc:	00 00 00 
 804aeff:	8b 45 08             	mov    0x8(%ebp),%eax
 804af02:	8b 90 f4 0f 00 00    	mov    0xff4(%eax),%edx
 804af08:	8b 45 08             	mov    0x8(%ebp),%eax
 804af0b:	8b 44 90 54          	mov    0x54(%eax,%edx,4),%eax
 804af0f:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804af12:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)
 804af16:	78 0d                	js     804af25 <GAThread::tour_select()+0x61>
 804af18:	8b 45 08             	mov    0x8(%ebp),%eax
 804af1b:	8b 00                	mov    (%eax),%eax
 804af1d:	83 e8 01             	sub    $0x1,%eax
 804af20:	3b 45 f8             	cmp    -0x8(%ebp),%eax
 804af23:	7d 48                	jge    804af6d <GAThread::tour_select()+0xa9>
 804af25:	c7 04 24 5a ee 04 08 	movl   $0x804ee5a,(%esp)
 804af2c:	e8 3f de ff ff       	call   8048d70 <printf@plt>
 804af31:	8b 45 08             	mov    0x8(%ebp),%eax
 804af34:	8b 80 f4 0f 00 00    	mov    0xff4(%eax),%eax
 804af3a:	89 44 24 04          	mov    %eax,0x4(%esp)
 804af3e:	c7 04 24 6e ee 04 08 	movl   $0x804ee6e,(%esp)
 804af45:	e8 26 de ff ff       	call   8048d70 <printf@plt>
 804af4a:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804af4d:	89 44 24 04          	mov    %eax,0x4(%esp)
 804af51:	c7 04 24 7c ee 04 08 	movl   $0x804ee7c,(%esp)
 804af58:	e8 13 de ff ff       	call   8048d70 <printf@plt>
 804af5d:	8b 45 08             	mov    0x8(%ebp),%eax
 804af60:	89 04 24             	mov    %eax,(%esp)
 804af63:	e8 3c ff ff ff       	call   804aea4 <GAThread::preselect_tour()>
 804af68:	e9 5d ff ff ff       	jmp    804aeca <GAThread::tour_select()+0x6>
 804af6d:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 804af74:	e9 b0 00 00 00       	jmp    804b029 <GAThread::tour_select()+0x165>
 804af79:	8b 45 08             	mov    0x8(%ebp),%eax
 804af7c:	8b 80 f4 0f 00 00    	mov    0xff4(%eax),%eax
 804af82:	89 c2                	mov    %eax,%edx
 804af84:	03 55 f4             	add    -0xc(%ebp),%edx
 804af87:	8b 45 08             	mov    0x8(%ebp),%eax
 804af8a:	8b 44 90 54          	mov    0x54(%eax,%edx,4),%eax
 804af8e:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804af91:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
 804af95:	78 0d                	js     804afa4 <GAThread::tour_select()+0xe0>
 804af97:	8b 45 08             	mov    0x8(%ebp),%eax
 804af9a:	8b 00                	mov    (%eax),%eax
 804af9c:	83 e8 01             	sub    $0x1,%eax
 804af9f:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 804afa2:	7d 1c                	jge    804afc0 <GAThread::tour_select()+0xfc>
 804afa4:	8b 45 08             	mov    0x8(%ebp),%eax
 804afa7:	89 04 24             	mov    %eax,(%esp)
 804afaa:	e8 f5 fe ff ff       	call   804aea4 <GAThread::preselect_tour()>
 804afaf:	c7 04 24 89 ee 04 08 	movl   $0x804ee89,(%esp)
 804afb6:	e8 b5 dd ff ff       	call   8048d70 <printf@plt>
 804afbb:	e9 0a ff ff ff       	jmp    804aeca <GAThread::tour_select()+0x6>
 804afc0:	8b 45 08             	mov    0x8(%ebp),%eax
 804afc3:	8b 80 fc 0f 00 00    	mov    0xffc(%eax),%eax
 804afc9:	50                   	push   %eax
 804afca:	db 04 24             	fildl  (%esp)
 804afcd:	8d 64 24 04          	lea    0x4(%esp),%esp
 804afd1:	8b 45 08             	mov    0x8(%ebp),%eax
 804afd4:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 804afda:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804afdd:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804afe3:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804afe6:	d9 40 7c             	flds   0x7c(%eax)
 804afe9:	de c9                	fmulp  %st,%st(1)
 804afeb:	8b 45 08             	mov    0x8(%ebp),%eax
 804afee:	8b 80 fc 0f 00 00    	mov    0xffc(%eax),%eax
 804aff4:	50                   	push   %eax
 804aff5:	db 04 24             	fildl  (%esp)
 804aff8:	8d 64 24 04          	lea    0x4(%esp),%esp
 804affc:	8b 45 08             	mov    0x8(%ebp),%eax
 804afff:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 804b005:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804b008:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b00e:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804b011:	d9 40 7c             	flds   0x7c(%eax)
 804b014:	de c9                	fmulp  %st,%st(1)
 804b016:	da e9                	fucompp 
 804b018:	df e0                	fnstsw %ax
 804b01a:	9e                   	sahf   
 804b01b:	77 02                	ja     804b01f <GAThread::tour_select()+0x15b>
 804b01d:	eb 06                	jmp    804b025 <GAThread::tour_select()+0x161>
 804b01f:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804b022:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804b025:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 804b029:	8b 45 08             	mov    0x8(%ebp),%eax
 804b02c:	8b 80 f8 0f 00 00    	mov    0xff8(%eax),%eax
 804b032:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804b035:	0f 8f 3e ff ff ff    	jg     804af79 <GAThread::tour_select()+0xb5>
 804b03b:	8b 45 08             	mov    0x8(%ebp),%eax
 804b03e:	8b 90 f4 0f 00 00    	mov    0xff4(%eax),%edx
 804b044:	8b 45 08             	mov    0x8(%ebp),%eax
 804b047:	8b 80 f8 0f 00 00    	mov    0xff8(%eax),%eax
 804b04d:	01 c2                	add    %eax,%edx
 804b04f:	8b 45 08             	mov    0x8(%ebp),%eax
 804b052:	89 90 f4 0f 00 00    	mov    %edx,0xff4(%eax)
 804b058:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804b05b:	c9                   	leave  
 804b05c:	c3                   	ret    
 804b05d:	90                   	nop    

0804b05e <GAThread::binmutation(indiv*)>:
 804b05e:	55                   	push   %ebp
 804b05f:	89 e5                	mov    %esp,%ebp
 804b061:	53                   	push   %ebx
 804b062:	83 ec 34             	sub    $0x34,%esp
 804b065:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
 804b06c:	8b 45 0c             	mov    0xc(%ebp),%eax
 804b06f:	8b 80 80 00 00 00    	mov    0x80(%eax),%eax
 804b075:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804b078:	8b 45 08             	mov    0x8(%ebp),%eax
 804b07b:	8b 40 48             	mov    0x48(%eax),%eax
 804b07e:	85 c0                	test   %eax,%eax
 804b080:	0f 84 45 01 00 00    	je     804b1cb <GAThread::binmutation(indiv*)+0x16d>
 804b086:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
 804b08a:	75 0c                	jne    804b098 <GAThread::binmutation(indiv*)+0x3a>
 804b08c:	c7 04 24 9d ee 04 08 	movl   $0x804ee9d,(%esp)
 804b093:	e8 34 e5 ff ff       	call   80495cc <error_ptr_null(char const*)>
 804b098:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804b09f:	e9 a6 00 00 00       	jmp    804b14a <GAThread::binmutation(indiv*)+0xec>
 804b0a4:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 804b0ab:	8b 45 08             	mov    0x8(%ebp),%eax
 804b0ae:	8b 40 24             	mov    0x24(%eax),%eax
 804b0b1:	83 e8 01             	sub    $0x1,%eax
 804b0b4:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804b0b7:	75 1b                	jne    804b0d4 <GAThread::binmutation(indiv*)+0x76>
 804b0b9:	8b 45 08             	mov    0x8(%ebp),%eax
 804b0bc:	8b 40 20             	mov    0x20(%eax),%eax
 804b0bf:	89 c2                	mov    %eax,%edx
 804b0c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804b0c4:	c1 e0 05             	shl    $0x5,%eax
 804b0c7:	f7 d8                	neg    %eax
 804b0c9:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804b0cc:	83 c0 20             	add    $0x20,%eax
 804b0cf:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804b0d2:	eb 07                	jmp    804b0db <GAThread::binmutation(indiv*)+0x7d>
 804b0d4:	c7 45 f0 20 00 00 00 	movl   $0x20,-0x10(%ebp)
 804b0db:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 804b0e2:	eb 3f                	jmp    804b123 <GAThread::binmutation(indiv*)+0xc5>
 804b0e4:	8b 45 08             	mov    0x8(%ebp),%eax
 804b0e7:	8b 80 14 10 00 00    	mov    0x1014(%eax),%eax
 804b0ed:	89 44 24 04          	mov    %eax,0x4(%esp)
 804b0f1:	8b 45 08             	mov    0x8(%ebp),%eax
 804b0f4:	89 04 24             	mov    %eax,(%esp)
 804b0f7:	e8 a4 1f 00 00       	call   804d0a0 <GAThread::flip(float)>
 804b0fc:	85 c0                	test   %eax,%eax
 804b0fe:	0f 95 c0             	setne  %al
 804b101:	84 c0                	test   %al,%al
 804b103:	74 1a                	je     804b11f <GAThread::binmutation(indiv*)+0xc1>
 804b105:	8b 4d f8             	mov    -0x8(%ebp),%ecx
 804b108:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804b10b:	d3 e0                	shl    %cl,%eax
 804b10d:	09 45 ec             	or     %eax,-0x14(%ebp)
 804b110:	8b 45 08             	mov    0x8(%ebp),%eax
 804b113:	8b 40 10             	mov    0x10(%eax),%eax
 804b116:	8d 50 01             	lea    0x1(%eax),%edx
 804b119:	8b 45 08             	mov    0x8(%ebp),%eax
 804b11c:	89 50 10             	mov    %edx,0x10(%eax)
 804b11f:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 804b123:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804b126:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 804b129:	7c b9                	jl     804b0e4 <GAThread::binmutation(indiv*)+0x86>
 804b12b:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804b12e:	c1 e0 02             	shl    $0x2,%eax
 804b131:	89 c2                	mov    %eax,%edx
 804b133:	03 55 e4             	add    -0x1c(%ebp),%edx
 804b136:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804b139:	c1 e0 02             	shl    $0x2,%eax
 804b13c:	03 45 e4             	add    -0x1c(%ebp),%eax
 804b13f:	8b 00                	mov    (%eax),%eax
 804b141:	33 45 ec             	xor    -0x14(%ebp),%eax
 804b144:	89 02                	mov    %eax,(%edx)
 804b146:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 804b14a:	8b 45 08             	mov    0x8(%ebp),%eax
 804b14d:	8b 40 24             	mov    0x24(%eax),%eax
 804b150:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804b153:	0f 8f 4b ff ff ff    	jg     804b0a4 <GAThread::binmutation(indiv*)+0x46>
 804b159:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804b160:	eb 63                	jmp    804b1c5 <GAThread::binmutation(indiv*)+0x167>
 804b162:	8b 45 08             	mov    0x8(%ebp),%eax
 804b165:	8b 80 14 10 00 00    	mov    0x1014(%eax),%eax
 804b16b:	89 44 24 04          	mov    %eax,0x4(%esp)
 804b16f:	8b 45 08             	mov    0x8(%ebp),%eax
 804b172:	89 04 24             	mov    %eax,(%esp)
 804b175:	e8 26 1f 00 00       	call   804d0a0 <GAThread::flip(float)>
 804b17a:	85 c0                	test   %eax,%eax
 804b17c:	0f 95 c0             	setne  %al
 804b17f:	84 c0                	test   %al,%al
 804b181:	74 3e                	je     804b1c1 <GAThread::binmutation(indiv*)+0x163>
 804b183:	8b 45 0c             	mov    0xc(%ebp),%eax
 804b186:	8b 90 84 00 00 00    	mov    0x84(%eax),%edx
 804b18c:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804b18f:	c1 e0 02             	shl    $0x2,%eax
 804b192:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 804b195:	e8 c6 dc ff ff       	call   8048e60 <rand@plt>
 804b19a:	50                   	push   %eax
 804b19b:	db 04 24             	fildl  (%esp)
 804b19e:	8d 64 24 04          	lea    0x4(%esp),%esp
 804b1a2:	dd 05 98 f6 04 08    	fldl   0x804f698
 804b1a8:	de f9                	fdivrp %st,%st(1)
 804b1aa:	d9 5d d8             	fstps  -0x28(%ebp)
 804b1ad:	d9 45 d8             	flds   -0x28(%ebp)
 804b1b0:	d9 1b                	fstps  (%ebx)
 804b1b2:	8b 45 08             	mov    0x8(%ebp),%eax
 804b1b5:	8b 40 10             	mov    0x10(%eax),%eax
 804b1b8:	8d 50 01             	lea    0x1(%eax),%edx
 804b1bb:	8b 45 08             	mov    0x8(%ebp),%eax
 804b1be:	89 50 10             	mov    %edx,0x10(%eax)
 804b1c1:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 804b1c5:	83 7d f4 07          	cmpl   $0x7,-0xc(%ebp)
 804b1c9:	7e 97                	jle    804b162 <GAThread::binmutation(indiv*)+0x104>
 804b1cb:	83 c4 34             	add    $0x34,%esp
 804b1ce:	5b                   	pop    %ebx
 804b1cf:	5d                   	pop    %ebp
 804b1d0:	c3                   	ret    
 804b1d1:	90                   	nop    

0804b1d2 <GAThread::mutation(indiv*)>:
 804b1d2:	55                   	push   %ebp
 804b1d3:	89 e5                	mov    %esp,%ebp
 804b1d5:	83 ec 48             	sub    $0x48,%esp
 804b1d8:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 804b1dc:	75 0c                	jne    804b1ea <GAThread::mutation(indiv*)+0x18>
 804b1de:	c7 04 24 b3 ee 04 08 	movl   $0x804eeb3,(%esp)
 804b1e5:	e8 e2 e3 ff ff       	call   80495cc <error_ptr_null(char const*)>
 804b1ea:	8b 45 08             	mov    0x8(%ebp),%eax
 804b1ed:	8b 80 14 10 00 00    	mov    0x1014(%eax),%eax
 804b1f3:	89 44 24 04          	mov    %eax,0x4(%esp)
 804b1f7:	8b 45 08             	mov    0x8(%ebp),%eax
 804b1fa:	89 04 24             	mov    %eax,(%esp)
 804b1fd:	e8 9e 1e 00 00       	call   804d0a0 <GAThread::flip(float)>
 804b202:	85 c0                	test   %eax,%eax
 804b204:	74 10                	je     804b216 <GAThread::mutation(indiv*)+0x44>
 804b206:	8b 45 08             	mov    0x8(%ebp),%eax
 804b209:	8b 40 4c             	mov    0x4c(%eax),%eax
 804b20c:	85 c0                	test   %eax,%eax
 804b20e:	74 06                	je     804b216 <GAThread::mutation(indiv*)+0x44>
 804b210:	c6 45 cb 01          	movb   $0x1,-0x35(%ebp)
 804b214:	eb 04                	jmp    804b21a <GAThread::mutation(indiv*)+0x48>
 804b216:	c6 45 cb 00          	movb   $0x0,-0x35(%ebp)
 804b21a:	0f b6 45 cb          	movzbl -0x35(%ebp),%eax
 804b21e:	84 c0                	test   %al,%al
 804b220:	0f 84 10 02 00 00    	je     804b436 <GAThread::mutation(indiv*)+0x264>
 804b226:	8b 45 08             	mov    0x8(%ebp),%eax
 804b229:	8b 40 18             	mov    0x18(%eax),%eax
 804b22c:	83 e8 01             	sub    $0x1,%eax
 804b22f:	89 44 24 08          	mov    %eax,0x8(%esp)
 804b233:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804b23a:	00 
 804b23b:	8b 45 08             	mov    0x8(%ebp),%eax
 804b23e:	89 04 24             	mov    %eax,(%esp)
 804b241:	e8 92 1e 00 00       	call   804d0d8 <GAThread::rnd(int, int)>
 804b246:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804b249:	8b 45 08             	mov    0x8(%ebp),%eax
 804b24c:	8b 40 10             	mov    0x10(%eax),%eax
 804b24f:	8d 50 01             	lea    0x1(%eax),%edx
 804b252:	8b 45 08             	mov    0x8(%ebp),%eax
 804b255:	89 50 10             	mov    %edx,0x10(%eax)
 804b258:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804b25b:	8b 45 08             	mov    0x8(%ebp),%eax
 804b25e:	d9 84 90 90 11 00 00 	flds   0x1190(%eax,%edx,4)
 804b265:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804b268:	8b 45 08             	mov    0x8(%ebp),%eax
 804b26b:	d9 84 90 18 11 00 00 	flds   0x1118(%eax,%edx,4)
 804b272:	de e9                	fsubrp %st,%st(1)
 804b274:	d9 1c 24             	fstps  (%esp)
 804b277:	e8 c2 1c 00 00       	call   804cf3e <std::fabs(float)>
 804b27c:	dd 05 78 f6 04 08    	fldl   0x804f678
 804b282:	da e9                	fucompp 
 804b284:	df e0                	fnstsw %ax
 804b286:	f6 c4 45             	test   $0x45,%ah
 804b289:	0f 94 c0             	sete   %al
 804b28c:	84 c0                	test   %al,%al
 804b28e:	0f 85 be 01 00 00    	jne    804b452 <GAThread::mutation(indiv*)+0x280>
 804b294:	8b 45 08             	mov    0x8(%ebp),%eax
 804b297:	8b 40 44             	mov    0x44(%eax),%eax
 804b29a:	85 c0                	test   %eax,%eax
 804b29c:	0f 84 24 01 00 00    	je     804b3c6 <GAThread::mutation(indiv*)+0x1f4>
 804b2a2:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804b2a5:	8b 45 0c             	mov    0xc(%ebp),%eax
 804b2a8:	8b 04 90             	mov    (%eax,%edx,4),%eax
 804b2ab:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804b2ae:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804b2b1:	8b 45 08             	mov    0x8(%ebp),%eax
 804b2b4:	d9 84 90 18 11 00 00 	flds   0x1118(%eax,%edx,4)
 804b2bb:	d9 45 f4             	flds   -0xc(%ebp)
 804b2be:	de e1                	fsubp  %st,%st(1)
 804b2c0:	d9 5d fc             	fstps  -0x4(%ebp)
 804b2c3:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804b2c6:	8b 45 08             	mov    0x8(%ebp),%eax
 804b2c9:	d9 84 90 90 11 00 00 	flds   0x1190(%eax,%edx,4)
 804b2d0:	d8 65 f4             	fsubs  -0xc(%ebp)
 804b2d3:	d9 5d f8             	fstps  -0x8(%ebp)
 804b2d6:	d9 45 fc             	flds   -0x4(%ebp)
 804b2d9:	d9 c0                	fld    %st(0)
 804b2db:	de c1                	faddp  %st,%st(1)
 804b2dd:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804b2e0:	8b 45 08             	mov    0x8(%ebp),%eax
 804b2e3:	d9 84 90 90 11 00 00 	flds   0x1190(%eax,%edx,4)
 804b2ea:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804b2ed:	8b 45 08             	mov    0x8(%ebp),%eax
 804b2f0:	d9 84 90 18 11 00 00 	flds   0x1118(%eax,%edx,4)
 804b2f7:	de e9                	fsubrp %st,%st(1)
 804b2f9:	de f9                	fdivrp %st,%st(1)
 804b2fb:	d9 5d f0             	fstps  -0x10(%ebp)
 804b2fe:	d9 45 f0             	flds   -0x10(%ebp)
 804b301:	d9 e8                	fld1   
 804b303:	d9 c9                	fxch   %st(1)
 804b305:	da e9                	fucompp 
 804b307:	df e0                	fnstsw %ax
 804b309:	9e                   	sahf   
 804b30a:	77 02                	ja     804b30e <GAThread::mutation(indiv*)+0x13c>
 804b30c:	eb 08                	jmp    804b316 <GAThread::mutation(indiv*)+0x144>
 804b30e:	b8 00 00 80 3f       	mov    $0x3f800000,%eax
 804b313:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804b316:	8b 45 08             	mov    0x8(%ebp),%eax
 804b319:	d9 80 0c 10 00 00    	flds   0x100c(%eax)
 804b31f:	d9 e8                	fld1   
 804b321:	de c1                	faddp  %st,%st(1)
 804b323:	d9 45 f0             	flds   -0x10(%ebp)
 804b326:	d9 e8                	fld1   
 804b328:	de e1                	fsubp  %st,%st(1)
 804b32a:	d9 c9                	fxch   %st(1)
 804b32c:	dd 5c 24 08          	fstpl  0x8(%esp)
 804b330:	dd 1c 24             	fstpl  (%esp)
 804b333:	e8 58 d9 ff ff       	call   8048c90 <pow@plt>
 804b338:	d9 e8                	fld1   
 804b33a:	de e9                	fsubrp %st,%st(1)
 804b33c:	d9 5d ec             	fstps  -0x14(%ebp)
 804b33f:	d9 45 f8             	flds   -0x8(%ebp)
 804b342:	d9 c0                	fld    %st(0)
 804b344:	de c1                	faddp  %st,%st(1)
 804b346:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804b349:	8b 45 08             	mov    0x8(%ebp),%eax
 804b34c:	d9 84 90 90 11 00 00 	flds   0x1190(%eax,%edx,4)
 804b353:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804b356:	8b 45 08             	mov    0x8(%ebp),%eax
 804b359:	d9 84 90 18 11 00 00 	flds   0x1118(%eax,%edx,4)
 804b360:	de e9                	fsubrp %st,%st(1)
 804b362:	de f9                	fdivrp %st,%st(1)
 804b364:	d9 5d f0             	fstps  -0x10(%ebp)
 804b367:	d9 45 f0             	flds   -0x10(%ebp)
 804b36a:	d9 e8                	fld1   
 804b36c:	d9 c9                	fxch   %st(1)
 804b36e:	da e9                	fucompp 
 804b370:	df e0                	fnstsw %ax
 804b372:	9e                   	sahf   
 804b373:	77 02                	ja     804b377 <GAThread::mutation(indiv*)+0x1a5>
 804b375:	eb 08                	jmp    804b37f <GAThread::mutation(indiv*)+0x1ad>
 804b377:	b8 00 00 80 3f       	mov    $0x3f800000,%eax
 804b37c:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804b37f:	8b 45 08             	mov    0x8(%ebp),%eax
 804b382:	d9 80 0c 10 00 00    	flds   0x100c(%eax)
 804b388:	d9 e8                	fld1   
 804b38a:	de c1                	faddp  %st,%st(1)
 804b38c:	d9 45 f0             	flds   -0x10(%ebp)
 804b38f:	d9 e8                	fld1   
 804b391:	de e1                	fsubp  %st,%st(1)
 804b393:	d9 c9                	fxch   %st(1)
 804b395:	dd 5c 24 08          	fstpl  0x8(%esp)
 804b399:	dd 1c 24             	fstpl  (%esp)
 804b39c:	e8 ef d8 ff ff       	call   8048c90 <pow@plt>
 804b3a1:	d9 e8                	fld1   
 804b3a3:	de e1                	fsubp  %st,%st(1)
 804b3a5:	d9 5d e8             	fstps  -0x18(%ebp)
 804b3a8:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804b3ab:	89 44 24 08          	mov    %eax,0x8(%esp)
 804b3af:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804b3b2:	89 44 24 04          	mov    %eax,0x4(%esp)
 804b3b6:	8b 45 08             	mov    0x8(%ebp),%eax
 804b3b9:	89 04 24             	mov    %eax,(%esp)
 804b3bc:	e8 7b 1d 00 00       	call   804d13c <GAThread::rndreal(float, float)>
 804b3c1:	d9 5d e4             	fstps  -0x1c(%ebp)
 804b3c4:	eb 20                	jmp    804b3e6 <GAThread::mutation(indiv*)+0x214>
 804b3c6:	b8 00 00 80 3f       	mov    $0x3f800000,%eax
 804b3cb:	89 44 24 08          	mov    %eax,0x8(%esp)
 804b3cf:	b8 00 00 80 bf       	mov    $0xbf800000,%eax
 804b3d4:	89 44 24 04          	mov    %eax,0x4(%esp)
 804b3d8:	8b 45 08             	mov    0x8(%ebp),%eax
 804b3db:	89 04 24             	mov    %eax,(%esp)
 804b3de:	e8 59 1d 00 00       	call   804d13c <GAThread::rndreal(float, float)>
 804b3e3:	d9 5d e4             	fstps  -0x1c(%ebp)
 804b3e6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804b3e9:	89 44 24 04          	mov    %eax,0x4(%esp)
 804b3ed:	8b 45 08             	mov    0x8(%ebp),%eax
 804b3f0:	89 04 24             	mov    %eax,(%esp)
 804b3f3:	e8 de de ff ff       	call   80492d6 <GAThread::get_delta(float)>
 804b3f8:	dd 05 88 f6 04 08    	fldl   0x804f688
 804b3fe:	de c9                	fmulp  %st,%st(1)
 804b400:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804b403:	8b 45 08             	mov    0x8(%ebp),%eax
 804b406:	d9 84 90 90 11 00 00 	flds   0x1190(%eax,%edx,4)
 804b40d:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804b410:	8b 45 08             	mov    0x8(%ebp),%eax
 804b413:	d9 84 90 18 11 00 00 	flds   0x1118(%eax,%edx,4)
 804b41a:	de e9                	fsubrp %st,%st(1)
 804b41c:	de c9                	fmulp  %st,%st(1)
 804b41e:	d9 5d f0             	fstps  -0x10(%ebp)
 804b421:	8b 4d dc             	mov    -0x24(%ebp),%ecx
 804b424:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804b427:	8b 45 0c             	mov    0xc(%ebp),%eax
 804b42a:	d9 04 90             	flds   (%eax,%edx,4)
 804b42d:	d8 45 f0             	fadds  -0x10(%ebp)
 804b430:	8b 45 0c             	mov    0xc(%ebp),%eax
 804b433:	d9 1c 88             	fstps  (%eax,%ecx,4)
 804b436:	8b 45 08             	mov    0x8(%ebp),%eax
 804b439:	8b 40 48             	mov    0x48(%eax),%eax
 804b43c:	85 c0                	test   %eax,%eax
 804b43e:	74 12                	je     804b452 <GAThread::mutation(indiv*)+0x280>
 804b440:	8b 45 0c             	mov    0xc(%ebp),%eax
 804b443:	89 44 24 04          	mov    %eax,0x4(%esp)
 804b447:	8b 45 08             	mov    0x8(%ebp),%eax
 804b44a:	89 04 24             	mov    %eax,(%esp)
 804b44d:	e8 0c fc ff ff       	call   804b05e <GAThread::binmutation(indiv*)>
 804b452:	c9                   	leave  
 804b453:	c3                   	ret    

0804b454 <GAThread::create_children(float, float, float*, float*, float, float, float*)>:
 804b454:	55                   	push   %ebp
 804b455:	89 e5                	mov    %esp,%ebp
 804b457:	83 ec 48             	sub    $0x48,%esp
 804b45a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
 804b45e:	75 0c                	jne    804b46c <GAThread::create_children(float, float, float*, float*, float, float, float*)+0x18>
 804b460:	c7 04 24 c5 ee 04 08 	movl   $0x804eec5,(%esp)
 804b467:	e8 60 e1 ff ff       	call   80495cc <error_ptr_null(char const*)>
 804b46c:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
 804b470:	75 0c                	jne    804b47e <GAThread::create_children(float, float, float*, float*, float, float, float*)+0x2a>
 804b472:	c7 04 24 db ee 04 08 	movl   $0x804eedb,(%esp)
 804b479:	e8 4e e1 ff ff       	call   80495cc <error_ptr_null(char const*)>
 804b47e:	83 7d 24 00          	cmpl   $0x0,0x24(%ebp)
 804b482:	75 0c                	jne    804b490 <GAThread::create_children(float, float, float*, float*, float, float, float*)+0x3c>
 804b484:	c7 04 24 f1 ee 04 08 	movl   $0x804eef1,(%esp)
 804b48b:	e8 3c e1 ff ff       	call   80495cc <error_ptr_null(char const*)>
 804b490:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 804b497:	d9 45 0c             	flds   0xc(%ebp)
 804b49a:	d9 45 10             	flds   0x10(%ebp)
 804b49d:	d9 c9                	fxch   %st(1)
 804b49f:	da e9                	fucompp 
 804b4a1:	df e0                	fnstsw %ax
 804b4a3:	9e                   	sahf   
 804b4a4:	77 02                	ja     804b4a8 <GAThread::create_children(float, float, float*, float*, float, float, float*)+0x54>
 804b4a6:	eb 19                	jmp    804b4c1 <GAThread::create_children(float, float, float*, float*, float, float, float*)+0x6d>
 804b4a8:	8b 45 0c             	mov    0xc(%ebp),%eax
 804b4ab:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804b4ae:	8b 45 10             	mov    0x10(%ebp),%eax
 804b4b1:	89 45 0c             	mov    %eax,0xc(%ebp)
 804b4b4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804b4b7:	89 45 10             	mov    %eax,0x10(%ebp)
 804b4ba:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)
 804b4c1:	d9 45 0c             	flds   0xc(%ebp)
 804b4c4:	d8 45 10             	fadds  0x10(%ebp)
 804b4c7:	d9 05 80 f6 04 08    	flds   0x804f680
 804b4cd:	de c9                	fmulp  %st,%st(1)
 804b4cf:	d9 5d f8             	fstps  -0x8(%ebp)
 804b4d2:	d9 45 10             	flds   0x10(%ebp)
 804b4d5:	d8 65 0c             	fsubs  0xc(%ebp)
 804b4d8:	d9 5d fc             	fstps  -0x4(%ebp)
 804b4db:	d9 45 0c             	flds   0xc(%ebp)
 804b4de:	d8 65 1c             	fsubs  0x1c(%ebp)
 804b4e1:	d9 45 20             	flds   0x20(%ebp)
 804b4e4:	d8 65 10             	fsubs  0x10(%ebp)
 804b4e7:	da e9                	fucompp 
 804b4e9:	df e0                	fnstsw %ax
 804b4eb:	9e                   	sahf   
 804b4ec:	77 02                	ja     804b4f0 <GAThread::create_children(float, float, float*, float*, float, float, float*)+0x9c>
 804b4ee:	eb 0b                	jmp    804b4fb <GAThread::create_children(float, float, float*, float*, float, float, float*)+0xa7>
 804b4f0:	d9 45 0c             	flds   0xc(%ebp)
 804b4f3:	d8 65 1c             	fsubs  0x1c(%ebp)
 804b4f6:	d9 5d ec             	fstps  -0x14(%ebp)
 804b4f9:	eb 09                	jmp    804b504 <GAThread::create_children(float, float, float*, float*, float, float, float*)+0xb0>
 804b4fb:	d9 45 20             	flds   0x20(%ebp)
 804b4fe:	d8 65 10             	fsubs  0x10(%ebp)
 804b501:	d9 5d ec             	fstps  -0x14(%ebp)
 804b504:	d9 45 ec             	flds   -0x14(%ebp)
 804b507:	d9 ee                	fldz   
 804b509:	da e9                	fucompp 
 804b50b:	df e0                	fnstsw %ax
 804b50d:	9e                   	sahf   
 804b50e:	77 02                	ja     804b512 <GAThread::create_children(float, float, float*, float*, float, float, float*)+0xbe>
 804b510:	eb 08                	jmp    804b51a <GAThread::create_children(float, float, float*, float*, float, float, float*)+0xc6>
 804b512:	b8 00 00 00 00       	mov    $0x0,%eax
 804b517:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804b51a:	8b 45 08             	mov    0x8(%ebp),%eax
 804b51d:	8b 40 44             	mov    0x44(%eax),%eax
 804b520:	85 c0                	test   %eax,%eax
 804b522:	74 6f                	je     804b593 <GAThread::create_children(float, float, float*, float*, float, float, float*)+0x13f>
 804b524:	d9 45 fc             	flds   -0x4(%ebp)
 804b527:	dd 05 78 f6 04 08    	fldl   0x804f678
 804b52d:	d9 c9                	fxch   %st(1)
 804b52f:	da e9                	fucompp 
 804b531:	df e0                	fnstsw %ax
 804b533:	9e                   	sahf   
 804b534:	0f 97 c0             	seta   %al
 804b537:	83 f0 01             	xor    $0x1,%eax
 804b53a:	84 c0                	test   %al,%al
 804b53c:	75 55                	jne    804b593 <GAThread::create_children(float, float, float*, float*, float, float, float*)+0x13f>
 804b53e:	d9 45 ec             	flds   -0x14(%ebp)
 804b541:	d9 c0                	fld    %st(0)
 804b543:	de c1                	faddp  %st,%st(1)
 804b545:	d9 45 fc             	flds   -0x4(%ebp)
 804b548:	de f9                	fdivrp %st,%st(1)
 804b54a:	d9 e8                	fld1   
 804b54c:	de c1                	faddp  %st,%st(1)
 804b54e:	d9 5d e0             	fstps  -0x20(%ebp)
 804b551:	8b 45 08             	mov    0x8(%ebp),%eax
 804b554:	d9 80 08 10 00 00    	flds   0x1008(%eax)
 804b55a:	d9 e8                	fld1   
 804b55c:	de c1                	faddp  %st,%st(1)
 804b55e:	d9 45 e0             	flds   -0x20(%ebp)
 804b561:	d9 c9                	fxch   %st(1)
 804b563:	dd 5c 24 08          	fstpl  0x8(%esp)
 804b567:	dd 1c 24             	fstpl  (%esp)
 804b56a:	e8 21 d7 ff ff       	call   8048c90 <pow@plt>
 804b56f:	dd 05 a0 f6 04 08    	fldl   0x804f6a0
 804b575:	de f1                	fdivp  %st,%st(1)
 804b577:	d9 e8                	fld1   
 804b579:	de c1                	faddp  %st,%st(1)
 804b57b:	d9 5d e8             	fstps  -0x18(%ebp)
 804b57e:	8b 45 08             	mov    0x8(%ebp),%eax
 804b581:	89 04 24             	mov    %eax,(%esp)
 804b584:	e8 bb 1a 00 00       	call   804d044 <GAThread::randomperc()>
 804b589:	d8 4d e8             	fmuls  -0x18(%ebp)
 804b58c:	8b 45 24             	mov    0x24(%ebp),%eax
 804b58f:	d9 18                	fstps  (%eax)
 804b591:	eb 10                	jmp    804b5a3 <GAThread::create_children(float, float, float*, float*, float, float, float*)+0x14f>
 804b593:	8b 45 08             	mov    0x8(%ebp),%eax
 804b596:	89 04 24             	mov    %eax,(%esp)
 804b599:	e8 a6 1a 00 00       	call   804d044 <GAThread::randomperc()>
 804b59e:	8b 45 24             	mov    0x24(%ebp),%eax
 804b5a1:	d9 18                	fstps  (%eax)
 804b5a3:	8b 45 24             	mov    0x24(%ebp),%eax
 804b5a6:	8b 00                	mov    (%eax),%eax
 804b5a8:	89 44 24 04          	mov    %eax,0x4(%esp)
 804b5ac:	8b 45 08             	mov    0x8(%ebp),%eax
 804b5af:	89 04 24             	mov    %eax,(%esp)
 804b5b2:	e8 d9 dd ff ff       	call   8049390 <GAThread::get_beta(float)>
 804b5b7:	d9 5d f4             	fstps  -0xc(%ebp)
 804b5ba:	d9 45 fc             	flds   -0x4(%ebp)
 804b5bd:	d8 4d f4             	fmuls  -0xc(%ebp)
 804b5c0:	d9 1c 24             	fstps  (%esp)
 804b5c3:	e8 76 19 00 00       	call   804cf3e <std::fabs(float)>
 804b5c8:	d9 05 a8 f6 04 08    	flds   0x804f6a8
 804b5ce:	d9 c9                	fxch   %st(1)
 804b5d0:	da e9                	fucompp 
 804b5d2:	df e0                	fnstsw %ax
 804b5d4:	9e                   	sahf   
 804b5d5:	0f 97 c0             	seta   %al
 804b5d8:	84 c0                	test   %al,%al
 804b5da:	74 0c                	je     804b5e8 <GAThread::create_children(float, float, float*, float*, float, float, float*)+0x194>
 804b5dc:	d9 05 a8 f6 04 08    	flds   0x804f6a8
 804b5e2:	d8 75 fc             	fdivs  -0x4(%ebp)
 804b5e5:	d9 5d f4             	fstps  -0xc(%ebp)
 804b5e8:	d9 45 f8             	flds   -0x8(%ebp)
 804b5eb:	d9 45 f4             	flds   -0xc(%ebp)
 804b5ee:	dd 05 88 f6 04 08    	fldl   0x804f688
 804b5f4:	de c9                	fmulp  %st,%st(1)
 804b5f6:	d9 45 fc             	flds   -0x4(%ebp)
 804b5f9:	de c9                	fmulp  %st,%st(1)
 804b5fb:	de c1                	faddp  %st,%st(1)
 804b5fd:	d9 5d cc             	fstps  -0x34(%ebp)
 804b600:	d9 45 cc             	flds   -0x34(%ebp)
 804b603:	8b 45 18             	mov    0x18(%ebp),%eax
 804b606:	d9 18                	fstps  (%eax)
 804b608:	d9 45 f8             	flds   -0x8(%ebp)
 804b60b:	d9 45 f4             	flds   -0xc(%ebp)
 804b60e:	dd 05 a0 f6 04 08    	fldl   0x804f6a0
 804b614:	de c9                	fmulp  %st,%st(1)
 804b616:	d9 45 fc             	flds   -0x4(%ebp)
 804b619:	de c9                	fmulp  %st,%st(1)
 804b61b:	de c1                	faddp  %st,%st(1)
 804b61d:	d9 5d cc             	fstps  -0x34(%ebp)
 804b620:	d9 45 cc             	flds   -0x34(%ebp)
 804b623:	8b 45 14             	mov    0x14(%ebp),%eax
 804b626:	d9 18                	fstps  (%eax)
 804b628:	83 7d dc 01          	cmpl   $0x1,-0x24(%ebp)
 804b62c:	75 1a                	jne    804b648 <GAThread::create_children(float, float, float*, float*, float, float, float*)+0x1f4>
 804b62e:	8b 45 14             	mov    0x14(%ebp),%eax
 804b631:	8b 00                	mov    (%eax),%eax
 804b633:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804b636:	8b 45 18             	mov    0x18(%ebp),%eax
 804b639:	8b 10                	mov    (%eax),%edx
 804b63b:	8b 45 14             	mov    0x14(%ebp),%eax
 804b63e:	89 10                	mov    %edx,(%eax)
 804b640:	8b 55 18             	mov    0x18(%ebp),%edx
 804b643:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804b646:	89 02                	mov    %eax,(%edx)
 804b648:	c9                   	leave  
 804b649:	c3                   	ret    

0804b64a <GAThread::cross_over_unif(int, int, int, int)>:
 804b64a:	55                   	push   %ebp
 804b64b:	89 e5                	mov    %esp,%ebp
 804b64d:	57                   	push   %edi
 804b64e:	56                   	push   %esi
 804b64f:	53                   	push   %ebx
 804b650:	83 ec 5c             	sub    $0x5c,%esp
 804b653:	b8 00 00 00 00       	mov    $0x0,%eax
 804b658:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804b65b:	8b 45 08             	mov    0x8(%ebp),%eax
 804b65e:	8b 80 10 10 00 00    	mov    0x1010(%eax),%eax
 804b664:	89 44 24 04          	mov    %eax,0x4(%esp)
 804b668:	8b 45 08             	mov    0x8(%ebp),%eax
 804b66b:	89 04 24             	mov    %eax,(%esp)
 804b66e:	e8 2d 1a 00 00       	call   804d0a0 <GAThread::flip(float)>
 804b673:	85 c0                	test   %eax,%eax
 804b675:	0f 95 c0             	setne  %al
 804b678:	84 c0                	test   %al,%al
 804b67a:	0f 84 fe 02 00 00    	je     804b97e <GAThread::cross_over_unif(int, int, int, int)+0x334>
 804b680:	8b 45 08             	mov    0x8(%ebp),%eax
 804b683:	8b 40 0c             	mov    0xc(%eax),%eax
 804b686:	8d 50 01             	lea    0x1(%eax),%edx
 804b689:	8b 45 08             	mov    0x8(%ebp),%eax
 804b68c:	89 50 0c             	mov    %edx,0xc(%eax)
 804b68f:	8b 45 08             	mov    0x8(%ebp),%eax
 804b692:	8b 40 48             	mov    0x48(%eax),%eax
 804b695:	85 c0                	test   %eax,%eax
 804b697:	0f 84 15 01 00 00    	je     804b7b2 <GAThread::cross_over_unif(int, int, int, int)+0x168>
 804b69d:	8b 45 08             	mov    0x8(%ebp),%eax
 804b6a0:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804b6a6:	8b 45 18             	mov    0x18(%ebp),%eax
 804b6a9:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b6af:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804b6b2:	8b 88 84 00 00 00    	mov    0x84(%eax),%ecx
 804b6b8:	8b 45 08             	mov    0x8(%ebp),%eax
 804b6bb:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804b6c1:	8b 45 18             	mov    0x18(%ebp),%eax
 804b6c4:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b6ca:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804b6cd:	8b 98 80 00 00 00    	mov    0x80(%eax),%ebx
 804b6d3:	8b 45 08             	mov    0x8(%ebp),%eax
 804b6d6:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804b6dc:	8b 45 14             	mov    0x14(%ebp),%eax
 804b6df:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b6e5:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804b6e8:	8b b0 84 00 00 00    	mov    0x84(%eax),%esi
 804b6ee:	8b 45 08             	mov    0x8(%ebp),%eax
 804b6f1:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804b6f7:	8b 45 14             	mov    0x14(%ebp),%eax
 804b6fa:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b700:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804b703:	8b b8 80 00 00 00    	mov    0x80(%eax),%edi
 804b709:	8b 45 08             	mov    0x8(%ebp),%eax
 804b70c:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 804b712:	8b 45 0c             	mov    0xc(%ebp),%eax
 804b715:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b71b:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804b71e:	8b 80 84 00 00 00    	mov    0x84(%eax),%eax
 804b724:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 804b727:	8b 45 08             	mov    0x8(%ebp),%eax
 804b72a:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 804b730:	8b 45 10             	mov    0x10(%ebp),%eax
 804b733:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b739:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804b73c:	8b 80 80 00 00 00    	mov    0x80(%eax),%eax
 804b742:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804b745:	8b 45 08             	mov    0x8(%ebp),%eax
 804b748:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 804b74e:	8b 45 0c             	mov    0xc(%ebp),%eax
 804b751:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b757:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804b75a:	8b 80 84 00 00 00    	mov    0x84(%eax),%eax
 804b760:	89 45 cc             	mov    %eax,-0x34(%ebp)
 804b763:	8b 45 08             	mov    0x8(%ebp),%eax
 804b766:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 804b76c:	8b 45 0c             	mov    0xc(%ebp),%eax
 804b76f:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b775:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804b778:	8b 80 80 00 00 00    	mov    0x80(%eax),%eax
 804b77e:	89 4c 24 20          	mov    %ecx,0x20(%esp)
 804b782:	89 5c 24 1c          	mov    %ebx,0x1c(%esp)
 804b786:	89 74 24 18          	mov    %esi,0x18(%esp)
 804b78a:	89 7c 24 14          	mov    %edi,0x14(%esp)
 804b78e:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 804b791:	89 54 24 10          	mov    %edx,0x10(%esp)
 804b795:	8b 55 c8             	mov    -0x38(%ebp),%edx
 804b798:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804b79c:	8b 55 cc             	mov    -0x34(%ebp),%edx
 804b79f:	89 54 24 08          	mov    %edx,0x8(%esp)
 804b7a3:	89 44 24 04          	mov    %eax,0x4(%esp)
 804b7a7:	8b 45 08             	mov    0x8(%ebp),%eax
 804b7aa:	89 04 24             	mov    %eax,(%esp)
 804b7ad:	e8 06 f3 ff ff       	call   804aab8 <GAThread::binary_xover(unsigned int*, float*, unsigned int*, float*, unsigned int*, float*, unsigned int*, float*)>
 804b7b2:	8b 45 08             	mov    0x8(%ebp),%eax
 804b7b5:	8b 40 4c             	mov    0x4c(%eax),%eax
 804b7b8:	85 c0                	test   %eax,%eax
 804b7ba:	0f 84 ba 03 00 00    	je     804bb7a <GAThread::cross_over_unif(int, int, int, int)+0x530>
 804b7c0:	8b 45 08             	mov    0x8(%ebp),%eax
 804b7c3:	8b 40 1c             	mov    0x1c(%eax),%eax
 804b7c6:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804b7c9:	e9 5b 01 00 00       	jmp    804b929 <GAThread::cross_over_unif(int, int, int, int)+0x2df>
 804b7ce:	b8 00 00 00 3f       	mov    $0x3f000000,%eax
 804b7d3:	89 44 24 04          	mov    %eax,0x4(%esp)
 804b7d7:	8b 45 08             	mov    0x8(%ebp),%eax
 804b7da:	89 04 24             	mov    %eax,(%esp)
 804b7dd:	e8 be 18 00 00       	call   804d0a0 <GAThread::flip(float)>
 804b7e2:	85 c0                	test   %eax,%eax
 804b7e4:	75 0b                	jne    804b7f1 <GAThread::cross_over_unif(int, int, int, int)+0x1a7>
 804b7e6:	8b 45 08             	mov    0x8(%ebp),%eax
 804b7e9:	8b 40 18             	mov    0x18(%eax),%eax
 804b7ec:	83 f8 01             	cmp    $0x1,%eax
 804b7ef:	75 06                	jne    804b7f7 <GAThread::cross_over_unif(int, int, int, int)+0x1ad>
 804b7f1:	c6 45 d3 01          	movb   $0x1,-0x2d(%ebp)
 804b7f5:	eb 04                	jmp    804b7fb <GAThread::cross_over_unif(int, int, int, int)+0x1b1>
 804b7f7:	c6 45 d3 00          	movb   $0x0,-0x2d(%ebp)
 804b7fb:	0f b6 45 d3          	movzbl -0x2d(%ebp),%eax
 804b7ff:	84 c0                	test   %al,%al
 804b801:	0f 84 b4 00 00 00    	je     804b8bb <GAThread::cross_over_unif(int, int, int, int)+0x271>
 804b807:	8b 55 e0             	mov    -0x20(%ebp),%edx
 804b80a:	8b 45 08             	mov    0x8(%ebp),%eax
 804b80d:	8b 8c 90 90 11 00 00 	mov    0x1190(%eax,%edx,4),%ecx
 804b814:	8b 55 e0             	mov    -0x20(%ebp),%edx
 804b817:	8b 45 08             	mov    0x8(%ebp),%eax
 804b81a:	8b 9c 90 18 11 00 00 	mov    0x1118(%eax,%edx,4),%ebx
 804b821:	8b 45 08             	mov    0x8(%ebp),%eax
 804b824:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804b82a:	8b 45 18             	mov    0x18(%ebp),%eax
 804b82d:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b833:	01 c2                	add    %eax,%edx
 804b835:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804b838:	c1 e0 02             	shl    $0x2,%eax
 804b83b:	8d 34 02             	lea    (%edx,%eax,1),%esi
 804b83e:	8b 45 08             	mov    0x8(%ebp),%eax
 804b841:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804b847:	8b 45 14             	mov    0x14(%ebp),%eax
 804b84a:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b850:	01 c2                	add    %eax,%edx
 804b852:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804b855:	c1 e0 02             	shl    $0x2,%eax
 804b858:	8d 3c 02             	lea    (%edx,%eax,1),%edi
 804b85b:	8b 45 08             	mov    0x8(%ebp),%eax
 804b85e:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 804b864:	8b 45 10             	mov    0x10(%ebp),%eax
 804b867:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b86d:	01 c2                	add    %eax,%edx
 804b86f:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804b872:	d9 04 82             	flds   (%edx,%eax,4)
 804b875:	8b 45 08             	mov    0x8(%ebp),%eax
 804b878:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 804b87e:	8b 45 0c             	mov    0xc(%ebp),%eax
 804b881:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b887:	01 c2                	add    %eax,%edx
 804b889:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804b88c:	8b 14 82             	mov    (%edx,%eax,4),%edx
 804b88f:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 804b892:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 804b896:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 804b89a:	89 5c 24 14          	mov    %ebx,0x14(%esp)
 804b89e:	89 74 24 10          	mov    %esi,0x10(%esp)
 804b8a2:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 804b8a6:	d9 5c 24 08          	fstps  0x8(%esp)
 804b8aa:	89 54 24 04          	mov    %edx,0x4(%esp)
 804b8ae:	8b 45 08             	mov    0x8(%ebp),%eax
 804b8b1:	89 04 24             	mov    %eax,(%esp)
 804b8b4:	e8 9b fb ff ff       	call   804b454 <GAThread::create_children(float, float, float*, float*, float, float, float*)>
 804b8b9:	eb 6a                	jmp    804b925 <GAThread::cross_over_unif(int, int, int, int)+0x2db>
 804b8bb:	8b 45 08             	mov    0x8(%ebp),%eax
 804b8be:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804b8c4:	8b 45 14             	mov    0x14(%ebp),%eax
 804b8c7:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b8cd:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804b8d0:	8b 5d e0             	mov    -0x20(%ebp),%ebx
 804b8d3:	8b 45 08             	mov    0x8(%ebp),%eax
 804b8d6:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 804b8dc:	8b 45 0c             	mov    0xc(%ebp),%eax
 804b8df:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b8e5:	01 c2                	add    %eax,%edx
 804b8e7:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804b8ea:	8b 04 82             	mov    (%edx,%eax,4),%eax
 804b8ed:	89 04 99             	mov    %eax,(%ecx,%ebx,4)
 804b8f0:	8b 45 08             	mov    0x8(%ebp),%eax
 804b8f3:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804b8f9:	8b 45 18             	mov    0x18(%ebp),%eax
 804b8fc:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b902:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804b905:	8b 5d e0             	mov    -0x20(%ebp),%ebx
 804b908:	8b 45 08             	mov    0x8(%ebp),%eax
 804b90b:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 804b911:	8b 45 10             	mov    0x10(%ebp),%eax
 804b914:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b91a:	01 c2                	add    %eax,%edx
 804b91c:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804b91f:	8b 04 82             	mov    (%edx,%eax,4),%eax
 804b922:	89 04 99             	mov    %eax,(%ecx,%ebx,4)
 804b925:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)
 804b929:	8b 45 08             	mov    0x8(%ebp),%eax
 804b92c:	8b 40 18             	mov    0x18(%eax),%eax
 804b92f:	83 e8 01             	sub    $0x1,%eax
 804b932:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804b935:	0f 8d 93 fe ff ff    	jge    804b7ce <GAThread::cross_over_unif(int, int, int, int)+0x184>
 804b93b:	8b 45 08             	mov    0x8(%ebp),%eax
 804b93e:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804b944:	8b 45 14             	mov    0x14(%ebp),%eax
 804b947:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b94d:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804b950:	8b 45 08             	mov    0x8(%ebp),%eax
 804b953:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804b959:	8b 45 18             	mov    0x18(%ebp),%eax
 804b95c:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b962:	01 c2                	add    %eax,%edx
 804b964:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804b967:	89 82 90 00 00 00    	mov    %eax,0x90(%edx)
 804b96d:	8b 82 90 00 00 00    	mov    0x90(%edx),%eax
 804b973:	89 81 90 00 00 00    	mov    %eax,0x90(%ecx)
 804b979:	e9 fc 01 00 00       	jmp    804bb7a <GAThread::cross_over_unif(int, int, int, int)+0x530>
 804b97e:	8b 45 08             	mov    0x8(%ebp),%eax
 804b981:	8b 40 48             	mov    0x48(%eax),%eax
 804b984:	85 c0                	test   %eax,%eax
 804b986:	0f 84 69 01 00 00    	je     804baf5 <GAThread::cross_over_unif(int, int, int, int)+0x4ab>
 804b98c:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 804b993:	e9 9c 00 00 00       	jmp    804ba34 <GAThread::cross_over_unif(int, int, int, int)+0x3ea>
 804b998:	8b 45 08             	mov    0x8(%ebp),%eax
 804b99b:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804b9a1:	8b 45 14             	mov    0x14(%ebp),%eax
 804b9a4:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b9aa:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804b9ad:	8b 90 80 00 00 00    	mov    0x80(%eax),%edx
 804b9b3:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804b9b6:	c1 e0 02             	shl    $0x2,%eax
 804b9b9:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804b9bc:	8b 45 08             	mov    0x8(%ebp),%eax
 804b9bf:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 804b9c5:	8b 45 0c             	mov    0xc(%ebp),%eax
 804b9c8:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b9ce:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804b9d1:	8b 90 80 00 00 00    	mov    0x80(%eax),%edx
 804b9d7:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804b9da:	c1 e0 02             	shl    $0x2,%eax
 804b9dd:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804b9e0:	8b 00                	mov    (%eax),%eax
 804b9e2:	89 01                	mov    %eax,(%ecx)
 804b9e4:	8b 45 08             	mov    0x8(%ebp),%eax
 804b9e7:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804b9ed:	8b 45 18             	mov    0x18(%ebp),%eax
 804b9f0:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804b9f6:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804b9f9:	8b 90 80 00 00 00    	mov    0x80(%eax),%edx
 804b9ff:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804ba02:	c1 e0 02             	shl    $0x2,%eax
 804ba05:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804ba08:	8b 45 08             	mov    0x8(%ebp),%eax
 804ba0b:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 804ba11:	8b 45 10             	mov    0x10(%ebp),%eax
 804ba14:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804ba1a:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804ba1d:	8b 90 80 00 00 00    	mov    0x80(%eax),%edx
 804ba23:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804ba26:	c1 e0 02             	shl    $0x2,%eax
 804ba29:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804ba2c:	8b 00                	mov    (%eax),%eax
 804ba2e:	89 01                	mov    %eax,(%ecx)
 804ba30:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
 804ba34:	8b 45 08             	mov    0x8(%ebp),%eax
 804ba37:	8b 40 24             	mov    0x24(%eax),%eax
 804ba3a:	3b 45 dc             	cmp    -0x24(%ebp),%eax
 804ba3d:	0f 8f 55 ff ff ff    	jg     804b998 <GAThread::cross_over_unif(int, int, int, int)+0x34e>
 804ba43:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 804ba4a:	e9 9c 00 00 00       	jmp    804baeb <GAThread::cross_over_unif(int, int, int, int)+0x4a1>
 804ba4f:	8b 45 08             	mov    0x8(%ebp),%eax
 804ba52:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804ba58:	8b 45 14             	mov    0x14(%ebp),%eax
 804ba5b:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804ba61:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804ba64:	8b 90 84 00 00 00    	mov    0x84(%eax),%edx
 804ba6a:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804ba6d:	c1 e0 02             	shl    $0x2,%eax
 804ba70:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804ba73:	8b 45 08             	mov    0x8(%ebp),%eax
 804ba76:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 804ba7c:	8b 45 0c             	mov    0xc(%ebp),%eax
 804ba7f:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804ba85:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804ba88:	8b 90 84 00 00 00    	mov    0x84(%eax),%edx
 804ba8e:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804ba91:	c1 e0 02             	shl    $0x2,%eax
 804ba94:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804ba97:	8b 00                	mov    (%eax),%eax
 804ba99:	89 01                	mov    %eax,(%ecx)
 804ba9b:	8b 45 08             	mov    0x8(%ebp),%eax
 804ba9e:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804baa4:	8b 45 18             	mov    0x18(%ebp),%eax
 804baa7:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804baad:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804bab0:	8b 90 84 00 00 00    	mov    0x84(%eax),%edx
 804bab6:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804bab9:	c1 e0 02             	shl    $0x2,%eax
 804babc:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804babf:	8b 45 08             	mov    0x8(%ebp),%eax
 804bac2:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 804bac8:	8b 45 10             	mov    0x10(%ebp),%eax
 804bacb:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804bad1:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804bad4:	8b 90 84 00 00 00    	mov    0x84(%eax),%edx
 804bada:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804badd:	c1 e0 02             	shl    $0x2,%eax
 804bae0:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804bae3:	8b 00                	mov    (%eax),%eax
 804bae5:	89 01                	mov    %eax,(%ecx)
 804bae7:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
 804baeb:	83 7d dc 07          	cmpl   $0x7,-0x24(%ebp)
 804baef:	0f 8e 5a ff ff ff    	jle    804ba4f <GAThread::cross_over_unif(int, int, int, int)+0x405>
 804baf5:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 804bafc:	eb 6e                	jmp    804bb6c <GAThread::cross_over_unif(int, int, int, int)+0x522>
 804bafe:	8b 45 08             	mov    0x8(%ebp),%eax
 804bb01:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804bb07:	8b 45 14             	mov    0x14(%ebp),%eax
 804bb0a:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804bb10:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804bb13:	8b 5d e0             	mov    -0x20(%ebp),%ebx
 804bb16:	8b 45 08             	mov    0x8(%ebp),%eax
 804bb19:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 804bb1f:	8b 45 0c             	mov    0xc(%ebp),%eax
 804bb22:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804bb28:	01 c2                	add    %eax,%edx
 804bb2a:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804bb2d:	8b 04 82             	mov    (%edx,%eax,4),%eax
 804bb30:	89 04 99             	mov    %eax,(%ecx,%ebx,4)
 804bb33:	8b 45 08             	mov    0x8(%ebp),%eax
 804bb36:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804bb3c:	8b 45 18             	mov    0x18(%ebp),%eax
 804bb3f:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804bb45:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804bb48:	8b 5d e0             	mov    -0x20(%ebp),%ebx
 804bb4b:	8b 45 08             	mov    0x8(%ebp),%eax
 804bb4e:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 804bb54:	8b 45 10             	mov    0x10(%ebp),%eax
 804bb57:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804bb5d:	01 c2                	add    %eax,%edx
 804bb5f:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804bb62:	8b 04 82             	mov    (%edx,%eax,4),%eax
 804bb65:	89 04 99             	mov    %eax,(%ecx,%ebx,4)
 804bb68:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)
 804bb6c:	8b 45 08             	mov    0x8(%ebp),%eax
 804bb6f:	8b 40 18             	mov    0x18(%eax),%eax
 804bb72:	83 e8 01             	sub    $0x1,%eax
 804bb75:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804bb78:	7d 84                	jge    804bafe <GAThread::cross_over_unif(int, int, int, int)+0x4b4>
 804bb7a:	83 c4 5c             	add    $0x5c,%esp
 804bb7d:	5b                   	pop    %ebx
 804bb7e:	5e                   	pop    %esi
 804bb7f:	5f                   	pop    %edi
 804bb80:	5d                   	pop    %ebp
 804bb81:	c3                   	ret    

0804bb82 <GAThread::generate_new_pop()>:
 804bb82:	55                   	push   %ebp
 804bb83:	89 e5                	mov    %esp,%ebp
 804bb85:	83 ec 28             	sub    $0x28,%esp
 804bb88:	8b 45 08             	mov    0x8(%ebp),%eax
 804bb8b:	89 04 24             	mov    %eax,(%esp)
 804bb8e:	e8 11 f3 ff ff       	call   804aea4 <GAThread::preselect_tour()>
 804bb93:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804bb9a:	e9 27 01 00 00       	jmp    804bcc6 <GAThread::generate_new_pop()+0x144>
 804bb9f:	8b 45 08             	mov    0x8(%ebp),%eax
 804bba2:	89 04 24             	mov    %eax,(%esp)
 804bba5:	e8 1a f3 ff ff       	call   804aec4 <GAThread::tour_select()>
 804bbaa:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804bbad:	8b 45 08             	mov    0x8(%ebp),%eax
 804bbb0:	89 04 24             	mov    %eax,(%esp)
 804bbb3:	e8 0c f3 ff ff       	call   804aec4 <GAThread::tour_select()>
 804bbb8:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804bbbb:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804bbbe:	83 c0 01             	add    $0x1,%eax
 804bbc1:	89 44 24 10          	mov    %eax,0x10(%esp)
 804bbc5:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804bbc8:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804bbcc:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804bbcf:	89 44 24 08          	mov    %eax,0x8(%esp)
 804bbd3:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804bbd6:	89 44 24 04          	mov    %eax,0x4(%esp)
 804bbda:	8b 45 08             	mov    0x8(%ebp),%eax
 804bbdd:	89 04 24             	mov    %eax,(%esp)
 804bbe0:	e8 65 fa ff ff       	call   804b64a <GAThread::cross_over_unif(int, int, int, int)>
 804bbe5:	8b 45 08             	mov    0x8(%ebp),%eax
 804bbe8:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804bbee:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804bbf1:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804bbf7:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804bbfa:	89 44 24 04          	mov    %eax,0x4(%esp)
 804bbfe:	8b 45 08             	mov    0x8(%ebp),%eax
 804bc01:	89 04 24             	mov    %eax,(%esp)
 804bc04:	e8 c9 f5 ff ff       	call   804b1d2 <GAThread::mutation(indiv*)>
 804bc09:	8b 45 08             	mov    0x8(%ebp),%eax
 804bc0c:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804bc12:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804bc15:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804bc1b:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804bc1e:	05 94 00 00 00       	add    $0x94,%eax
 804bc23:	89 44 24 04          	mov    %eax,0x4(%esp)
 804bc27:	8b 45 08             	mov    0x8(%ebp),%eax
 804bc2a:	89 04 24             	mov    %eax,(%esp)
 804bc2d:	e8 a0 f5 ff ff       	call   804b1d2 <GAThread::mutation(indiv*)>
 804bc32:	8b 45 08             	mov    0x8(%ebp),%eax
 804bc35:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804bc3b:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804bc3e:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804bc44:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804bc47:	8b 45 08             	mov    0x8(%ebp),%eax
 804bc4a:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804bc50:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804bc53:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804bc59:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804bc5c:	8d 90 94 00 00 00    	lea    0x94(%eax),%edx
 804bc62:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804bc65:	83 c0 01             	add    $0x1,%eax
 804bc68:	89 82 88 00 00 00    	mov    %eax,0x88(%edx)
 804bc6e:	8b 82 88 00 00 00    	mov    0x88(%edx),%eax
 804bc74:	89 81 88 00 00 00    	mov    %eax,0x88(%ecx)
 804bc7a:	8b 45 08             	mov    0x8(%ebp),%eax
 804bc7d:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804bc83:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804bc86:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804bc8c:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804bc8f:	8b 45 08             	mov    0x8(%ebp),%eax
 804bc92:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804bc98:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804bc9b:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804bca1:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804bca4:	8d 90 94 00 00 00    	lea    0x94(%eax),%edx
 804bcaa:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804bcad:	83 c0 01             	add    $0x1,%eax
 804bcb0:	89 82 8c 00 00 00    	mov    %eax,0x8c(%edx)
 804bcb6:	8b 82 8c 00 00 00    	mov    0x8c(%edx),%eax
 804bcbc:	89 81 8c 00 00 00    	mov    %eax,0x8c(%ecx)
 804bcc2:	83 45 fc 02          	addl   $0x2,-0x4(%ebp)
 804bcc6:	8b 45 08             	mov    0x8(%ebp),%eax
 804bcc9:	8b 00                	mov    (%eax),%eax
 804bccb:	83 e8 01             	sub    $0x1,%eax
 804bcce:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 804bcd1:	0f 8d c8 fe ff ff    	jge    804bb9f <GAThread::generate_new_pop()+0x1d>
 804bcd7:	c9                   	leave  
 804bcd8:	c3                   	ret    
 804bcd9:	90                   	nop    

0804bcda <GAThread::allocnewold()>:
 804bcda:	55                   	push   %ebp
 804bcdb:	89 e5                	mov    %esp,%ebp
 804bcdd:	53                   	push   %ebx
 804bcde:	81 ec 34 01 00 00    	sub    $0x134,%esp
 804bce4:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
 804bceb:	8b 45 08             	mov    0x8(%ebp),%eax
 804bcee:	89 04 24             	mov    %eax,(%esp)
 804bcf1:	e8 52 15 00 00       	call   804d248 <GAThread::randomize()>
 804bcf6:	8b 45 08             	mov    0x8(%ebp),%eax
 804bcf9:	8b 00                	mov    (%eax),%eax
 804bcfb:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804bd01:	89 04 24             	mov    %eax,(%esp)
 804bd04:	e8 d7 d0 ff ff       	call   8048de0 <malloc@plt>
 804bd09:	89 c2                	mov    %eax,%edx
 804bd0b:	8b 45 08             	mov    0x8(%ebp),%eax
 804bd0e:	89 90 0c 12 00 00    	mov    %edx,0x120c(%eax)
 804bd14:	8b 45 08             	mov    0x8(%ebp),%eax
 804bd17:	8b 80 0c 12 00 00    	mov    0x120c(%eax),%eax
 804bd1d:	85 c0                	test   %eax,%eax
 804bd1f:	75 0c                	jne    804bd2d <GAThread::allocnewold()+0x53>
 804bd21:	c7 04 24 0d ef 04 08 	movl   $0x804ef0d,(%esp)
 804bd28:	e8 b7 dc ff ff       	call   80499e4 <nomemory(char const*)>
 804bd2d:	8b 45 08             	mov    0x8(%ebp),%eax
 804bd30:	8b 00                	mov    (%eax),%eax
 804bd32:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804bd38:	89 04 24             	mov    %eax,(%esp)
 804bd3b:	e8 a0 d0 ff ff       	call   8048de0 <malloc@plt>
 804bd40:	89 c2                	mov    %eax,%edx
 804bd42:	8b 45 08             	mov    0x8(%ebp),%eax
 804bd45:	89 90 10 12 00 00    	mov    %edx,0x1210(%eax)
 804bd4b:	8b 45 08             	mov    0x8(%ebp),%eax
 804bd4e:	8b 80 10 12 00 00    	mov    0x1210(%eax),%eax
 804bd54:	85 c0                	test   %eax,%eax
 804bd56:	75 0c                	jne    804bd64 <GAThread::allocnewold()+0x8a>
 804bd58:	c7 04 24 25 ef 04 08 	movl   $0x804ef25,(%esp)
 804bd5f:	e8 80 dc ff ff       	call   80499e4 <nomemory(char const*)>
 804bd64:	8b 45 08             	mov    0x8(%ebp),%eax
 804bd67:	8b 40 24             	mov    0x24(%eax),%eax
 804bd6a:	c1 e0 02             	shl    $0x2,%eax
 804bd6d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804bd70:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 804bd77:	e9 0a 01 00 00       	jmp    804be86 <GAThread::allocnewold()+0x1ac>
 804bd7c:	8b 45 08             	mov    0x8(%ebp),%eax
 804bd7f:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 804bd85:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804bd88:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804bd8e:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 804bd91:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804bd94:	89 04 24             	mov    %eax,(%esp)
 804bd97:	e8 44 d0 ff ff       	call   8048de0 <malloc@plt>
 804bd9c:	89 83 80 00 00 00    	mov    %eax,0x80(%ebx)
 804bda2:	8b 83 80 00 00 00    	mov    0x80(%ebx),%eax
 804bda8:	85 c0                	test   %eax,%eax
 804bdaa:	0f 94 c0             	sete   %al
 804bdad:	84 c0                	test   %al,%al
 804bdaf:	74 0c                	je     804bdbd <GAThread::allocnewold()+0xe3>
 804bdb1:	c7 04 24 3d ef 04 08 	movl   $0x804ef3d,(%esp)
 804bdb8:	e8 27 dc ff ff       	call   80499e4 <nomemory(char const*)>
 804bdbd:	8b 45 08             	mov    0x8(%ebp),%eax
 804bdc0:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804bdc6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804bdc9:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804bdcf:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 804bdd2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804bdd5:	89 04 24             	mov    %eax,(%esp)
 804bdd8:	e8 03 d0 ff ff       	call   8048de0 <malloc@plt>
 804bddd:	89 83 80 00 00 00    	mov    %eax,0x80(%ebx)
 804bde3:	8b 83 80 00 00 00    	mov    0x80(%ebx),%eax
 804bde9:	85 c0                	test   %eax,%eax
 804bdeb:	0f 94 c0             	sete   %al
 804bdee:	84 c0                	test   %al,%al
 804bdf0:	74 0c                	je     804bdfe <GAThread::allocnewold()+0x124>
 804bdf2:	c7 04 24 50 ef 04 08 	movl   $0x804ef50,(%esp)
 804bdf9:	e8 e6 db ff ff       	call   80499e4 <nomemory(char const*)>
 804bdfe:	8b 45 08             	mov    0x8(%ebp),%eax
 804be01:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 804be07:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804be0a:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804be10:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 804be13:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
 804be1a:	e8 c1 cf ff ff       	call   8048de0 <malloc@plt>
 804be1f:	89 83 84 00 00 00    	mov    %eax,0x84(%ebx)
 804be25:	8b 83 84 00 00 00    	mov    0x84(%ebx),%eax
 804be2b:	85 c0                	test   %eax,%eax
 804be2d:	0f 94 c0             	sete   %al
 804be30:	84 c0                	test   %al,%al
 804be32:	74 0c                	je     804be40 <GAThread::allocnewold()+0x166>
 804be34:	c7 04 24 63 ef 04 08 	movl   $0x804ef63,(%esp)
 804be3b:	e8 a4 db ff ff       	call   80499e4 <nomemory(char const*)>
 804be40:	8b 45 08             	mov    0x8(%ebp),%eax
 804be43:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804be49:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804be4c:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804be52:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 804be55:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
 804be5c:	e8 7f cf ff ff       	call   8048de0 <malloc@plt>
 804be61:	89 83 84 00 00 00    	mov    %eax,0x84(%ebx)
 804be67:	8b 83 84 00 00 00    	mov    0x84(%ebx),%eax
 804be6d:	85 c0                	test   %eax,%eax
 804be6f:	0f 94 c0             	sete   %al
 804be72:	84 c0                	test   %al,%al
 804be74:	74 0c                	je     804be82 <GAThread::allocnewold()+0x1a8>
 804be76:	c7 04 24 72 ef 04 08 	movl   $0x804ef72,(%esp)
 804be7d:	e8 62 db ff ff       	call   80499e4 <nomemory(char const*)>
 804be82:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
 804be86:	8b 45 08             	mov    0x8(%ebp),%eax
 804be89:	8b 00                	mov    (%eax),%eax
 804be8b:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
 804be8e:	0f 8f e8 fe ff ff    	jg     804bd7c <GAThread::allocnewold()+0xa2>
 804be94:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804be97:	89 04 24             	mov    %eax,(%esp)
 804be9a:	e8 41 cf ff ff       	call   8048de0 <malloc@plt>
 804be9f:	89 c2                	mov    %eax,%edx
 804bea1:	8b 45 08             	mov    0x8(%ebp),%eax
 804bea4:	89 90 94 12 00 00    	mov    %edx,0x1294(%eax)
 804beaa:	8b 45 08             	mov    0x8(%ebp),%eax
 804bead:	8b 80 94 12 00 00    	mov    0x1294(%eax),%eax
 804beb3:	85 c0                	test   %eax,%eax
 804beb5:	0f 94 c0             	sete   %al
 804beb8:	84 c0                	test   %al,%al
 804beba:	74 0c                	je     804bec8 <GAThread::allocnewold()+0x1ee>
 804bebc:	c7 04 24 d9 ed 04 08 	movl   $0x804edd9,(%esp)
 804bec3:	e8 1c db ff ff       	call   80499e4 <nomemory(char const*)>
 804bec8:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
 804becf:	e8 0c cf ff ff       	call   8048de0 <malloc@plt>
 804bed4:	89 c2                	mov    %eax,%edx
 804bed6:	8b 45 08             	mov    0x8(%ebp),%eax
 804bed9:	89 90 98 12 00 00    	mov    %edx,0x1298(%eax)
 804bedf:	8b 45 08             	mov    0x8(%ebp),%eax
 804bee2:	8b 80 98 12 00 00    	mov    0x1298(%eax),%eax
 804bee8:	85 c0                	test   %eax,%eax
 804beea:	0f 94 c0             	sete   %al
 804beed:	84 c0                	test   %al,%al
 804beef:	74 0c                	je     804befd <GAThread::allocnewold()+0x223>
 804bef1:	c7 04 24 81 ef 04 08 	movl   $0x804ef81,(%esp)
 804bef8:	e8 e7 da ff ff       	call   80499e4 <nomemory(char const*)>
 804befd:	8b 45 08             	mov    0x8(%ebp),%eax
 804bf00:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
 804bf07:	8b 45 08             	mov    0x8(%ebp),%eax
 804bf0a:	8b 50 10             	mov    0x10(%eax),%edx
 804bf0d:	8b 45 08             	mov    0x8(%ebp),%eax
 804bf10:	89 50 0c             	mov    %edx,0xc(%eax)
 804bf13:	81 c4 34 01 00 00    	add    $0x134,%esp
 804bf19:	5b                   	pop    %ebx
 804bf1a:	5d                   	pop    %ebp
 804bf1b:	c3                   	ret    

0804bf1c <GAThread::ThreadFunction(void*)>:
 804bf1c:	55                   	push   %ebp
 804bf1d:	89 e5                	mov    %esp,%ebp
 804bf1f:	53                   	push   %ebx
 804bf20:	83 ec 44             	sub    $0x44,%esp
 804bf23:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
 804bf2a:	8b 45 08             	mov    0x8(%ebp),%eax
 804bf2d:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804bf30:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804bf33:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 804bf3a:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804bf3d:	89 04 24             	mov    %eax,(%esp)
 804bf40:	e8 95 fd ff ff       	call   804bcda <GAThread::allocnewold()>
 804bf45:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804bf4c:	eb 16                	jmp    804bf64 <GAThread::ThreadFunction(void*)+0x48>
 804bf4e:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 804bf51:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804bf54:	b8 00 00 00 00       	mov    $0x0,%eax
 804bf59:	89 84 8a a8 12 00 00 	mov    %eax,0x12a8(%edx,%ecx,4)
 804bf60:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 804bf64:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804bf67:	8b 40 08             	mov    0x8(%eax),%eax
 804bf6a:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804bf6d:	7f df                	jg     804bf4e <GAThread::ThreadFunction(void*)+0x32>
 804bf6f:	c7 04 24 bc 07 05 08 	movl   $0x80507bc,(%esp)
 804bf76:	e8 75 ce ff ff       	call   8048df0 <pthread_mutex_lock@plt>
 804bf7b:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804bf7e:	8b 40 24             	mov    0x24(%eax),%eax
 804bf81:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804bf84:	81 c2 14 12 00 00    	add    $0x1214,%edx
 804bf8a:	8b 0d 04 07 05 08    	mov    0x8050704,%ecx
 804bf90:	89 44 24 08          	mov    %eax,0x8(%esp)
 804bf94:	89 54 24 04          	mov    %edx,0x4(%esp)
 804bf98:	89 0c 24             	mov    %ecx,(%esp)
 804bf9b:	e8 2c d9 ff ff       	call   80498cc <copy_individual(indiv*, indiv*, int)>
 804bfa0:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804bfa3:	8b 90 98 12 00 00    	mov    0x1298(%eax),%edx
 804bfa9:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804bfac:	8b 80 94 12 00 00    	mov    0x1294(%eax),%eax
 804bfb2:	89 54 24 08          	mov    %edx,0x8(%esp)
 804bfb6:	89 44 24 04          	mov    %eax,0x4(%esp)
 804bfba:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804bfbd:	89 04 24             	mov    %eax,(%esp)
 804bfc0:	e8 2f 17 00 00       	call   804d6f4 <GAThread::objectivenew(unsigned int*, float*)>
 804bfc5:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804bfc8:	d9 98 8c 12 00 00    	fstps  0x128c(%eax)
 804bfce:	c7 04 24 bc 07 05 08 	movl   $0x80507bc,(%esp)
 804bfd5:	e8 36 cd ff ff       	call   8048d10 <pthread_mutex_unlock@plt>
 804bfda:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804bfdd:	8b 90 8c 12 00 00    	mov    0x128c(%eax),%edx
 804bfe3:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804bfe6:	89 90 90 12 00 00    	mov    %edx,0x1290(%eax)
 804bfec:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804bfef:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
 804bff6:	e9 f7 01 00 00       	jmp    804c1f2 <GAThread::ThreadFunction(void*)+0x2d6>
 804bffb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804c002:	e9 a0 00 00 00       	jmp    804c0a7 <GAThread::ThreadFunction(void*)+0x18b>
 804c007:	a1 b4 07 05 08       	mov    0x80507b4,%eax
 804c00c:	83 e8 01             	sub    $0x1,%eax
 804c00f:	89 44 24 08          	mov    %eax,0x8(%esp)
 804c013:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804c01a:	00 
 804c01b:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c01e:	89 04 24             	mov    %eax,(%esp)
 804c021:	e8 b2 10 00 00       	call   804d0d8 <GAThread::rnd(int, int)>
 804c026:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804c029:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804c02c:	89 d0                	mov    %edx,%eax
 804c02e:	01 c0                	add    %eax,%eax
 804c030:	01 d0                	add    %edx,%eax
 804c032:	c1 e0 03             	shl    $0x3,%eax
 804c035:	89 c2                	mov    %eax,%edx
 804c037:	a1 b8 07 05 08       	mov    0x80507b8,%eax
 804c03c:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804c03f:	89 04 24             	mov    %eax,(%esp)
 804c042:	e8 a9 cd ff ff       	call   8048df0 <pthread_mutex_lock@plt>
 804c047:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c04a:	8b 58 24             	mov    0x24(%eax),%ebx
 804c04d:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c050:	8b 90 0c 12 00 00    	mov    0x120c(%eax),%edx
 804c056:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804c059:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804c05f:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804c062:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804c065:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804c06b:	89 c2                	mov    %eax,%edx
 804c06d:	a1 04 07 05 08       	mov    0x8050704,%eax
 804c072:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804c075:	89 5c 24 08          	mov    %ebx,0x8(%esp)
 804c079:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 804c07d:	89 04 24             	mov    %eax,(%esp)
 804c080:	e8 47 d8 ff ff       	call   80498cc <copy_individual(indiv*, indiv*, int)>
 804c085:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804c088:	89 d0                	mov    %edx,%eax
 804c08a:	01 c0                	add    %eax,%eax
 804c08c:	01 d0                	add    %edx,%eax
 804c08e:	c1 e0 03             	shl    $0x3,%eax
 804c091:	89 c2                	mov    %eax,%edx
 804c093:	a1 b8 07 05 08       	mov    0x80507b8,%eax
 804c098:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804c09b:	89 04 24             	mov    %eax,(%esp)
 804c09e:	e8 6d cc ff ff       	call   8048d10 <pthread_mutex_unlock@plt>
 804c0a3:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 804c0a7:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c0aa:	8b 00                	mov    (%eax),%eax
 804c0ac:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804c0af:	0f 8f 52 ff ff ff    	jg     804c007 <GAThread::ThreadFunction(void*)+0xeb>
 804c0b5:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c0b8:	89 04 24             	mov    %eax,(%esp)
 804c0bb:	e8 c2 fa ff ff       	call   804bb82 <GAThread::generate_new_pop()>
 804c0c0:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c0c3:	8b 40 04             	mov    0x4(%eax),%eax
 804c0c6:	89 44 24 04          	mov    %eax,0x4(%esp)
 804c0ca:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c0cd:	89 04 24             	mov    %eax,(%esp)
 804c0d0:	e8 dd e4 ff ff       	call   804a5b2 <GAThread::statistics(int)>
 804c0d5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804c0dc:	e9 f4 00 00 00       	jmp    804c1d5 <GAThread::ThreadFunction(void*)+0x2b9>
 804c0e1:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c0e4:	8b 90 4c 22 00 00    	mov    0x224c(%eax),%edx
 804c0ea:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c0ed:	8b 00                	mov    (%eax),%eax
 804c0ef:	0f af c2             	imul   %edx,%eax
 804c0f2:	03 45 f4             	add    -0xc(%ebp),%eax
 804c0f5:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804c0f8:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804c0fb:	89 d0                	mov    %edx,%eax
 804c0fd:	01 c0                	add    %eax,%eax
 804c0ff:	01 d0                	add    %edx,%eax
 804c101:	c1 e0 03             	shl    $0x3,%eax
 804c104:	89 c2                	mov    %eax,%edx
 804c106:	a1 b8 07 05 08       	mov    0x80507b8,%eax
 804c10b:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804c10e:	89 04 24             	mov    %eax,(%esp)
 804c111:	e8 da cc ff ff       	call   8048df0 <pthread_mutex_lock@plt>
 804c116:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c119:	8b 80 fc 0f 00 00    	mov    0xffc(%eax),%eax
 804c11f:	50                   	push   %eax
 804c120:	db 04 24             	fildl  (%esp)
 804c123:	8d 64 24 04          	lea    0x4(%esp),%esp
 804c127:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804c12a:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804c130:	89 c2                	mov    %eax,%edx
 804c132:	a1 04 07 05 08       	mov    0x8050704,%eax
 804c137:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804c13a:	d9 40 78             	flds   0x78(%eax)
 804c13d:	de c9                	fmulp  %st,%st(1)
 804c13f:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c142:	8b 80 fc 0f 00 00    	mov    0xffc(%eax),%eax
 804c148:	50                   	push   %eax
 804c149:	db 04 24             	fildl  (%esp)
 804c14c:	8d 64 24 04          	lea    0x4(%esp),%esp
 804c150:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c153:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804c159:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804c15c:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804c162:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804c165:	d9 40 78             	flds   0x78(%eax)
 804c168:	de c9                	fmulp  %st,%st(1)
 804c16a:	d9 c9                	fxch   %st(1)
 804c16c:	da e9                	fucompp 
 804c16e:	df e0                	fnstsw %ax
 804c170:	9e                   	sahf   
 804c171:	77 02                	ja     804c175 <GAThread::ThreadFunction(void*)+0x259>
 804c173:	eb 3e                	jmp    804c1b3 <GAThread::ThreadFunction(void*)+0x297>
 804c175:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c178:	8b 58 24             	mov    0x24(%eax),%ebx
 804c17b:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804c17e:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804c184:	89 c2                	mov    %eax,%edx
 804c186:	a1 04 07 05 08       	mov    0x8050704,%eax
 804c18b:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804c18e:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c191:	8b 90 10 12 00 00    	mov    0x1210(%eax),%edx
 804c197:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804c19a:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804c1a0:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804c1a3:	89 5c 24 08          	mov    %ebx,0x8(%esp)
 804c1a7:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 804c1ab:	89 04 24             	mov    %eax,(%esp)
 804c1ae:	e8 19 d7 ff ff       	call   80498cc <copy_individual(indiv*, indiv*, int)>
 804c1b3:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804c1b6:	89 d0                	mov    %edx,%eax
 804c1b8:	01 c0                	add    %eax,%eax
 804c1ba:	01 d0                	add    %edx,%eax
 804c1bc:	c1 e0 03             	shl    $0x3,%eax
 804c1bf:	89 c2                	mov    %eax,%edx
 804c1c1:	a1 b8 07 05 08       	mov    0x80507b8,%eax
 804c1c6:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804c1c9:	89 04 24             	mov    %eax,(%esp)
 804c1cc:	e8 3f cb ff ff       	call   8048d10 <pthread_mutex_unlock@plt>
 804c1d1:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 804c1d5:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c1d8:	8b 00                	mov    (%eax),%eax
 804c1da:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804c1dd:	0f 8f fe fe ff ff    	jg     804c0e1 <GAThread::ThreadFunction(void*)+0x1c5>
 804c1e3:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c1e6:	8b 40 04             	mov    0x4(%eax),%eax
 804c1e9:	8d 50 01             	lea    0x1(%eax),%edx
 804c1ec:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c1ef:	89 50 04             	mov    %edx,0x4(%eax)
 804c1f2:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c1f5:	8b 50 04             	mov    0x4(%eax),%edx
 804c1f8:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c1fb:	8b 40 08             	mov    0x8(%eax),%eax
 804c1fe:	39 c2                	cmp    %eax,%edx
 804c200:	0f 8e f5 fd ff ff    	jle    804bffb <GAThread::ThreadFunction(void*)+0xdf>
 804c206:	c7 04 24 bc 07 05 08 	movl   $0x80507bc,(%esp)
 804c20d:	e8 de cb ff ff       	call   8048df0 <pthread_mutex_lock@plt>
 804c212:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c215:	8b 98 4c 22 00 00    	mov    0x224c(%eax),%ebx
 804c21b:	c7 44 24 04 93 ef 04 	movl   $0x804ef93,0x4(%esp)
 804c222:	08 
 804c223:	c7 04 24 e0 03 05 08 	movl   $0x80503e0,(%esp)
 804c22a:	e8 a1 ca ff ff       	call   8048cd0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
 804c22f:	89 5c 24 04          	mov    %ebx,0x4(%esp)
 804c233:	89 04 24             	mov    %eax,(%esp)
 804c236:	e8 a5 c9 ff ff       	call   8048be0 <std::ostream::operator<<(int)@plt>
 804c23b:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)
 804c242:	00 
 804c243:	89 04 24             	mov    %eax,(%esp)
 804c246:	e8 65 ca ff ff       	call   8048cb0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char)@plt>
 804c24b:	c7 04 24 a0 ef 04 08 	movl   $0x804efa0,(%esp)
 804c252:	e8 19 cb ff ff       	call   8048d70 <printf@plt>
 804c257:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c25a:	d9 80 1c 10 00 00    	flds   0x101c(%eax)
 804c260:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c263:	d9 80 24 10 00 00    	flds   0x1024(%eax)
 804c269:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c26c:	d9 80 20 10 00 00    	flds   0x1020(%eax)
 804c272:	d9 ca                	fxch   %st(2)
 804c274:	dd 5c 24 14          	fstpl  0x14(%esp)
 804c278:	dd 5c 24 0c          	fstpl  0xc(%esp)
 804c27c:	dd 5c 24 04          	fstpl  0x4(%esp)
 804c280:	c7 04 24 d8 ef 04 08 	movl   $0x804efd8,(%esp)
 804c287:	e8 e4 ca ff ff       	call   8048d70 <printf@plt>
 804c28c:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c28f:	8b 50 0c             	mov    0xc(%eax),%edx
 804c292:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c295:	8b 40 10             	mov    0x10(%eax),%eax
 804c298:	89 54 24 08          	mov    %edx,0x8(%esp)
 804c29c:	89 44 24 04          	mov    %eax,0x4(%esp)
 804c2a0:	c7 04 24 00 f0 04 08 	movl   $0x804f000,(%esp)
 804c2a7:	e8 c4 ca ff ff       	call   8048d70 <printf@plt>
 804c2ac:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c2af:	8b 40 1c             	mov    0x1c(%eax),%eax
 804c2b2:	85 c0                	test   %eax,%eax
 804c2b4:	0f 84 dd 00 00 00    	je     804c397 <GAThread::ThreadFunction(void*)+0x47b>
 804c2ba:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c2bd:	8b 80 94 12 00 00    	mov    0x1294(%eax),%eax
 804c2c3:	8b 00                	mov    (%eax),%eax
 804c2c5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804c2c8:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804c2cb:	89 c2                	mov    %eax,%edx
 804c2cd:	23 55 e4             	and    -0x1c(%ebp),%edx
 804c2d0:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804c2d3:	01 c0                	add    %eax,%eax
 804c2d5:	23 45 e4             	and    -0x1c(%ebp),%eax
 804c2d8:	01 c2                	add    %eax,%edx
 804c2da:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804c2dd:	c1 e0 02             	shl    $0x2,%eax
 804c2e0:	23 45 e4             	and    -0x1c(%ebp),%eax
 804c2e3:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804c2e6:	83 c0 01             	add    $0x1,%eax
 804c2e9:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804c2ec:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804c2ef:	89 44 24 04          	mov    %eax,0x4(%esp)
 804c2f3:	c7 04 24 2e f0 04 08 	movl   $0x804f02e,(%esp)
 804c2fa:	e8 71 ca ff ff       	call   8048d70 <printf@plt>
 804c2ff:	c7 04 24 48 f0 04 08 	movl   $0x804f048,(%esp)
 804c306:	e8 45 cb ff ff       	call   8048e50 <puts@plt>
 804c30b:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c30e:	8b 90 98 12 00 00    	mov    0x1298(%eax),%edx
 804c314:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c317:	8b 80 94 12 00 00    	mov    0x1294(%eax),%eax
 804c31d:	89 54 24 04          	mov    %edx,0x4(%esp)
 804c321:	89 04 24             	mov    %eax,(%esp)
 804c324:	e8 e7 db ff ff       	call   8049f10 <writechrom1(unsigned int*, float*)>
 804c329:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c32c:	8b 50 14             	mov    0x14(%eax),%edx
 804c32f:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c332:	d9 80 8c 12 00 00    	flds   0x128c(%eax)
 804c338:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804c33c:	dd 5c 24 04          	fstpl  0x4(%esp)
 804c340:	c7 04 24 54 f0 04 08 	movl   $0x804f054,(%esp)
 804c347:	e8 24 ca ff ff       	call   8048d70 <printf@plt>
 804c34c:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c34f:	8b 40 08             	mov    0x8(%eax),%eax
 804c352:	89 44 24 04          	mov    %eax,0x4(%esp)
 804c356:	c7 04 24 82 f0 04 08 	movl   $0x804f082,(%esp)
 804c35d:	e8 0e ca ff ff       	call   8048d70 <printf@plt>
 804c362:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 804c369:	eb 21                	jmp    804c38c <GAThread::ThreadFunction(void*)+0x470>
 804c36b:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804c36e:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c371:	d9 84 90 a8 12 00 00 	flds   0x12a8(%eax,%edx,4)
 804c378:	dd 5c 24 04          	fstpl  0x4(%esp)
 804c37c:	c7 04 24 9b f0 04 08 	movl   $0x804f09b,(%esp)
 804c383:	e8 e8 c9 ff ff       	call   8048d70 <printf@plt>
 804c388:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
 804c38c:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c38f:	8b 40 08             	mov    0x8(%eax),%eax
 804c392:	3b 45 dc             	cmp    -0x24(%ebp),%eax
 804c395:	7d d4                	jge    804c36b <GAThread::ThreadFunction(void*)+0x44f>
 804c397:	c7 04 24 a0 ef 04 08 	movl   $0x804efa0,(%esp)
 804c39e:	e8 cd c9 ff ff       	call   8048d70 <printf@plt>
 804c3a3:	c7 04 24 a0 f0 04 08 	movl   $0x804f0a0,(%esp)
 804c3aa:	e8 a1 ca ff ff       	call   8048e50 <puts@plt>
 804c3af:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c3b2:	89 04 24             	mov    %eax,(%esp)
 804c3b5:	e8 1c d1 ff ff       	call   80494d6 <GAThread::free_all()>
 804c3ba:	c7 04 24 bc 07 05 08 	movl   $0x80507bc,(%esp)
 804c3c1:	e8 4a c9 ff ff       	call   8048d10 <pthread_mutex_unlock@plt>
 804c3c6:	83 c4 44             	add    $0x44,%esp
 804c3c9:	5b                   	pop    %ebx
 804c3ca:	5d                   	pop    %ebp
 804c3cb:	c3                   	ret    

0804c3cc <ignore_comment()>:
 804c3cc:	55                   	push   %ebp
 804c3cd:	89 e5                	mov    %esp,%ebp
 804c3cf:	83 ec 08             	sub    $0x8,%esp
 804c3d2:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c3d7:	85 c0                	test   %eax,%eax
 804c3d9:	74 0f                	je     804c3ea <ignore_comment()+0x1e>
 804c3db:	e8 40 c8 ff ff       	call   8048c20 <getchar@plt>
 804c3e0:	83 f8 3a             	cmp    $0x3a,%eax
 804c3e3:	0f 95 c0             	setne  %al
 804c3e6:	84 c0                	test   %al,%al
 804c3e8:	75 f1                	jne    804c3db <ignore_comment()+0xf>
 804c3ea:	c9                   	leave  
 804c3eb:	c3                   	ret    

0804c3ec <input_parameters()>:
 804c3ec:	55                   	push   %ebp
 804c3ed:	89 e5                	mov    %esp,%ebp
 804c3ef:	53                   	push   %ebx
 804c3f0:	83 ec 34             	sub    $0x34,%esp
 804c3f3:	e8 28 c8 ff ff       	call   8048c20 <getchar@plt>
 804c3f8:	88 45 fb             	mov    %al,-0x5(%ebp)
 804c3fb:	80 7d fb 79          	cmpb   $0x79,-0x5(%ebp)
 804c3ff:	74 06                	je     804c407 <input_parameters()+0x1b>
 804c401:	80 7d fb 6e          	cmpb   $0x6e,-0x5(%ebp)
 804c405:	75 ec                	jne    804c3f3 <input_parameters()+0x7>
 804c407:	80 7d fb 79          	cmpb   $0x79,-0x5(%ebp)
 804c40b:	75 0c                	jne    804c419 <input_parameters()+0x2d>
 804c40d:	c7 05 c0 04 05 08 01 	movl   $0x1,0x80504c0
 804c414:	00 00 00 
 804c417:	eb 0a                	jmp    804c423 <input_parameters()+0x37>
 804c419:	c7 05 c0 04 05 08 00 	movl   $0x0,0x80504c0
 804c420:	00 00 00 
 804c423:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c428:	85 c0                	test   %eax,%eax
 804c42a:	74 0c                	je     804c438 <input_parameters()+0x4c>
 804c42c:	c7 04 24 a4 f0 04 08 	movl   $0x804f0a4,(%esp)
 804c433:	e8 38 c9 ff ff       	call   8048d70 <printf@plt>
 804c438:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c43d:	85 c0                	test   %eax,%eax
 804c43f:	75 0c                	jne    804c44d <input_parameters()+0x61>
 804c441:	c7 04 24 cc f0 04 08 	movl   $0x804f0cc,(%esp)
 804c448:	e8 23 c9 ff ff       	call   8048d70 <printf@plt>
 804c44d:	e8 7a ff ff ff       	call   804c3cc <ignore_comment()>
 804c452:	c7 44 24 04 84 04 05 	movl   $0x8050484,0x4(%esp)
 804c459:	08 
 804c45a:	c7 04 24 f5 f0 04 08 	movl   $0x804f0f5,(%esp)
 804c461:	e8 8a c8 ff ff       	call   8048cf0 <scanf@plt>
 804c466:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c46b:	85 c0                	test   %eax,%eax
 804c46d:	75 0c                	jne    804c47b <input_parameters()+0x8f>
 804c46f:	c7 04 24 f8 f0 04 08 	movl   $0x804f0f8,(%esp)
 804c476:	e8 f5 c8 ff ff       	call   8048d70 <printf@plt>
 804c47b:	e8 4c ff ff ff       	call   804c3cc <ignore_comment()>
 804c480:	c7 44 24 04 80 04 05 	movl   $0x8050480,0x4(%esp)
 804c487:	08 
 804c488:	c7 04 24 f5 f0 04 08 	movl   $0x804f0f5,(%esp)
 804c48f:	e8 5c c8 ff ff       	call   8048cf0 <scanf@plt>
 804c494:	a1 80 04 05 08       	mov    0x8050480,%eax
 804c499:	3d e8 03 00 00       	cmp    $0x3e8,%eax
 804c49e:	7e 24                	jle    804c4c4 <input_parameters()+0xd8>
 804c4a0:	c7 04 24 24 f1 04 08 	movl   $0x804f124,(%esp)
 804c4a7:	e8 c4 c8 ff ff       	call   8048d70 <printf@plt>
 804c4ac:	c7 04 24 52 f1 04 08 	movl   $0x804f152,(%esp)
 804c4b3:	e8 b8 c8 ff ff       	call   8048d70 <printf@plt>
 804c4b8:	c7 04 24 ff ff ff ff 	movl   $0xffffffff,(%esp)
 804c4bf:	e8 dc c9 ff ff       	call   8048ea0 <exit@plt>
 804c4c4:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c4c9:	85 c0                	test   %eax,%eax
 804c4cb:	75 0c                	jne    804c4d9 <input_parameters()+0xed>
 804c4cd:	c7 04 24 6c f1 04 08 	movl   $0x804f16c,(%esp)
 804c4d4:	e8 97 c8 ff ff       	call   8048d70 <printf@plt>
 804c4d9:	e8 ee fe ff ff       	call   804c3cc <ignore_comment()>
 804c4de:	c7 44 24 04 e0 04 05 	movl   $0x80504e0,0x4(%esp)
 804c4e5:	08 
 804c4e6:	c7 04 24 95 f1 04 08 	movl   $0x804f195,(%esp)
 804c4ed:	e8 fe c7 ff ff       	call   8048cf0 <scanf@plt>
 804c4f2:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c4f7:	85 c0                	test   %eax,%eax
 804c4f9:	75 0c                	jne    804c507 <input_parameters()+0x11b>
 804c4fb:	c7 04 24 98 f1 04 08 	movl   $0x804f198,(%esp)
 804c502:	e8 69 c8 ff ff       	call   8048d70 <printf@plt>
 804c507:	e8 c0 fe ff ff       	call   804c3cc <ignore_comment()>
 804c50c:	c7 44 24 04 e4 04 05 	movl   $0x80504e4,0x4(%esp)
 804c513:	08 
 804c514:	c7 04 24 95 f1 04 08 	movl   $0x804f195,(%esp)
 804c51b:	e8 d0 c7 ff ff       	call   8048cf0 <scanf@plt>
 804c520:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c525:	85 c0                	test   %eax,%eax
 804c527:	75 14                	jne    804c53d <input_parameters()+0x151>
 804c529:	c7 44 24 04 1e 00 00 	movl   $0x1e,0x4(%esp)
 804c530:	00 
 804c531:	c7 04 24 c4 f1 04 08 	movl   $0x804f1c4,(%esp)
 804c538:	e8 33 c8 ff ff       	call   8048d70 <printf@plt>
 804c53d:	e8 8a fe ff ff       	call   804c3cc <ignore_comment()>
 804c542:	c7 44 24 04 8c 04 05 	movl   $0x805048c,0x4(%esp)
 804c549:	08 
 804c54a:	c7 04 24 f5 f0 04 08 	movl   $0x804f0f5,(%esp)
 804c551:	e8 9a c7 ff ff       	call   8048cf0 <scanf@plt>
 804c556:	c7 05 bc 04 05 08 00 	movl   $0x0,0x80504bc
 804c55d:	00 00 00 
 804c560:	a1 bc 04 05 08       	mov    0x80504bc,%eax
 804c565:	a3 b8 04 05 08       	mov    %eax,0x80504b8
 804c56a:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c56f:	85 c0                	test   %eax,%eax
 804c571:	75 0c                	jne    804c57f <input_parameters()+0x193>
 804c573:	c7 04 24 f0 f1 04 08 	movl   $0x804f1f0,(%esp)
 804c57a:	e8 f1 c7 ff ff       	call   8048d70 <printf@plt>
 804c57f:	e8 48 fe ff ff       	call   804c3cc <ignore_comment()>
 804c584:	e8 97 c6 ff ff       	call   8048c20 <getchar@plt>
 804c589:	88 45 fb             	mov    %al,-0x5(%ebp)
 804c58c:	80 7d fb 62          	cmpb   $0x62,-0x5(%ebp)
 804c590:	74 06                	je     804c598 <input_parameters()+0x1ac>
 804c592:	80 7d fb 72          	cmpb   $0x72,-0x5(%ebp)
 804c596:	75 ec                	jne    804c584 <input_parameters()+0x198>
 804c598:	80 7d fb 62          	cmpb   $0x62,-0x5(%ebp)
 804c59c:	75 0c                	jne    804c5aa <input_parameters()+0x1be>
 804c59e:	c7 05 b8 04 05 08 01 	movl   $0x1,0x80504b8
 804c5a5:	00 00 00 
 804c5a8:	eb 0a                	jmp    804c5b4 <input_parameters()+0x1c8>
 804c5aa:	c7 05 bc 04 05 08 01 	movl   $0x1,0x80504bc
 804c5b1:	00 00 00 
 804c5b4:	a1 b8 04 05 08       	mov    0x80504b8,%eax
 804c5b9:	85 c0                	test   %eax,%eax
 804c5bb:	74 0a                	je     804c5c7 <input_parameters()+0x1db>
 804c5bd:	a1 8c 04 05 08       	mov    0x805048c,%eax
 804c5c2:	a3 90 04 05 08       	mov    %eax,0x8050490
 804c5c7:	e8 00 fe ff ff       	call   804c3cc <ignore_comment()>
 804c5cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804c5d3:	eb 4e                	jmp    804c623 <input_parameters()+0x237>
 804c5d5:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c5da:	85 c0                	test   %eax,%eax
 804c5dc:	75 16                	jne    804c5f4 <input_parameters()+0x208>
 804c5de:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804c5e1:	83 c0 01             	add    $0x1,%eax
 804c5e4:	89 44 24 04          	mov    %eax,0x4(%esp)
 804c5e8:	c7 04 24 38 f2 04 08 	movl   $0x804f238,(%esp)
 804c5ef:	e8 7c c7 ff ff       	call   8048d70 <printf@plt>
 804c5f4:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804c5f7:	c1 e0 02             	shl    $0x2,%eax
 804c5fa:	8d 90 80 06 05 08    	lea    0x8050680(%eax),%edx
 804c600:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804c603:	c1 e0 02             	shl    $0x2,%eax
 804c606:	05 00 06 05 08       	add    $0x8050600,%eax
 804c60b:	89 54 24 08          	mov    %edx,0x8(%esp)
 804c60f:	89 44 24 04          	mov    %eax,0x4(%esp)
 804c613:	c7 04 24 62 f2 04 08 	movl   $0x804f262,(%esp)
 804c61a:	e8 d1 c6 ff ff       	call   8048cf0 <scanf@plt>
 804c61f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 804c623:	a1 8c 04 05 08       	mov    0x805048c,%eax
 804c628:	83 e8 01             	sub    $0x1,%eax
 804c62b:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804c62e:	7d a5                	jge    804c5d5 <input_parameters()+0x1e9>
 804c630:	a1 bc 04 05 08       	mov    0x80504bc,%eax
 804c635:	85 c0                	test   %eax,%eax
 804c637:	74 4c                	je     804c685 <input_parameters()+0x299>
 804c639:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c63e:	85 c0                	test   %eax,%eax
 804c640:	75 0c                	jne    804c64e <input_parameters()+0x262>
 804c642:	c7 04 24 68 f2 04 08 	movl   $0x804f268,(%esp)
 804c649:	e8 22 c7 ff ff       	call   8048d70 <printf@plt>
 804c64e:	e8 79 fd ff ff       	call   804c3cc <ignore_comment()>
 804c653:	e8 c8 c5 ff ff       	call   8048c20 <getchar@plt>
 804c658:	88 45 fb             	mov    %al,-0x5(%ebp)
 804c65b:	80 7d fb 79          	cmpb   $0x79,-0x5(%ebp)
 804c65f:	74 06                	je     804c667 <input_parameters()+0x27b>
 804c661:	80 7d fb 6e          	cmpb   $0x6e,-0x5(%ebp)
 804c665:	75 ec                	jne    804c653 <input_parameters()+0x267>
 804c667:	80 7d fb 79          	cmpb   $0x79,-0x5(%ebp)
 804c66b:	75 0c                	jne    804c679 <input_parameters()+0x28d>
 804c66d:	c7 05 b4 04 05 08 01 	movl   $0x1,0x80504b4
 804c674:	00 00 00 
 804c677:	eb 2c                	jmp    804c6a5 <input_parameters()+0x2b9>
 804c679:	c7 05 b4 04 05 08 00 	movl   $0x0,0x80504b4
 804c680:	00 00 00 
 804c683:	eb 20                	jmp    804c6a5 <input_parameters()+0x2b9>
 804c685:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c68a:	85 c0                	test   %eax,%eax
 804c68c:	74 17                	je     804c6a5 <input_parameters()+0x2b9>
 804c68e:	e8 39 fd ff ff       	call   804c3cc <ignore_comment()>
 804c693:	e8 88 c5 ff ff       	call   8048c20 <getchar@plt>
 804c698:	88 45 fb             	mov    %al,-0x5(%ebp)
 804c69b:	c7 05 b4 04 05 08 01 	movl   $0x1,0x80504b4
 804c6a2:	00 00 00 
 804c6a5:	a1 b8 04 05 08       	mov    0x80504b8,%eax
 804c6aa:	85 c0                	test   %eax,%eax
 804c6ac:	74 30                	je     804c6de <input_parameters()+0x2f2>
 804c6ae:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c6b3:	85 c0                	test   %eax,%eax
 804c6b5:	75 0c                	jne    804c6c3 <input_parameters()+0x2d7>
 804c6b7:	c7 04 24 8c f2 04 08 	movl   $0x804f28c,(%esp)
 804c6be:	e8 ad c6 ff ff       	call   8048d70 <printf@plt>
 804c6c3:	e8 04 fd ff ff       	call   804c3cc <ignore_comment()>
 804c6c8:	c7 44 24 04 94 04 05 	movl   $0x8050494,0x4(%esp)
 804c6cf:	08 
 804c6d0:	c7 04 24 f5 f0 04 08 	movl   $0x804f0f5,(%esp)
 804c6d7:	e8 14 c6 ff ff       	call   8048cf0 <scanf@plt>
 804c6dc:	eb 2c                	jmp    804c70a <input_parameters()+0x31e>
 804c6de:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c6e3:	85 c0                	test   %eax,%eax
 804c6e5:	74 23                	je     804c70a <input_parameters()+0x31e>
 804c6e7:	e8 e0 fc ff ff       	call   804c3cc <ignore_comment()>
 804c6ec:	c7 44 24 04 94 04 05 	movl   $0x8050494,0x4(%esp)
 804c6f3:	08 
 804c6f4:	c7 04 24 f5 f0 04 08 	movl   $0x804f0f5,(%esp)
 804c6fb:	e8 f0 c5 ff ff       	call   8048cf0 <scanf@plt>
 804c700:	c7 05 94 04 05 08 00 	movl   $0x0,0x8050494
 804c707:	00 00 00 
 804c70a:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c70f:	85 c0                	test   %eax,%eax
 804c711:	75 0c                	jne    804c71f <input_parameters()+0x333>
 804c713:	c7 04 24 cc f2 04 08 	movl   $0x804f2cc,(%esp)
 804c71a:	e8 51 c6 ff ff       	call   8048d70 <printf@plt>
 804c71f:	e8 a8 fc ff ff       	call   804c3cc <ignore_comment()>
 804c724:	e8 f7 c4 ff ff       	call   8048c20 <getchar@plt>
 804c729:	88 45 fb             	mov    %al,-0x5(%ebp)
 804c72c:	80 7d fb 79          	cmpb   $0x79,-0x5(%ebp)
 804c730:	74 06                	je     804c738 <input_parameters()+0x34c>
 804c732:	80 7d fb 6e          	cmpb   $0x6e,-0x5(%ebp)
 804c736:	75 ec                	jne    804c724 <input_parameters()+0x338>
 804c738:	80 7d fb 79          	cmpb   $0x79,-0x5(%ebp)
 804c73c:	75 35                	jne    804c773 <input_parameters()+0x387>
 804c73e:	c7 05 ac 04 05 08 01 	movl   $0x1,0x80504ac
 804c745:	00 00 00 
 804c748:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c74d:	85 c0                	test   %eax,%eax
 804c74f:	75 0c                	jne    804c75d <input_parameters()+0x371>
 804c751:	c7 04 24 f4 f2 04 08 	movl   $0x804f2f4,(%esp)
 804c758:	e8 13 c6 ff ff       	call   8048d70 <printf@plt>
 804c75d:	c7 44 24 04 f8 06 05 	movl   $0x80506f8,0x4(%esp)
 804c764:	08 
 804c765:	c7 04 24 95 f1 04 08 	movl   $0x804f195,(%esp)
 804c76c:	e8 7f c5 ff ff       	call   8048cf0 <scanf@plt>
 804c771:	eb 0a                	jmp    804c77d <input_parameters()+0x391>
 804c773:	c7 05 ac 04 05 08 00 	movl   $0x0,0x80504ac
 804c77a:	00 00 00 
 804c77d:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c782:	85 c0                	test   %eax,%eax
 804c784:	75 0c                	jne    804c792 <input_parameters()+0x3a6>
 804c786:	c7 04 24 1c f3 04 08 	movl   $0x804f31c,(%esp)
 804c78d:	e8 de c5 ff ff       	call   8048d70 <printf@plt>
 804c792:	e8 35 fc ff ff       	call   804c3cc <ignore_comment()>
 804c797:	e8 84 c4 ff ff       	call   8048c20 <getchar@plt>
 804c79c:	88 45 fb             	mov    %al,-0x5(%ebp)
 804c79f:	80 7d fb 79          	cmpb   $0x79,-0x5(%ebp)
 804c7a3:	74 06                	je     804c7ab <input_parameters()+0x3bf>
 804c7a5:	80 7d fb 6e          	cmpb   $0x6e,-0x5(%ebp)
 804c7a9:	75 ec                	jne    804c797 <input_parameters()+0x3ab>
 804c7ab:	80 7d fb 79          	cmpb   $0x79,-0x5(%ebp)
 804c7af:	75 0c                	jne    804c7bd <input_parameters()+0x3d1>
 804c7b1:	c7 05 b0 04 05 08 01 	movl   $0x1,0x80504b0
 804c7b8:	00 00 00 
 804c7bb:	eb 0a                	jmp    804c7c7 <input_parameters()+0x3db>
 804c7bd:	c7 05 b0 04 05 08 00 	movl   $0x0,0x80504b0
 804c7c4:	00 00 00 
 804c7c7:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c7cc:	85 c0                	test   %eax,%eax
 804c7ce:	75 0c                	jne    804c7dc <input_parameters()+0x3f0>
 804c7d0:	c7 04 24 3d f3 04 08 	movl   $0x804f33d,(%esp)
 804c7d7:	e8 94 c5 ff ff       	call   8048d70 <printf@plt>
 804c7dc:	e8 eb fb ff ff       	call   804c3cc <ignore_comment()>
 804c7e1:	c7 44 24 04 a8 04 05 	movl   $0x80504a8,0x4(%esp)
 804c7e8:	08 
 804c7e9:	c7 04 24 f5 f0 04 08 	movl   $0x804f0f5,(%esp)
 804c7f0:	e8 fb c4 ff ff       	call   8048cf0 <scanf@plt>
 804c7f5:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c7fa:	85 c0                	test   %eax,%eax
 804c7fc:	75 3c                	jne    804c83a <input_parameters()+0x44e>
 804c7fe:	c7 04 24 50 f3 04 08 	movl   $0x804f350,(%esp)
 804c805:	e8 66 c5 ff ff       	call   8048d70 <printf@plt>
 804c80a:	c7 04 24 70 f3 04 08 	movl   $0x804f370,(%esp)
 804c811:	e8 5a c5 ff ff       	call   8048d70 <printf@plt>
 804c816:	c7 04 24 b4 f3 04 08 	movl   $0x804f3b4,(%esp)
 804c81d:	e8 4e c5 ff ff       	call   8048d70 <printf@plt>
 804c822:	c7 04 24 e4 f3 04 08 	movl   $0x804f3e4,(%esp)
 804c829:	e8 42 c5 ff ff       	call   8048d70 <printf@plt>
 804c82e:	c7 04 24 26 f4 04 08 	movl   $0x804f426,(%esp)
 804c835:	e8 36 c5 ff ff       	call   8048d70 <printf@plt>
 804c83a:	e8 8d fb ff ff       	call   804c3cc <ignore_comment()>
 804c83f:	c7 44 24 04 a4 04 05 	movl   $0x80504a4,0x4(%esp)
 804c846:	08 
 804c847:	c7 04 24 f5 f0 04 08 	movl   $0x804f0f5,(%esp)
 804c84e:	e8 9d c4 ff ff       	call   8048cf0 <scanf@plt>
 804c853:	a1 a4 04 05 08       	mov    0x80504a4,%eax
 804c858:	83 f8 01             	cmp    $0x1,%eax
 804c85b:	75 30                	jne    804c88d <input_parameters()+0x4a1>
 804c85d:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c862:	85 c0                	test   %eax,%eax
 804c864:	75 0c                	jne    804c872 <input_parameters()+0x486>
 804c866:	c7 04 24 3c f4 04 08 	movl   $0x804f43c,(%esp)
 804c86d:	e8 fe c4 ff ff       	call   8048d70 <printf@plt>
 804c872:	e8 55 fb ff ff       	call   804c3cc <ignore_comment()>
 804c877:	c7 44 24 04 c4 04 05 	movl   $0x80504c4,0x4(%esp)
 804c87e:	08 
 804c87f:	c7 04 24 f5 f0 04 08 	movl   $0x804f0f5,(%esp)
 804c886:	e8 65 c4 ff ff       	call   8048cf0 <scanf@plt>
 804c88b:	eb 2c                	jmp    804c8b9 <input_parameters()+0x4cd>
 804c88d:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c892:	85 c0                	test   %eax,%eax
 804c894:	74 23                	je     804c8b9 <input_parameters()+0x4cd>
 804c896:	e8 31 fb ff ff       	call   804c3cc <ignore_comment()>
 804c89b:	c7 44 24 04 c4 04 05 	movl   $0x80504c4,0x4(%esp)
 804c8a2:	08 
 804c8a3:	c7 04 24 f5 f0 04 08 	movl   $0x804f0f5,(%esp)
 804c8aa:	e8 41 c4 ff ff       	call   8048cf0 <scanf@plt>
 804c8af:	c7 05 c4 04 05 08 00 	movl   $0x0,0x80504c4
 804c8b6:	00 00 00 
 804c8b9:	a1 ac 04 05 08       	mov    0x80504ac,%eax
 804c8be:	85 c0                	test   %eax,%eax
 804c8c0:	74 0a                	je     804c8cc <input_parameters()+0x4e0>
 804c8c2:	c7 05 a4 04 05 08 03 	movl   $0x3,0x80504a4
 804c8c9:	00 00 00 
 804c8cc:	a1 c4 04 05 08       	mov    0x80504c4,%eax
 804c8d1:	89 44 24 04          	mov    %eax,0x4(%esp)
 804c8d5:	c7 04 24 55 f4 04 08 	movl   $0x804f455,(%esp)
 804c8dc:	e8 8f c4 ff ff       	call   8048d70 <printf@plt>
 804c8e1:	a1 bc 04 05 08       	mov    0x80504bc,%eax
 804c8e6:	85 c0                	test   %eax,%eax
 804c8e8:	0f 84 ee 00 00 00    	je     804c9dc <input_parameters()+0x5f0>
 804c8ee:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c8f3:	85 c0                	test   %eax,%eax
 804c8f5:	75 3c                	jne    804c933 <input_parameters()+0x547>
 804c8f7:	c7 04 24 64 f4 04 08 	movl   $0x804f464,(%esp)
 804c8fe:	e8 6d c4 ff ff       	call   8048d70 <printf@plt>
 804c903:	c7 04 24 84 f4 04 08 	movl   $0x804f484,(%esp)
 804c90a:	e8 61 c4 ff ff       	call   8048d70 <printf@plt>
 804c90f:	c7 04 24 b4 f4 04 08 	movl   $0x804f4b4,(%esp)
 804c916:	e8 55 c4 ff ff       	call   8048d70 <printf@plt>
 804c91b:	c7 04 24 e4 f4 04 08 	movl   $0x804f4e4,(%esp)
 804c922:	e8 49 c4 ff ff       	call   8048d70 <printf@plt>
 804c927:	c7 04 24 26 f4 04 08 	movl   $0x804f426,(%esp)
 804c92e:	e8 3d c4 ff ff       	call   8048d70 <printf@plt>
 804c933:	e8 94 fa ff ff       	call   804c3cc <ignore_comment()>
 804c938:	c7 44 24 04 a0 04 05 	movl   $0x80504a0,0x4(%esp)
 804c93f:	08 
 804c940:	c7 04 24 f5 f0 04 08 	movl   $0x804f0f5,(%esp)
 804c947:	e8 a4 c3 ff ff       	call   8048cf0 <scanf@plt>
 804c94c:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c951:	85 c0                	test   %eax,%eax
 804c953:	75 0c                	jne    804c961 <input_parameters()+0x575>
 804c955:	c7 04 24 18 f5 04 08 	movl   $0x804f518,(%esp)
 804c95c:	e8 0f c4 ff ff       	call   8048d70 <printf@plt>
 804c961:	e8 66 fa ff ff       	call   804c3cc <ignore_comment()>
 804c966:	e8 b5 c2 ff ff       	call   8048c20 <getchar@plt>
 804c96b:	88 45 fb             	mov    %al,-0x5(%ebp)
 804c96e:	80 7d fb 73          	cmpb   $0x73,-0x5(%ebp)
 804c972:	74 06                	je     804c97a <input_parameters()+0x58e>
 804c974:	80 7d fb 62          	cmpb   $0x62,-0x5(%ebp)
 804c978:	75 ec                	jne    804c966 <input_parameters()+0x57a>
 804c97a:	80 7d fb 73          	cmpb   $0x73,-0x5(%ebp)
 804c97e:	75 0c                	jne    804c98c <input_parameters()+0x5a0>
 804c980:	c7 05 9c 04 05 08 01 	movl   $0x1,0x805049c
 804c987:	00 00 00 
 804c98a:	eb 0a                	jmp    804c996 <input_parameters()+0x5aa>
 804c98c:	c7 05 9c 04 05 08 00 	movl   $0x0,0x805049c
 804c993:	00 00 00 
 804c996:	a1 9c 04 05 08       	mov    0x805049c,%eax
 804c99b:	83 f8 01             	cmp    $0x1,%eax
 804c99e:	0f 85 9d 00 00 00    	jne    804ca41 <input_parameters()+0x655>
 804c9a4:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804c9a9:	85 c0                	test   %eax,%eax
 804c9ab:	75 0c                	jne    804c9b9 <input_parameters()+0x5cd>
 804c9ad:	c7 04 24 48 f5 04 08 	movl   $0x804f548,(%esp)
 804c9b4:	e8 b7 c3 ff ff       	call   8048d70 <printf@plt>
 804c9b9:	e8 0e fa ff ff       	call   804c3cc <ignore_comment()>
 804c9be:	c7 44 24 08 dc 04 05 	movl   $0x80504dc,0x8(%esp)
 804c9c5:	08 
 804c9c6:	c7 44 24 04 d8 04 05 	movl   $0x80504d8,0x4(%esp)
 804c9cd:	08 
 804c9ce:	c7 04 24 62 f2 04 08 	movl   $0x804f262,(%esp)
 804c9d5:	e8 16 c3 ff ff       	call   8048cf0 <scanf@plt>
 804c9da:	eb 65                	jmp    804ca41 <input_parameters()+0x655>
 804c9dc:	e8 eb f9 ff ff       	call   804c3cc <ignore_comment()>
 804c9e1:	c7 44 24 04 a0 04 05 	movl   $0x80504a0,0x4(%esp)
 804c9e8:	08 
 804c9e9:	c7 04 24 f5 f0 04 08 	movl   $0x804f0f5,(%esp)
 804c9f0:	e8 fb c2 ff ff       	call   8048cf0 <scanf@plt>
 804c9f5:	c7 05 a0 04 05 08 01 	movl   $0x1,0x80504a0
 804c9fc:	00 00 00 
 804c9ff:	e8 c8 f9 ff ff       	call   804c3cc <ignore_comment()>
 804ca04:	e8 17 c2 ff ff       	call   8048c20 <getchar@plt>
 804ca09:	88 45 fb             	mov    %al,-0x5(%ebp)
 804ca0c:	e8 bb f9 ff ff       	call   804c3cc <ignore_comment()>
 804ca11:	c7 44 24 08 dc 04 05 	movl   $0x80504dc,0x8(%esp)
 804ca18:	08 
 804ca19:	c7 44 24 04 d8 04 05 	movl   $0x80504d8,0x4(%esp)
 804ca20:	08 
 804ca21:	c7 04 24 62 f2 04 08 	movl   $0x804f262,(%esp)
 804ca28:	e8 c3 c2 ff ff       	call   8048cf0 <scanf@plt>
 804ca2d:	b8 00 00 00 00       	mov    $0x0,%eax
 804ca32:	a3 d8 04 05 08       	mov    %eax,0x80504d8
 804ca37:	b8 00 00 00 00       	mov    $0x0,%eax
 804ca3c:	a3 dc 04 05 08       	mov    %eax,0x80504dc
 804ca41:	a1 c0 04 05 08       	mov    0x80504c0,%eax
 804ca46:	85 c0                	test   %eax,%eax
 804ca48:	75 0c                	jne    804ca56 <input_parameters()+0x66a>
 804ca4a:	c7 04 24 69 f5 04 08 	movl   $0x804f569,(%esp)
 804ca51:	e8 1a c3 ff ff       	call   8048d70 <printf@plt>
 804ca56:	e8 71 f9 ff ff       	call   804c3cc <ignore_comment()>
 804ca5b:	c7 44 24 04 d4 04 05 	movl   $0x80504d4,0x4(%esp)
 804ca62:	08 
 804ca63:	c7 04 24 95 f1 04 08 	movl   $0x804f195,(%esp)
 804ca6a:	e8 81 c2 ff ff       	call   8048cf0 <scanf@plt>
 804ca6f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 804ca76:	e8 55 c3 ff ff       	call   8048dd0 <time@plt>
 804ca7b:	89 c1                	mov    %eax,%ecx
 804ca7d:	c7 45 dc 67 66 66 66 	movl   $0x66666667,-0x24(%ebp)
 804ca84:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804ca87:	f7 e9                	imul   %ecx
 804ca89:	c1 fa 02             	sar    $0x2,%edx
 804ca8c:	89 c8                	mov    %ecx,%eax
 804ca8e:	c1 f8 1f             	sar    $0x1f,%eax
 804ca91:	89 d3                	mov    %edx,%ebx
 804ca93:	29 c3                	sub    %eax,%ebx
 804ca95:	89 5d e0             	mov    %ebx,-0x20(%ebp)
 804ca98:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804ca9b:	c1 e0 02             	shl    $0x2,%eax
 804ca9e:	03 45 e0             	add    -0x20(%ebp),%eax
 804caa1:	01 c0                	add    %eax,%eax
 804caa3:	89 ca                	mov    %ecx,%edx
 804caa5:	29 c2                	sub    %eax,%edx
 804caa7:	89 55 e0             	mov    %edx,-0x20(%ebp)
 804caaa:	db 45 e0             	fildl  -0x20(%ebp)
 804caad:	d9 5d e4             	fstps  -0x1c(%ebp)
 804cab0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 804cab7:	e8 14 c3 ff ff       	call   8048dd0 <time@plt>
 804cabc:	89 c1                	mov    %eax,%ecx
 804cabe:	c7 45 dc 67 66 66 66 	movl   $0x66666667,-0x24(%ebp)
 804cac5:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804cac8:	f7 e9                	imul   %ecx
 804caca:	c1 fa 02             	sar    $0x2,%edx
 804cacd:	89 c8                	mov    %ecx,%eax
 804cacf:	c1 f8 1f             	sar    $0x1f,%eax
 804cad2:	89 d3                	mov    %edx,%ebx
 804cad4:	29 c3                	sub    %eax,%ebx
 804cad6:	89 5d e8             	mov    %ebx,-0x18(%ebp)
 804cad9:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804cadc:	c1 e0 02             	shl    $0x2,%eax
 804cadf:	03 45 e8             	add    -0x18(%ebp),%eax
 804cae2:	01 c0                	add    %eax,%eax
 804cae4:	89 ca                	mov    %ecx,%edx
 804cae6:	29 c2                	sub    %eax,%edx
 804cae8:	89 55 e8             	mov    %edx,-0x18(%ebp)
 804caeb:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804caee:	83 c0 01             	add    $0x1,%eax
 804caf1:	50                   	push   %eax
 804caf2:	db 04 24             	fildl  (%esp)
 804caf5:	8d 64 24 04          	lea    0x4(%esp),%esp
 804caf9:	d8 7d e4             	fdivrs -0x1c(%ebp)
 804cafc:	d9 1d d4 04 05 08    	fstps  0x80504d4
 804cb02:	d9 05 d4 04 05 08    	flds   0x80504d4
 804cb08:	dd 5c 24 04          	fstpl  0x4(%esp)
 804cb0c:	c7 04 24 87 f5 04 08 	movl   $0x804f587,(%esp)
 804cb13:	e8 58 c2 ff ff       	call   8048d70 <printf@plt>
 804cb18:	c7 05 94 04 05 08 c4 	movl   $0xc4,0x8050494
 804cb1f:	00 00 00 
 804cb22:	83 c4 34             	add    $0x34,%esp
 804cb25:	5b                   	pop    %ebx
 804cb26:	5d                   	pop    %ebp
 804cb27:	c3                   	ret    

0804cb28 <main>:
 804cb28:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 804cb2c:	83 e4 f0             	and    $0xfffffff0,%esp
 804cb2f:	ff 71 fc             	pushl  -0x4(%ecx)
 804cb32:	55                   	push   %ebp
 804cb33:	89 e5                	mov    %esp,%ebp
 804cb35:	53                   	push   %ebx
 804cb36:	51                   	push   %ecx
 804cb37:	83 ec 70             	sub    $0x70,%esp
 804cb3a:	8b 41 04             	mov    0x4(%ecx),%eax
 804cb3d:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 804cb40:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804cb46:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804cb49:	31 c0                	xor    %eax,%eax
 804cb4b:	83 39 02             	cmpl   $0x2,(%ecx)
 804cb4e:	74 21                	je     804cb71 <main+0x49>
 804cb50:	c7 44 24 04 9c f5 04 	movl   $0x804f59c,0x4(%esp)
 804cb57:	08 
 804cb58:	c7 04 24 e0 03 05 08 	movl   $0x80503e0,(%esp)
 804cb5f:	e8 6c c1 ff ff       	call   8048cd0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
 804cb64:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804cb69:	89 45 a0             	mov    %eax,-0x60(%ebp)
 804cb6c:	e9 af 03 00 00       	jmp    804cf20 <main+0x3f8>
 804cb71:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 804cb74:	83 c0 04             	add    $0x4,%eax
 804cb77:	8b 00                	mov    (%eax),%eax
 804cb79:	89 04 24             	mov    %eax,(%esp)
 804cb7c:	e8 ff c1 ff ff       	call   8048d80 <atoi@plt>
 804cb81:	a3 cc 04 05 08       	mov    %eax,0x80504cc
 804cb86:	8b 1d cc 04 05 08    	mov    0x80504cc,%ebx
 804cb8c:	c7 44 24 04 c2 f5 04 	movl   $0x804f5c2,0x4(%esp)
 804cb93:	08 
 804cb94:	c7 04 24 e0 03 05 08 	movl   $0x80503e0,(%esp)
 804cb9b:	e8 30 c1 ff ff       	call   8048cd0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
 804cba0:	89 5c 24 04          	mov    %ebx,0x4(%esp)
 804cba4:	89 04 24             	mov    %eax,(%esp)
 804cba7:	e8 34 c0 ff ff       	call   8048be0 <std::ostream::operator<<(int)@plt>
 804cbac:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)
 804cbb3:	00 
 804cbb4:	89 04 24             	mov    %eax,(%esp)
 804cbb7:	e8 f4 c0 ff ff       	call   8048cb0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char)@plt>
 804cbbc:	a1 cc 04 05 08       	mov    0x80504cc,%eax
 804cbc1:	89 c3                	mov    %eax,%ebx
 804cbc3:	69 c3 20 24 00 00    	imul   $0x2420,%ebx,%eax
 804cbc9:	89 04 24             	mov    %eax,(%esp)
 804cbcc:	e8 df c1 ff ff       	call   8048db0 <operator new[](unsigned int)@plt>
 804cbd1:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 804cbd4:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 804cbd7:	89 45 a8             	mov    %eax,-0x58(%ebp)
 804cbda:	8d 43 ff             	lea    -0x1(%ebx),%eax
 804cbdd:	89 45 ac             	mov    %eax,-0x54(%ebp)
 804cbe0:	eb 16                	jmp    804cbf8 <main+0xd0>
 804cbe2:	8b 55 a8             	mov    -0x58(%ebp),%edx
 804cbe5:	89 14 24             	mov    %edx,(%esp)
 804cbe8:	e8 59 c3 ff ff       	call   8048f46 <GAThread::GAThread()>
 804cbed:	81 45 a8 20 24 00 00 	addl   $0x2420,-0x58(%ebp)
 804cbf4:	83 6d ac 01          	subl   $0x1,-0x54(%ebp)
 804cbf8:	83 7d ac ff          	cmpl   $0xffffffff,-0x54(%ebp)
 804cbfc:	75 e4                	jne    804cbe2 <main+0xba>
 804cbfe:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 804cc01:	89 45 b8             	mov    %eax,-0x48(%ebp)
 804cc04:	a1 cc 04 05 08       	mov    0x80504cc,%eax
 804cc09:	69 c0 e8 03 00 00    	imul   $0x3e8,%eax,%eax
 804cc0f:	89 c2                	mov    %eax,%edx
 804cc11:	89 d0                	mov    %edx,%eax
 804cc13:	01 c0                	add    %eax,%eax
 804cc15:	01 d0                	add    %edx,%eax
 804cc17:	c1 e0 03             	shl    $0x3,%eax
 804cc1a:	89 04 24             	mov    %eax,(%esp)
 804cc1d:	e8 8e c1 ff ff       	call   8048db0 <operator new[](unsigned int)@plt>
 804cc22:	a3 b8 07 05 08       	mov    %eax,0x80507b8
 804cc27:	e8 c0 f7 ff ff       	call   804c3ec <input_parameters()>
 804cc2c:	c7 05 c8 04 05 08 ff 	movl   $0xffffffff,0x80504c8
 804cc33:	ff ff ff 
 804cc36:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
 804cc3d:	eb 2a                	jmp    804cc69 <main+0x141>
 804cc3f:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 804cc42:	89 d0                	mov    %edx,%eax
 804cc44:	01 c0                	add    %eax,%eax
 804cc46:	01 d0                	add    %edx,%eax
 804cc48:	c1 e0 03             	shl    $0x3,%eax
 804cc4b:	89 c2                	mov    %eax,%edx
 804cc4d:	a1 b8 07 05 08       	mov    0x80507b8,%eax
 804cc52:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804cc55:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804cc5c:	00 
 804cc5d:	89 04 24             	mov    %eax,(%esp)
 804cc60:	e8 2b c1 ff ff       	call   8048d90 <pthread_mutex_init@plt>
 804cc65:	83 45 c4 01          	addl   $0x1,-0x3c(%ebp)
 804cc69:	a1 cc 04 05 08       	mov    0x80504cc,%eax
 804cc6e:	8b 15 80 04 05 08    	mov    0x8050480,%edx
 804cc74:	0f af c2             	imul   %edx,%eax
 804cc77:	3b 45 c4             	cmp    -0x3c(%ebp),%eax
 804cc7a:	7f c3                	jg     804cc3f <main+0x117>
 804cc7c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804cc83:	00 
 804cc84:	c7 04 24 bc 07 05 08 	movl   $0x80507bc,(%esp)
 804cc8b:	e8 00 c1 ff ff       	call   8048d90 <pthread_mutex_init@plt>
 804cc90:	8b 15 cc 04 05 08    	mov    0x80504cc,%edx
 804cc96:	a1 80 04 05 08       	mov    0x8050480,%eax
 804cc9b:	0f af c2             	imul   %edx,%eax
 804cc9e:	a3 b4 07 05 08       	mov    %eax,0x80507b4
 804cca3:	a1 b4 07 05 08       	mov    0x80507b4,%eax
 804cca8:	69 c0 94 00 00 00    	imul   $0x94,%eax,%eax
 804ccae:	89 04 24             	mov    %eax,(%esp)
 804ccb1:	e8 fa c0 ff ff       	call   8048db0 <operator new[](unsigned int)@plt>
 804ccb6:	a3 04 07 05 08       	mov    %eax,0x8050704
 804ccbb:	e8 fa d4 ff ff       	call   804a1ba <initpool()>
 804ccc0:	8d 45 d0             	lea    -0x30(%ebp),%eax
 804ccc3:	89 04 24             	mov    %eax,(%esp)
 804ccc6:	e8 55 c0 ff ff       	call   8048d20 <pthread_attr_init@plt>
 804cccb:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804ccd2:	00 
 804ccd3:	8d 45 d0             	lea    -0x30(%ebp),%eax
 804ccd6:	89 04 24             	mov    %eax,(%esp)
 804ccd9:	e8 32 bf ff ff       	call   8048c10 <pthread_attr_setdetachstate@plt>
 804ccde:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
 804cce5:	e9 f1 00 00 00       	jmp    804cddb <main+0x2b3>
 804ccea:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804cced:	69 c0 20 24 00 00    	imul   $0x2420,%eax,%eax
 804ccf3:	03 45 b8             	add    -0x48(%ebp),%eax
 804ccf6:	89 04 24             	mov    %eax,(%esp)
 804ccf9:	e8 5a c2 ff ff       	call   8048f58 <GAThread::copy_global()>
 804ccfe:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804cd01:	69 c0 20 24 00 00    	imul   $0x2420,%eax,%eax
 804cd07:	89 c2                	mov    %eax,%edx
 804cd09:	03 55 b8             	add    -0x48(%ebp),%edx
 804cd0c:	d9 05 d4 04 05 08    	flds   0x80504d4
 804cd12:	d9 05 d4 04 05 08    	flds   0x80504d4
 804cd18:	d9 e8                	fld1   
 804cd1a:	de e1                	fsubp  %st,%st(1)
 804cd1c:	db 45 cc             	fildl  -0x34(%ebp)
 804cd1f:	de c9                	fmulp  %st,%st(1)
 804cd21:	a1 cc 04 05 08       	mov    0x80504cc,%eax
 804cd26:	50                   	push   %eax
 804cd27:	db 04 24             	fildl  (%esp)
 804cd2a:	8d 64 24 04          	lea    0x4(%esp),%esp
 804cd2e:	de f9                	fdivrp %st,%st(1)
 804cd30:	de c1                	faddp  %st,%st(1)
 804cd32:	d9 5d b0             	fstps  -0x50(%ebp)
 804cd35:	d9 45 b0             	flds   -0x50(%ebp)
 804cd38:	d9 9a 00 10 00 00    	fstps  0x1000(%edx)
 804cd3e:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804cd41:	69 c0 20 24 00 00    	imul   $0x2420,%eax,%eax
 804cd47:	03 45 b8             	add    -0x48(%ebp),%eax
 804cd4a:	d9 80 00 10 00 00    	flds   0x1000(%eax)
 804cd50:	d9 e8                	fld1   
 804cd52:	d9 c9                	fxch   %st(1)
 804cd54:	da e9                	fucompp 
 804cd56:	df e0                	fnstsw %ax
 804cd58:	9e                   	sahf   
 804cd59:	77 02                	ja     804cd5d <main+0x235>
 804cd5b:	eb 0c                	jmp    804cd69 <main+0x241>
 804cd5d:	c7 04 24 d8 f5 04 08 	movl   $0x804f5d8,(%esp)
 804cd64:	e8 07 c0 ff ff       	call   8048d70 <printf@plt>
 804cd69:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804cd6c:	69 c0 20 24 00 00    	imul   $0x2420,%eax,%eax
 804cd72:	89 c2                	mov    %eax,%edx
 804cd74:	03 55 b8             	add    -0x48(%ebp),%edx
 804cd77:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804cd7a:	89 82 4c 22 00 00    	mov    %eax,0x224c(%edx)
 804cd80:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804cd83:	69 c0 20 24 00 00    	imul   $0x2420,%eax,%eax
 804cd89:	89 c1                	mov    %eax,%ecx
 804cd8b:	03 4d b8             	add    -0x48(%ebp),%ecx
 804cd8e:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804cd91:	69 c0 20 24 00 00    	imul   $0x2420,%eax,%eax
 804cd97:	03 45 b8             	add    -0x48(%ebp),%eax
 804cd9a:	8d 90 48 22 00 00    	lea    0x2248(%eax),%edx
 804cda0:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 804cda4:	c7 44 24 08 1c bf 04 	movl   $0x804bf1c,0x8(%esp)
 804cdab:	08 
 804cdac:	8d 45 d0             	lea    -0x30(%ebp),%eax
 804cdaf:	89 44 24 04          	mov    %eax,0x4(%esp)
 804cdb3:	89 14 24             	mov    %edx,(%esp)
 804cdb6:	e8 55 c0 ff ff       	call   8048e10 <pthread_create@plt>
 804cdbb:	89 45 c0             	mov    %eax,-0x40(%ebp)
 804cdbe:	83 7d c0 00          	cmpl   $0x0,-0x40(%ebp)
 804cdc2:	74 13                	je     804cdd7 <main+0x2af>
 804cdc4:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804cdc7:	89 44 24 04          	mov    %eax,0x4(%esp)
 804cdcb:	c7 04 24 00 f6 04 08 	movl   $0x804f600,(%esp)
 804cdd2:	e8 99 bf ff ff       	call   8048d70 <printf@plt>
 804cdd7:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 804cddb:	a1 cc 04 05 08       	mov    0x80504cc,%eax
 804cde0:	39 45 cc             	cmp    %eax,-0x34(%ebp)
 804cde3:	0f 8c 01 ff ff ff    	jl     804ccea <main+0x1c2>
 804cde9:	8d 45 d0             	lea    -0x30(%ebp),%eax
 804cdec:	89 04 24             	mov    %eax,(%esp)
 804cdef:	e8 7c c0 ff ff       	call   8048e70 <pthread_attr_destroy@plt>
 804cdf4:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
 804cdfb:	eb 4d                	jmp    804ce4a <main+0x322>
 804cdfd:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804ce00:	69 c0 20 24 00 00    	imul   $0x2420,%eax,%eax
 804ce06:	03 45 b8             	add    -0x48(%ebp),%eax
 804ce09:	8b 90 48 22 00 00    	mov    0x2248(%eax),%edx
 804ce0f:	8d 45 bc             	lea    -0x44(%ebp),%eax
 804ce12:	89 44 24 04          	mov    %eax,0x4(%esp)
 804ce16:	89 14 24             	mov    %edx,(%esp)
 804ce19:	e8 d2 bd ff ff       	call   8048bf0 <pthread_join@plt>
 804ce1e:	89 45 c0             	mov    %eax,-0x40(%ebp)
 804ce21:	83 7d c0 00          	cmpl   $0x0,-0x40(%ebp)
 804ce25:	74 1f                	je     804ce46 <main+0x31e>
 804ce27:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804ce2a:	89 44 24 04          	mov    %eax,0x4(%esp)
 804ce2e:	c7 04 24 30 f6 04 08 	movl   $0x804f630,(%esp)
 804ce35:	e8 36 bf ff ff       	call   8048d70 <printf@plt>
 804ce3a:	c7 04 24 ff ff ff ff 	movl   $0xffffffff,(%esp)
 804ce41:	e8 5a c0 ff ff       	call   8048ea0 <exit@plt>
 804ce46:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 804ce4a:	a1 cc 04 05 08       	mov    0x80504cc,%eax
 804ce4f:	39 45 cc             	cmp    %eax,-0x34(%ebp)
 804ce52:	7c a9                	jl     804cdfd <main+0x2d5>
 804ce54:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
 804ce5b:	eb 22                	jmp    804ce7f <main+0x357>
 804ce5d:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 804ce60:	89 d0                	mov    %edx,%eax
 804ce62:	01 c0                	add    %eax,%eax
 804ce64:	01 d0                	add    %edx,%eax
 804ce66:	c1 e0 03             	shl    $0x3,%eax
 804ce69:	89 c2                	mov    %eax,%edx
 804ce6b:	a1 b8 07 05 08       	mov    0x80507b8,%eax
 804ce70:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804ce73:	89 04 24             	mov    %eax,(%esp)
 804ce76:	e8 e5 be ff ff       	call   8048d60 <pthread_mutex_destroy@plt>
 804ce7b:	83 45 c4 01          	addl   $0x1,-0x3c(%ebp)
 804ce7f:	a1 cc 04 05 08       	mov    0x80504cc,%eax
 804ce84:	8b 15 80 04 05 08    	mov    0x8050480,%edx
 804ce8a:	0f af c2             	imul   %edx,%eax
 804ce8d:	3b 45 c4             	cmp    -0x3c(%ebp),%eax
 804ce90:	7f cb                	jg     804ce5d <main+0x335>
 804ce92:	c7 04 24 bc 07 05 08 	movl   $0x80507bc,(%esp)
 804ce99:	e8 c2 be ff ff       	call   8048d60 <pthread_mutex_destroy@plt>
 804ce9e:	e8 b7 c5 ff ff       	call   804945a <free_pool()>
 804cea3:	a1 04 07 05 08       	mov    0x8050704,%eax
 804cea8:	85 c0                	test   %eax,%eax
 804ceaa:	74 0d                	je     804ceb9 <main+0x391>
 804ceac:	a1 04 07 05 08       	mov    0x8050704,%eax
 804ceb1:	89 04 24             	mov    %eax,(%esp)
 804ceb4:	e8 67 bf ff ff       	call   8048e20 <operator delete[](void*)@plt>
 804ceb9:	83 7d b8 00          	cmpl   $0x0,-0x48(%ebp)
 804cebd:	74 0b                	je     804ceca <main+0x3a2>
 804cebf:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804cec2:	89 04 24             	mov    %eax,(%esp)
 804cec5:	e8 56 bf ff ff       	call   8048e20 <operator delete[](void*)@plt>
 804ceca:	a1 b8 07 05 08       	mov    0x80507b8,%eax
 804cecf:	85 c0                	test   %eax,%eax
 804ced1:	74 0d                	je     804cee0 <main+0x3b8>
 804ced3:	a1 b8 07 05 08       	mov    0x80507b8,%eax
 804ced8:	89 04 24             	mov    %eax,(%esp)
 804cedb:	e8 40 bf ff ff       	call   8048e20 <operator delete[](void*)@plt>
 804cee0:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)
 804cee7:	00 
 804cee8:	c7 04 24 e0 03 05 08 	movl   $0x80503e0,(%esp)
 804ceef:	e8 bc bd ff ff       	call   8048cb0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char)@plt>
 804cef4:	c7 44 24 04 5e f6 04 	movl   $0x804f65e,0x4(%esp)
 804cefb:	08 
 804cefc:	89 04 24             	mov    %eax,(%esp)
 804ceff:	e8 cc bd ff ff       	call   8048cd0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
 804cf04:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)
 804cf0b:	00 
 804cf0c:	89 04 24             	mov    %eax,(%esp)
 804cf0f:	e8 9c bd ff ff       	call   8048cb0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char)@plt>
 804cf14:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 804cf1b:	e8 10 bd ff ff       	call   8048c30 <pthread_exit@plt>
 804cf20:	8b 45 a0             	mov    -0x60(%ebp),%eax
 804cf23:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804cf26:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 804cf2d:	74 05                	je     804cf34 <main+0x40c>
 804cf2f:	e8 cc be ff ff       	call   8048e00 <__stack_chk_fail@plt>
 804cf34:	83 c4 70             	add    $0x70,%esp
 804cf37:	59                   	pop    %ecx
 804cf38:	5b                   	pop    %ebx
 804cf39:	5d                   	pop    %ebp
 804cf3a:	8d 61 fc             	lea    -0x4(%ecx),%esp
 804cf3d:	c3                   	ret    

0804cf3e <std::fabs(float)>:
 804cf3e:	55                   	push   %ebp
 804cf3f:	89 e5                	mov    %esp,%ebp
 804cf41:	d9 45 08             	flds   0x8(%ebp)
 804cf44:	d9 e1                	fabs   
 804cf46:	5d                   	pop    %ebp
 804cf47:	c3                   	ret    

0804cf48 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)>:
 804cf48:	55                   	push   %ebp
 804cf49:	89 e5                	mov    %esp,%ebp
 804cf4b:	83 ec 04             	sub    $0x4,%esp
 804cf4e:	8b 45 0c             	mov    0xc(%ebp),%eax
 804cf51:	8b 10                	mov    (%eax),%edx
 804cf53:	8b 45 08             	mov    0x8(%ebp),%eax
 804cf56:	8b 00                	mov    (%eax),%eax
 804cf58:	39 c2                	cmp    %eax,%edx
 804cf5a:	73 08                	jae    804cf64 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)+0x1c>
 804cf5c:	8b 45 0c             	mov    0xc(%ebp),%eax
 804cf5f:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804cf62:	eb 06                	jmp    804cf6a <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)+0x22>
 804cf64:	8b 45 08             	mov    0x8(%ebp),%eax
 804cf67:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804cf6a:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804cf6d:	c9                   	leave  
 804cf6e:	c3                   	ret    
 804cf6f:	90                   	nop    

0804cf70 <GAThread::initrandomnormaldeviate()>:
 804cf70:	55                   	push   %ebp
 804cf71:	89 e5                	mov    %esp,%ebp
 804cf73:	8b 45 08             	mov    0x8(%ebp),%eax
 804cf76:	c7 80 1c 24 00 00 01 	movl   $0x1,0x241c(%eax)
 804cf7d:	00 00 00 
 804cf80:	5d                   	pop    %ebp
 804cf81:	c3                   	ret    

0804cf82 <GAThread::advance_random()>:
 804cf82:	55                   	push   %ebp
 804cf83:	89 e5                	mov    %esp,%ebp
 804cf85:	83 ec 10             	sub    $0x10,%esp
 804cf88:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804cf8f:	eb 4e                	jmp    804cfdf <GAThread::advance_random()+0x5d>
 804cf91:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804cf94:	8b 45 08             	mov    0x8(%ebp),%eax
 804cf97:	dd 84 d0 50 22 00 00 	fldl   0x2250(%eax,%edx,8)
 804cf9e:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804cfa1:	83 c2 1f             	add    $0x1f,%edx
 804cfa4:	8b 45 08             	mov    0x8(%ebp),%eax
 804cfa7:	dd 84 d0 50 22 00 00 	fldl   0x2250(%eax,%edx,8)
 804cfae:	de e9                	fsubrp %st,%st(1)
 804cfb0:	dd 5d f0             	fstpl  -0x10(%ebp)
 804cfb3:	dd 45 f0             	fldl   -0x10(%ebp)
 804cfb6:	d9 ee                	fldz   
 804cfb8:	da e9                	fucompp 
 804cfba:	df e0                	fnstsw %ax
 804cfbc:	9e                   	sahf   
 804cfbd:	77 02                	ja     804cfc1 <GAThread::advance_random()+0x3f>
 804cfbf:	eb 0a                	jmp    804cfcb <GAThread::advance_random()+0x49>
 804cfc1:	dd 45 f0             	fldl   -0x10(%ebp)
 804cfc4:	d9 e8                	fld1   
 804cfc6:	de c1                	faddp  %st,%st(1)
 804cfc8:	dd 5d f0             	fstpl  -0x10(%ebp)
 804cfcb:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804cfce:	8b 45 08             	mov    0x8(%ebp),%eax
 804cfd1:	dd 45 f0             	fldl   -0x10(%ebp)
 804cfd4:	dd 9c d0 50 22 00 00 	fstpl  0x2250(%eax,%edx,8)
 804cfdb:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 804cfdf:	83 7d fc 17          	cmpl   $0x17,-0x4(%ebp)
 804cfe3:	7e ac                	jle    804cf91 <GAThread::advance_random()+0xf>
 804cfe5:	c7 45 fc 18 00 00 00 	movl   $0x18,-0x4(%ebp)
 804cfec:	eb 4e                	jmp    804d03c <GAThread::advance_random()+0xba>
 804cfee:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804cff1:	8b 45 08             	mov    0x8(%ebp),%eax
 804cff4:	dd 84 d0 50 22 00 00 	fldl   0x2250(%eax,%edx,8)
 804cffb:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804cffe:	83 ea 18             	sub    $0x18,%edx
 804d001:	8b 45 08             	mov    0x8(%ebp),%eax
 804d004:	dd 84 d0 50 22 00 00 	fldl   0x2250(%eax,%edx,8)
 804d00b:	de e9                	fsubrp %st,%st(1)
 804d00d:	dd 5d f0             	fstpl  -0x10(%ebp)
 804d010:	dd 45 f0             	fldl   -0x10(%ebp)
 804d013:	d9 ee                	fldz   
 804d015:	da e9                	fucompp 
 804d017:	df e0                	fnstsw %ax
 804d019:	9e                   	sahf   
 804d01a:	77 02                	ja     804d01e <GAThread::advance_random()+0x9c>
 804d01c:	eb 0a                	jmp    804d028 <GAThread::advance_random()+0xa6>
 804d01e:	dd 45 f0             	fldl   -0x10(%ebp)
 804d021:	d9 e8                	fld1   
 804d023:	de c1                	faddp  %st,%st(1)
 804d025:	dd 5d f0             	fstpl  -0x10(%ebp)
 804d028:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804d02b:	8b 45 08             	mov    0x8(%ebp),%eax
 804d02e:	dd 45 f0             	fldl   -0x10(%ebp)
 804d031:	dd 9c d0 50 22 00 00 	fstpl  0x2250(%eax,%edx,8)
 804d038:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 804d03c:	83 7d fc 36          	cmpl   $0x36,-0x4(%ebp)
 804d040:	7e ac                	jle    804cfee <GAThread::advance_random()+0x6c>
 804d042:	c9                   	leave  
 804d043:	c3                   	ret    

0804d044 <GAThread::randomperc()>:
 804d044:	55                   	push   %ebp
 804d045:	89 e5                	mov    %esp,%ebp
 804d047:	83 ec 08             	sub    $0x8,%esp
 804d04a:	8b 45 08             	mov    0x8(%ebp),%eax
 804d04d:	8b 80 08 24 00 00    	mov    0x2408(%eax),%eax
 804d053:	8d 50 01             	lea    0x1(%eax),%edx
 804d056:	8b 45 08             	mov    0x8(%ebp),%eax
 804d059:	89 90 08 24 00 00    	mov    %edx,0x2408(%eax)
 804d05f:	8b 45 08             	mov    0x8(%ebp),%eax
 804d062:	8b 80 08 24 00 00    	mov    0x2408(%eax),%eax
 804d068:	83 f8 36             	cmp    $0x36,%eax
 804d06b:	7e 18                	jle    804d085 <GAThread::randomperc()+0x41>
 804d06d:	8b 45 08             	mov    0x8(%ebp),%eax
 804d070:	c7 80 08 24 00 00 01 	movl   $0x1,0x2408(%eax)
 804d077:	00 00 00 
 804d07a:	8b 45 08             	mov    0x8(%ebp),%eax
 804d07d:	89 04 24             	mov    %eax,(%esp)
 804d080:	e8 fd fe ff ff       	call   804cf82 <GAThread::advance_random()>
 804d085:	8b 45 08             	mov    0x8(%ebp),%eax
 804d088:	8b 90 08 24 00 00    	mov    0x2408(%eax),%edx
 804d08e:	8b 45 08             	mov    0x8(%ebp),%eax
 804d091:	dd 84 d0 50 22 00 00 	fldl   0x2250(%eax,%edx,8)
 804d098:	d9 5d fc             	fstps  -0x4(%ebp)
 804d09b:	d9 45 fc             	flds   -0x4(%ebp)
 804d09e:	c9                   	leave  
 804d09f:	c3                   	ret    

0804d0a0 <GAThread::flip(float)>:
 804d0a0:	55                   	push   %ebp
 804d0a1:	89 e5                	mov    %esp,%ebp
 804d0a3:	83 ec 08             	sub    $0x8,%esp
 804d0a6:	8b 45 08             	mov    0x8(%ebp),%eax
 804d0a9:	89 04 24             	mov    %eax,(%esp)
 804d0ac:	e8 93 ff ff ff       	call   804d044 <GAThread::randomperc()>
 804d0b1:	d9 45 0c             	flds   0xc(%ebp)
 804d0b4:	da e9                	fucompp 
 804d0b6:	df e0                	fnstsw %ax
 804d0b8:	f6 c4 05             	test   $0x5,%ah
 804d0bb:	0f 94 c0             	sete   %al
 804d0be:	84 c0                	test   %al,%al
 804d0c0:	74 09                	je     804d0cb <GAThread::flip(float)+0x2b>
 804d0c2:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)
 804d0c9:	eb 07                	jmp    804d0d2 <GAThread::flip(float)+0x32>
 804d0cb:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804d0d2:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804d0d5:	c9                   	leave  
 804d0d6:	c3                   	ret    
 804d0d7:	90                   	nop    

0804d0d8 <GAThread::rnd(int, int)>:
 804d0d8:	55                   	push   %ebp
 804d0d9:	89 e5                	mov    %esp,%ebp
 804d0db:	83 ec 18             	sub    $0x18,%esp
 804d0de:	8b 45 0c             	mov    0xc(%ebp),%eax
 804d0e1:	3b 45 10             	cmp    0x10(%ebp),%eax
 804d0e4:	7c 08                	jl     804d0ee <GAThread::rnd(int, int)+0x16>
 804d0e6:	8b 45 0c             	mov    0xc(%ebp),%eax
 804d0e9:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804d0ec:	eb 49                	jmp    804d137 <GAThread::rnd(int, int)+0x5f>
 804d0ee:	8b 45 08             	mov    0x8(%ebp),%eax
 804d0f1:	89 04 24             	mov    %eax,(%esp)
 804d0f4:	e8 4b ff ff ff       	call   804d044 <GAThread::randomperc()>
 804d0f9:	8b 55 0c             	mov    0xc(%ebp),%edx
 804d0fc:	8b 45 10             	mov    0x10(%ebp),%eax
 804d0ff:	29 d0                	sub    %edx,%eax
 804d101:	83 c0 01             	add    $0x1,%eax
 804d104:	50                   	push   %eax
 804d105:	db 04 24             	fildl  (%esp)
 804d108:	8d 64 24 04          	lea    0x4(%esp),%esp
 804d10c:	de c9                	fmulp  %st,%st(1)
 804d10e:	db 45 0c             	fildl  0xc(%ebp)
 804d111:	de c1                	faddp  %st,%st(1)
 804d113:	d9 7d ee             	fnstcw -0x12(%ebp)
 804d116:	0f b7 45 ee          	movzwl -0x12(%ebp),%eax
 804d11a:	b4 0c                	mov    $0xc,%ah
 804d11c:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
 804d120:	d9 6d ec             	fldcw  -0x14(%ebp)
 804d123:	db 5d fc             	fistpl -0x4(%ebp)
 804d126:	d9 6d ee             	fldcw  -0x12(%ebp)
 804d129:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804d12c:	3b 45 10             	cmp    0x10(%ebp),%eax
 804d12f:	7e 06                	jle    804d137 <GAThread::rnd(int, int)+0x5f>
 804d131:	8b 45 10             	mov    0x10(%ebp),%eax
 804d134:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804d137:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804d13a:	c9                   	leave  
 804d13b:	c3                   	ret    

0804d13c <GAThread::rndreal(float, float)>:
 804d13c:	55                   	push   %ebp
 804d13d:	89 e5                	mov    %esp,%ebp
 804d13f:	83 ec 08             	sub    $0x8,%esp
 804d142:	8b 45 08             	mov    0x8(%ebp),%eax
 804d145:	89 04 24             	mov    %eax,(%esp)
 804d148:	e8 f7 fe ff ff       	call   804d044 <GAThread::randomperc()>
 804d14d:	d9 45 10             	flds   0x10(%ebp)
 804d150:	d8 65 0c             	fsubs  0xc(%ebp)
 804d153:	de c9                	fmulp  %st,%st(1)
 804d155:	d8 45 0c             	fadds  0xc(%ebp)
 804d158:	c9                   	leave  
 804d159:	c3                   	ret    

0804d15a <GAThread::warmup_random(float)>:
 804d15a:	55                   	push   %ebp
 804d15b:	89 e5                	mov    %esp,%ebp
 804d15d:	53                   	push   %ebx
 804d15e:	83 ec 34             	sub    $0x34,%esp
 804d161:	d9 45 0c             	flds   0xc(%ebp)
 804d164:	8b 45 08             	mov    0x8(%ebp),%eax
 804d167:	dd 98 00 24 00 00    	fstpl  0x2400(%eax)
 804d16d:	dd 05 b0 f6 04 08    	fldl   0x804f6b0
 804d173:	dd 5d e8             	fstpl  -0x18(%ebp)
 804d176:	d9 45 0c             	flds   0xc(%ebp)
 804d179:	dd 5d e0             	fstpl  -0x20(%ebp)
 804d17c:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 804d183:	e9 81 00 00 00       	jmp    804d209 <GAThread::warmup_random(float)+0xaf>
 804d188:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804d18b:	89 d0                	mov    %edx,%eax
 804d18d:	c1 e0 02             	shl    $0x2,%eax
 804d190:	01 d0                	add    %edx,%eax
 804d192:	c1 e0 02             	shl    $0x2,%eax
 804d195:	8d 0c 10             	lea    (%eax,%edx,1),%ecx
 804d198:	c7 45 d4 f7 12 da 4b 	movl   $0x4bda12f7,-0x2c(%ebp)
 804d19f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804d1a2:	f7 e9                	imul   %ecx
 804d1a4:	c1 fa 04             	sar    $0x4,%edx
 804d1a7:	89 c8                	mov    %ecx,%eax
 804d1a9:	c1 f8 1f             	sar    $0x1f,%eax
 804d1ac:	89 d3                	mov    %edx,%ebx
 804d1ae:	29 c3                	sub    %eax,%ebx
 804d1b0:	89 d8                	mov    %ebx,%eax
 804d1b2:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804d1b5:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804d1b8:	6b c0 36             	imul   $0x36,%eax,%eax
 804d1bb:	89 ca                	mov    %ecx,%edx
 804d1bd:	29 c2                	sub    %eax,%edx
 804d1bf:	89 d0                	mov    %edx,%eax
 804d1c1:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804d1c4:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804d1c7:	8b 45 08             	mov    0x8(%ebp),%eax
 804d1ca:	dd 45 e8             	fldl   -0x18(%ebp)
 804d1cd:	dd 9c d0 50 22 00 00 	fstpl  0x2250(%eax,%edx,8)
 804d1d4:	dd 45 e0             	fldl   -0x20(%ebp)
 804d1d7:	dc 65 e8             	fsubl  -0x18(%ebp)
 804d1da:	dd 5d e8             	fstpl  -0x18(%ebp)
 804d1dd:	dd 45 e8             	fldl   -0x18(%ebp)
 804d1e0:	d9 ee                	fldz   
 804d1e2:	da e9                	fucompp 
 804d1e4:	df e0                	fnstsw %ax
 804d1e6:	9e                   	sahf   
 804d1e7:	77 02                	ja     804d1eb <GAThread::warmup_random(float)+0x91>
 804d1e9:	eb 0a                	jmp    804d1f5 <GAThread::warmup_random(float)+0x9b>
 804d1eb:	dd 45 e8             	fldl   -0x18(%ebp)
 804d1ee:	d9 e8                	fld1   
 804d1f0:	de c1                	faddp  %st,%st(1)
 804d1f2:	dd 5d e8             	fstpl  -0x18(%ebp)
 804d1f5:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804d1f8:	8b 45 08             	mov    0x8(%ebp),%eax
 804d1fb:	dd 84 d0 50 22 00 00 	fldl   0x2250(%eax,%edx,8)
 804d202:	dd 5d e0             	fstpl  -0x20(%ebp)
 804d205:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 804d209:	83 7d f4 36          	cmpl   $0x36,-0xc(%ebp)
 804d20d:	0f 8e 75 ff ff ff    	jle    804d188 <GAThread::warmup_random(float)+0x2e>
 804d213:	8b 45 08             	mov    0x8(%ebp),%eax
 804d216:	89 04 24             	mov    %eax,(%esp)
 804d219:	e8 64 fd ff ff       	call   804cf82 <GAThread::advance_random()>
 804d21e:	8b 45 08             	mov    0x8(%ebp),%eax
 804d221:	89 04 24             	mov    %eax,(%esp)
 804d224:	e8 59 fd ff ff       	call   804cf82 <GAThread::advance_random()>
 804d229:	8b 45 08             	mov    0x8(%ebp),%eax
 804d22c:	89 04 24             	mov    %eax,(%esp)
 804d22f:	e8 4e fd ff ff       	call   804cf82 <GAThread::advance_random()>
 804d234:	8b 45 08             	mov    0x8(%ebp),%eax
 804d237:	c7 80 08 24 00 00 00 	movl   $0x0,0x2408(%eax)
 804d23e:	00 00 00 
 804d241:	83 c4 34             	add    $0x34,%esp
 804d244:	5b                   	pop    %ebx
 804d245:	5d                   	pop    %ebp
 804d246:	c3                   	ret    
 804d247:	90                   	nop    

0804d248 <GAThread::randomize()>:
 804d248:	55                   	push   %ebp
 804d249:	89 e5                	mov    %esp,%ebp
 804d24b:	83 ec 18             	sub    $0x18,%esp
 804d24e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804d255:	eb 13                	jmp    804d26a <GAThread::randomize()+0x22>
 804d257:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804d25a:	8b 45 08             	mov    0x8(%ebp),%eax
 804d25d:	d9 ee                	fldz   
 804d25f:	dd 9c d0 50 22 00 00 	fstpl  0x2250(%eax,%edx,8)
 804d266:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 804d26a:	83 7d fc 36          	cmpl   $0x36,-0x4(%ebp)
 804d26e:	7e e7                	jle    804d257 <GAThread::randomize()+0xf>
 804d270:	8b 45 08             	mov    0x8(%ebp),%eax
 804d273:	c7 80 08 24 00 00 00 	movl   $0x0,0x2408(%eax)
 804d27a:	00 00 00 
 804d27d:	8b 45 08             	mov    0x8(%ebp),%eax
 804d280:	8b 80 00 10 00 00    	mov    0x1000(%eax),%eax
 804d286:	89 44 24 04          	mov    %eax,0x4(%esp)
 804d28a:	8b 45 08             	mov    0x8(%ebp),%eax
 804d28d:	89 04 24             	mov    %eax,(%esp)
 804d290:	e8 c5 fe ff ff       	call   804d15a <GAThread::warmup_random(float)>
 804d295:	8b 45 08             	mov    0x8(%ebp),%eax
 804d298:	89 04 24             	mov    %eax,(%esp)
 804d29b:	e8 d0 fc ff ff       	call   804cf70 <GAThread::initrandomnormaldeviate()>
 804d2a0:	c9                   	leave  
 804d2a1:	c3                   	ret    

0804d2a2 <std::__verify_grouping(char const*, unsigned int, std::string const&)>:
 804d2a2:	55                   	push   %ebp
 804d2a3:	89 e5                	mov    %esp,%ebp
 804d2a5:	53                   	push   %ebx
 804d2a6:	83 ec 34             	sub    $0x34,%esp
 804d2a9:	8b 45 10             	mov    0x10(%ebp),%eax
 804d2ac:	89 04 24             	mov    %eax,(%esp)
 804d2af:	e8 ac b9 ff ff       	call   8048c60 <std::string::size() const@plt>
 804d2b4:	83 e8 01             	sub    $0x1,%eax
 804d2b7:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804d2ba:	8b 45 0c             	mov    0xc(%ebp),%eax
 804d2bd:	83 e8 01             	sub    $0x1,%eax
 804d2c0:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804d2c3:	8d 45 ec             	lea    -0x14(%ebp),%eax
 804d2c6:	89 44 24 04          	mov    %eax,0x4(%esp)
 804d2ca:	8d 45 f4             	lea    -0xc(%ebp),%eax
 804d2cd:	89 04 24             	mov    %eax,(%esp)
 804d2d0:	e8 73 fc ff ff       	call   804cf48 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)>
 804d2d5:	8b 00                	mov    (%eax),%eax
 804d2d7:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804d2da:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804d2dd:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804d2e0:	c6 45 fb 01          	movb   $0x1,-0x5(%ebp)
 804d2e4:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 804d2eb:	eb 2e                	jmp    804d31b <std::__verify_grouping(char const*, unsigned int, std::string const&)+0x79>
 804d2ed:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804d2f0:	89 44 24 04          	mov    %eax,0x4(%esp)
 804d2f4:	8b 45 10             	mov    0x10(%ebp),%eax
 804d2f7:	89 04 24             	mov    %eax,(%esp)
 804d2fa:	e8 31 ba ff ff       	call   8048d30 <std::string::operator[](unsigned int) const@plt>
 804d2ff:	0f b6 10             	movzbl (%eax),%edx
 804d302:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804d305:	03 45 08             	add    0x8(%ebp),%eax
 804d308:	0f b6 00             	movzbl (%eax),%eax
 804d30b:	38 c2                	cmp    %al,%dl
 804d30d:	0f 94 c0             	sete   %al
 804d310:	88 45 fb             	mov    %al,-0x5(%ebp)
 804d313:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)
 804d317:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
 804d31b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804d31e:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 804d321:	73 32                	jae    804d355 <std::__verify_grouping(char const*, unsigned int, std::string const&)+0xb3>
 804d323:	80 7d fb 00          	cmpb   $0x0,-0x5(%ebp)
 804d327:	75 c4                	jne    804d2ed <std::__verify_grouping(char const*, unsigned int, std::string const&)+0x4b>
 804d329:	eb 2a                	jmp    804d355 <std::__verify_grouping(char const*, unsigned int, std::string const&)+0xb3>
 804d32b:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804d32e:	89 44 24 04          	mov    %eax,0x4(%esp)
 804d332:	8b 45 10             	mov    0x10(%ebp),%eax
 804d335:	89 04 24             	mov    %eax,(%esp)
 804d338:	e8 f3 b9 ff ff       	call   8048d30 <std::string::operator[](unsigned int) const@plt>
 804d33d:	0f b6 10             	movzbl (%eax),%edx
 804d340:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804d343:	03 45 08             	add    0x8(%ebp),%eax
 804d346:	0f b6 00             	movzbl (%eax),%eax
 804d349:	38 c2                	cmp    %al,%dl
 804d34b:	0f 94 c0             	sete   %al
 804d34e:	88 45 fb             	mov    %al,-0x5(%ebp)
 804d351:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)
 804d355:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
 804d359:	74 06                	je     804d361 <std::__verify_grouping(char const*, unsigned int, std::string const&)+0xbf>
 804d35b:	80 7d fb 00          	cmpb   $0x0,-0x5(%ebp)
 804d35f:	75 ca                	jne    804d32b <std::__verify_grouping(char const*, unsigned int, std::string const&)+0x89>
 804d361:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804d364:	03 45 08             	add    0x8(%ebp),%eax
 804d367:	0f b6 00             	movzbl (%eax),%eax
 804d36a:	84 c0                	test   %al,%al
 804d36c:	7e 35                	jle    804d3a3 <std::__verify_grouping(char const*, unsigned int, std::string const&)+0x101>
 804d36e:	0f b6 5d fb          	movzbl -0x5(%ebp),%ebx
 804d372:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804d379:	00 
 804d37a:	8b 45 10             	mov    0x10(%ebp),%eax
 804d37d:	89 04 24             	mov    %eax,(%esp)
 804d380:	e8 ab b9 ff ff       	call   8048d30 <std::string::operator[](unsigned int) const@plt>
 804d385:	0f b6 10             	movzbl (%eax),%edx
 804d388:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804d38b:	03 45 08             	add    0x8(%ebp),%eax
 804d38e:	0f b6 00             	movzbl (%eax),%eax
 804d391:	38 c2                	cmp    %al,%dl
 804d393:	0f 9e c0             	setle  %al
 804d396:	0f b6 c0             	movzbl %al,%eax
 804d399:	21 d8                	and    %ebx,%eax
 804d39b:	85 c0                	test   %eax,%eax
 804d39d:	0f 95 c0             	setne  %al
 804d3a0:	88 45 fb             	mov    %al,-0x5(%ebp)
 804d3a3:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
 804d3a7:	83 c4 34             	add    $0x34,%esp
 804d3aa:	5b                   	pop    %ebx
 804d3ab:	5d                   	pop    %ebp
 804d3ac:	c3                   	ret    
 804d3ad:	90                   	nop    

0804d3ae <__static_initialization_and_destruction_0(int, int)>:
 804d3ae:	55                   	push   %ebp
 804d3af:	89 e5                	mov    %esp,%ebp
 804d3b1:	83 ec 18             	sub    $0x18,%esp
 804d3b4:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
 804d3b8:	75 31                	jne    804d3eb <__static_initialization_and_destruction_0(int, int)+0x3d>
 804d3ba:	81 7d 0c ff ff 00 00 	cmpl   $0xffff,0xc(%ebp)
 804d3c1:	75 28                	jne    804d3eb <__static_initialization_and_destruction_0(int, int)+0x3d>
 804d3c3:	c7 04 24 d8 07 05 08 	movl   $0x80507d8,(%esp)
 804d3ca:	e8 b1 b8 ff ff       	call   8048c80 <std::ios_base::Init::Init()@plt>
 804d3cf:	c7 44 24 08 e4 01 05 	movl   $0x80501e4,0x8(%esp)
 804d3d6:	08 
 804d3d7:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804d3de:	00 
 804d3df:	c7 04 24 0a d4 04 08 	movl   $0x804d40a,(%esp)
 804d3e6:	e8 15 b8 ff ff       	call   8048c00 <__cxa_atexit@plt>
 804d3eb:	c9                   	leave  
 804d3ec:	c3                   	ret    
 804d3ed:	90                   	nop    

0804d3ee <global constructors keyed to _ZN8GAThread23initrandomnormaldeviateEv>:
 804d3ee:	55                   	push   %ebp
 804d3ef:	89 e5                	mov    %esp,%ebp
 804d3f1:	83 ec 08             	sub    $0x8,%esp
 804d3f4:	c7 44 24 04 ff ff 00 	movl   $0xffff,0x4(%esp)
 804d3fb:	00 
 804d3fc:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804d403:	e8 a6 ff ff ff       	call   804d3ae <__static_initialization_and_destruction_0(int, int)>
 804d408:	c9                   	leave  
 804d409:	c3                   	ret    

0804d40a <__tcf_0>:
 804d40a:	55                   	push   %ebp
 804d40b:	89 e5                	mov    %esp,%ebp
 804d40d:	83 ec 08             	sub    $0x8,%esp
 804d410:	c7 04 24 d8 07 05 08 	movl   $0x80507d8,(%esp)
 804d417:	e8 a4 b8 ff ff       	call   8048cc0 <std::ios_base::Init::~Init()@plt>
 804d41c:	c9                   	leave  
 804d41d:	c3                   	ret    

0804d41e <flip1(float)>:
 804d41e:	55                   	push   %ebp
 804d41f:	89 e5                	mov    %esp,%ebp
 804d421:	83 ec 18             	sub    $0x18,%esp
 804d424:	e8 37 ba ff ff       	call   8048e60 <rand@plt>
 804d429:	50                   	push   %eax
 804d42a:	db 04 24             	fildl  (%esp)
 804d42d:	8d 64 24 04          	lea    0x4(%esp),%esp
 804d431:	dd 5d f8             	fstpl  -0x8(%ebp)
 804d434:	dd 45 f8             	fldl   -0x8(%ebp)
 804d437:	dd 05 b8 f6 04 08    	fldl   0x804f6b8
 804d43d:	de f9                	fdivrp %st,%st(1)
 804d43f:	d9 45 08             	flds   0x8(%ebp)
 804d442:	da e9                	fucompp 
 804d444:	df e0                	fnstsw %ax
 804d446:	9e                   	sahf   
 804d447:	73 02                	jae    804d44b <flip1(float)+0x2d>
 804d449:	eb 09                	jmp    804d454 <flip1(float)+0x36>
 804d44b:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
 804d452:	eb 07                	jmp    804d45b <flip1(float)+0x3d>
 804d454:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 804d45b:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804d45e:	c9                   	leave  
 804d45f:	c3                   	ret    

0804d460 <GAThread::randomnormaldeviate()>:
 804d460:	55                   	push   %ebp
 804d461:	89 e5                	mov    %esp,%ebp
 804d463:	83 ec 38             	sub    $0x38,%esp
 804d466:	8b 45 08             	mov    0x8(%ebp),%eax
 804d469:	8b 80 1c 24 00 00    	mov    0x241c(%eax),%eax
 804d46f:	85 c0                	test   %eax,%eax
 804d471:	0f 84 a4 00 00 00    	je     804d51b <GAThread::randomnormaldeviate()+0xbb>
 804d477:	8b 45 08             	mov    0x8(%ebp),%eax
 804d47a:	89 04 24             	mov    %eax,(%esp)
 804d47d:	e8 c2 fb ff ff       	call   804d044 <GAThread::randomperc()>
 804d482:	dd 1c 24             	fstpl  (%esp)
 804d485:	e8 b6 b9 ff ff       	call   8048e40 <log@plt>
 804d48a:	dd 05 c0 f6 04 08    	fldl   0x804f6c0
 804d490:	de c9                	fmulp  %st,%st(1)
 804d492:	dd 5d d8             	fstpl  -0x28(%ebp)
 804d495:	dd 45 d8             	fldl   -0x28(%ebp)
 804d498:	d9 fa                	fsqrt  
 804d49a:	dd 5d d0             	fstpl  -0x30(%ebp)
 804d49d:	dd 45 d0             	fldl   -0x30(%ebp)
 804d4a0:	dd e8                	fucomp %st(0)
 804d4a2:	df e0                	fnstsw %ax
 804d4a4:	9e                   	sahf   
 804d4a5:	7a 02                	jp     804d4a9 <GAThread::randomnormaldeviate()+0x49>
 804d4a7:	74 0e                	je     804d4b7 <GAThread::randomnormaldeviate()+0x57>
 804d4a9:	dd 45 d8             	fldl   -0x28(%ebp)
 804d4ac:	dd 1c 24             	fstpl  (%esp)
 804d4af:	e8 4c b8 ff ff       	call   8048d00 <sqrt@plt>
 804d4b4:	dd 5d d0             	fstpl  -0x30(%ebp)
 804d4b7:	dd 45 d0             	fldl   -0x30(%ebp)
 804d4ba:	8b 45 08             	mov    0x8(%ebp),%eax
 804d4bd:	dd 98 0c 24 00 00    	fstpl  0x240c(%eax)
 804d4c3:	8b 45 08             	mov    0x8(%ebp),%eax
 804d4c6:	89 04 24             	mov    %eax,(%esp)
 804d4c9:	e8 76 fb ff ff       	call   804d044 <GAThread::randomperc()>
 804d4ce:	dd 05 c8 f6 04 08    	fldl   0x804f6c8
 804d4d4:	de c9                	fmulp  %st,%st(1)
 804d4d6:	dd 5d f8             	fstpl  -0x8(%ebp)
 804d4d9:	dd 45 f8             	fldl   -0x8(%ebp)
 804d4dc:	dd 1c 24             	fstpl  (%esp)
 804d4df:	e8 ac b9 ff ff       	call   8048e90 <sin@plt>
 804d4e4:	8b 45 08             	mov    0x8(%ebp),%eax
 804d4e7:	dd 98 14 24 00 00    	fstpl  0x2414(%eax)
 804d4ed:	8b 45 08             	mov    0x8(%ebp),%eax
 804d4f0:	c7 80 1c 24 00 00 00 	movl   $0x0,0x241c(%eax)
 804d4f7:	00 00 00 
 804d4fa:	8b 45 08             	mov    0x8(%ebp),%eax
 804d4fd:	dd 80 0c 24 00 00    	fldl   0x240c(%eax)
 804d503:	dd 5d e8             	fstpl  -0x18(%ebp)
 804d506:	dd 45 f8             	fldl   -0x8(%ebp)
 804d509:	dd 1c 24             	fstpl  (%esp)
 804d50c:	e8 3f b8 ff ff       	call   8048d50 <cos@plt>
 804d511:	dd 45 e8             	fldl   -0x18(%ebp)
 804d514:	de c9                	fmulp  %st,%st(1)
 804d516:	dd 5d e0             	fstpl  -0x20(%ebp)
 804d519:	eb 24                	jmp    804d53f <GAThread::randomnormaldeviate()+0xdf>
 804d51b:	8b 45 08             	mov    0x8(%ebp),%eax
 804d51e:	c7 80 1c 24 00 00 01 	movl   $0x1,0x241c(%eax)
 804d525:	00 00 00 
 804d528:	8b 45 08             	mov    0x8(%ebp),%eax
 804d52b:	dd 80 14 24 00 00    	fldl   0x2414(%eax)
 804d531:	8b 45 08             	mov    0x8(%ebp),%eax
 804d534:	dd 80 0c 24 00 00    	fldl   0x240c(%eax)
 804d53a:	de c9                	fmulp  %st,%st(1)
 804d53c:	dd 5d e0             	fstpl  -0x20(%ebp)
 804d53f:	dd 45 e0             	fldl   -0x20(%ebp)
 804d542:	c9                   	leave  
 804d543:	c3                   	ret    

0804d544 <GAThread::noise(double, double)>:
 804d544:	55                   	push   %ebp
 804d545:	89 e5                	mov    %esp,%ebp
 804d547:	83 ec 18             	sub    $0x18,%esp
 804d54a:	8b 45 0c             	mov    0xc(%ebp),%eax
 804d54d:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804d550:	8b 45 10             	mov    0x10(%ebp),%eax
 804d553:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804d556:	8b 45 14             	mov    0x14(%ebp),%eax
 804d559:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804d55c:	8b 45 18             	mov    0x18(%ebp),%eax
 804d55f:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804d562:	8b 45 08             	mov    0x8(%ebp),%eax
 804d565:	89 04 24             	mov    %eax,(%esp)
 804d568:	e8 f3 fe ff ff       	call   804d460 <GAThread::randomnormaldeviate()>
 804d56d:	dc 4d f0             	fmull  -0x10(%ebp)
 804d570:	dc 45 f8             	faddl  -0x8(%ebp)
 804d573:	c9                   	leave  
 804d574:	c3                   	ret    
 804d575:	90                   	nop    
 804d576:	90                   	nop    
 804d577:	90                   	nop    

0804d578 <std::__verify_grouping(char const*, unsigned int, std::string const&)>:
 804d578:	55                   	push   %ebp
 804d579:	89 e5                	mov    %esp,%ebp
 804d57b:	53                   	push   %ebx
 804d57c:	83 ec 34             	sub    $0x34,%esp
 804d57f:	8b 45 10             	mov    0x10(%ebp),%eax
 804d582:	89 04 24             	mov    %eax,(%esp)
 804d585:	e8 d6 b6 ff ff       	call   8048c60 <std::string::size() const@plt>
 804d58a:	83 e8 01             	sub    $0x1,%eax
 804d58d:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804d590:	8b 45 0c             	mov    0xc(%ebp),%eax
 804d593:	83 e8 01             	sub    $0x1,%eax
 804d596:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804d599:	8d 45 ec             	lea    -0x14(%ebp),%eax
 804d59c:	89 44 24 04          	mov    %eax,0x4(%esp)
 804d5a0:	8d 45 f4             	lea    -0xc(%ebp),%eax
 804d5a3:	89 04 24             	mov    %eax,(%esp)
 804d5a6:	e8 9d f9 ff ff       	call   804cf48 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)>
 804d5ab:	8b 00                	mov    (%eax),%eax
 804d5ad:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804d5b0:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804d5b3:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804d5b6:	c6 45 fb 01          	movb   $0x1,-0x5(%ebp)
 804d5ba:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 804d5c1:	eb 2e                	jmp    804d5f1 <std::__verify_grouping(char const*, unsigned int, std::string const&)+0x79>
 804d5c3:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804d5c6:	89 44 24 04          	mov    %eax,0x4(%esp)
 804d5ca:	8b 45 10             	mov    0x10(%ebp),%eax
 804d5cd:	89 04 24             	mov    %eax,(%esp)
 804d5d0:	e8 5b b7 ff ff       	call   8048d30 <std::string::operator[](unsigned int) const@plt>
 804d5d5:	0f b6 10             	movzbl (%eax),%edx
 804d5d8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804d5db:	03 45 08             	add    0x8(%ebp),%eax
 804d5de:	0f b6 00             	movzbl (%eax),%eax
 804d5e1:	38 c2                	cmp    %al,%dl
 804d5e3:	0f 94 c0             	sete   %al
 804d5e6:	88 45 fb             	mov    %al,-0x5(%ebp)
 804d5e9:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)
 804d5ed:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
 804d5f1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804d5f4:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 804d5f7:	73 32                	jae    804d62b <std::__verify_grouping(char const*, unsigned int, std::string const&)+0xb3>
 804d5f9:	80 7d fb 00          	cmpb   $0x0,-0x5(%ebp)
 804d5fd:	75 c4                	jne    804d5c3 <std::__verify_grouping(char const*, unsigned int, std::string const&)+0x4b>
 804d5ff:	eb 2a                	jmp    804d62b <std::__verify_grouping(char const*, unsigned int, std::string const&)+0xb3>
 804d601:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804d604:	89 44 24 04          	mov    %eax,0x4(%esp)
 804d608:	8b 45 10             	mov    0x10(%ebp),%eax
 804d60b:	89 04 24             	mov    %eax,(%esp)
 804d60e:	e8 1d b7 ff ff       	call   8048d30 <std::string::operator[](unsigned int) const@plt>
 804d613:	0f b6 10             	movzbl (%eax),%edx
 804d616:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804d619:	03 45 08             	add    0x8(%ebp),%eax
 804d61c:	0f b6 00             	movzbl (%eax),%eax
 804d61f:	38 c2                	cmp    %al,%dl
 804d621:	0f 94 c0             	sete   %al
 804d624:	88 45 fb             	mov    %al,-0x5(%ebp)
 804d627:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)
 804d62b:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
 804d62f:	74 06                	je     804d637 <std::__verify_grouping(char const*, unsigned int, std::string const&)+0xbf>
 804d631:	80 7d fb 00          	cmpb   $0x0,-0x5(%ebp)
 804d635:	75 ca                	jne    804d601 <std::__verify_grouping(char const*, unsigned int, std::string const&)+0x89>
 804d637:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804d63a:	03 45 08             	add    0x8(%ebp),%eax
 804d63d:	0f b6 00             	movzbl (%eax),%eax
 804d640:	84 c0                	test   %al,%al
 804d642:	7e 35                	jle    804d679 <std::__verify_grouping(char const*, unsigned int, std::string const&)+0x101>
 804d644:	0f b6 5d fb          	movzbl -0x5(%ebp),%ebx
 804d648:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804d64f:	00 
 804d650:	8b 45 10             	mov    0x10(%ebp),%eax
 804d653:	89 04 24             	mov    %eax,(%esp)
 804d656:	e8 d5 b6 ff ff       	call   8048d30 <std::string::operator[](unsigned int) const@plt>
 804d65b:	0f b6 10             	movzbl (%eax),%edx
 804d65e:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804d661:	03 45 08             	add    0x8(%ebp),%eax
 804d664:	0f b6 00             	movzbl (%eax),%eax
 804d667:	38 c2                	cmp    %al,%dl
 804d669:	0f 9e c0             	setle  %al
 804d66c:	0f b6 c0             	movzbl %al,%eax
 804d66f:	21 d8                	and    %ebx,%eax
 804d671:	85 c0                	test   %eax,%eax
 804d673:	0f 95 c0             	setne  %al
 804d676:	88 45 fb             	mov    %al,-0x5(%ebp)
 804d679:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
 804d67d:	83 c4 34             	add    $0x34,%esp
 804d680:	5b                   	pop    %ebx
 804d681:	5d                   	pop    %ebp
 804d682:	c3                   	ret    
 804d683:	90                   	nop    

0804d684 <__static_initialization_and_destruction_0(int, int)>:
 804d684:	55                   	push   %ebp
 804d685:	89 e5                	mov    %esp,%ebp
 804d687:	83 ec 18             	sub    $0x18,%esp
 804d68a:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
 804d68e:	75 31                	jne    804d6c1 <__static_initialization_and_destruction_0(int, int)+0x3d>
 804d690:	81 7d 0c ff ff 00 00 	cmpl   $0xffff,0xc(%ebp)
 804d697:	75 28                	jne    804d6c1 <__static_initialization_and_destruction_0(int, int)+0x3d>
 804d699:	c7 04 24 dc 07 05 08 	movl   $0x80507dc,(%esp)
 804d6a0:	e8 db b5 ff ff       	call   8048c80 <std::ios_base::Init::Init()@plt>
 804d6a5:	c7 44 24 08 e4 01 05 	movl   $0x80501e4,0x8(%esp)
 804d6ac:	08 
 804d6ad:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804d6b4:	00 
 804d6b5:	c7 04 24 e0 d6 04 08 	movl   $0x804d6e0,(%esp)
 804d6bc:	e8 3f b5 ff ff       	call   8048c00 <__cxa_atexit@plt>
 804d6c1:	c9                   	leave  
 804d6c2:	c3                   	ret    
 804d6c3:	90                   	nop    

0804d6c4 <global constructors keyed to planhorizon>:
 804d6c4:	55                   	push   %ebp
 804d6c5:	89 e5                	mov    %esp,%ebp
 804d6c7:	83 ec 08             	sub    $0x8,%esp
 804d6ca:	c7 44 24 04 ff ff 00 	movl   $0xffff,0x4(%esp)
 804d6d1:	00 
 804d6d2:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804d6d9:	e8 a6 ff ff ff       	call   804d684 <__static_initialization_and_destruction_0(int, int)>
 804d6de:	c9                   	leave  
 804d6df:	c3                   	ret    

0804d6e0 <__tcf_0>:
 804d6e0:	55                   	push   %ebp
 804d6e1:	89 e5                	mov    %esp,%ebp
 804d6e3:	83 ec 08             	sub    $0x8,%esp
 804d6e6:	c7 04 24 dc 07 05 08 	movl   $0x80507dc,(%esp)
 804d6ed:	e8 ce b5 ff ff       	call   8048cc0 <std::ios_base::Init::~Init()@plt>
 804d6f2:	c9                   	leave  
 804d6f3:	c3                   	ret    

0804d6f4 <GAThread::objectivenew(unsigned int*, float*)>:
 804d6f4:	55                   	push   %ebp
 804d6f5:	89 e5                	mov    %esp,%ebp
 804d6f7:	81 ec 58 03 00 00    	sub    $0x358,%esp
 804d6fd:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)
 804d704:	b8 00 00 00 00       	mov    $0x0,%eax
 804d709:	89 45 cc             	mov    %eax,-0x34(%ebp)
 804d70c:	b8 00 00 00 00       	mov    $0x0,%eax
 804d711:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804d714:	b8 00 00 00 00       	mov    $0x0,%eax
 804d719:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 804d71c:	b8 00 00 00 00       	mov    $0x0,%eax
 804d721:	89 45 c0             	mov    %eax,-0x40(%ebp)
 804d724:	dd 05 d0 f6 04 08    	fldl   0x804f6d0
 804d72a:	dd 9d 58 ff ff ff    	fstpl  -0xa8(%ebp)
 804d730:	dd 05 d8 f6 04 08    	fldl   0x804f6d8
 804d736:	dd 9d 50 ff ff ff    	fstpl  -0xb0(%ebp)
 804d73c:	dd 05 e0 f6 04 08    	fldl   0x804f6e0
 804d742:	dd 9d 48 ff ff ff    	fstpl  -0xb8(%ebp)
 804d748:	dd 05 e8 f6 04 08    	fldl   0x804f6e8
 804d74e:	dd 9d 40 ff ff ff    	fstpl  -0xc0(%ebp)
 804d754:	dd 05 f0 f6 04 08    	fldl   0x804f6f0
 804d75a:	dd 9d 38 ff ff ff    	fstpl  -0xc8(%ebp)
 804d760:	dd 05 f8 f6 04 08    	fldl   0x804f6f8
 804d766:	dd 9d 30 ff ff ff    	fstpl  -0xd0(%ebp)
 804d76c:	dd 05 00 f7 04 08    	fldl   0x804f700
 804d772:	dd 9d 28 ff ff ff    	fstpl  -0xd8(%ebp)
 804d778:	dd 05 08 f7 04 08    	fldl   0x804f708
 804d77e:	dd 9d 20 ff ff ff    	fstpl  -0xe0(%ebp)
 804d784:	dd 05 08 f7 04 08    	fldl   0x804f708
 804d78a:	dd 9d 18 ff ff ff    	fstpl  -0xe8(%ebp)
 804d790:	dd 05 08 f7 04 08    	fldl   0x804f708
 804d796:	dd 9d 10 ff ff ff    	fstpl  -0xf0(%ebp)
 804d79c:	dd 05 10 f7 04 08    	fldl   0x804f710
 804d7a2:	dd 9d 08 ff ff ff    	fstpl  -0xf8(%ebp)
 804d7a8:	dd 05 18 f7 04 08    	fldl   0x804f718
 804d7ae:	dd 9d 00 ff ff ff    	fstpl  -0x100(%ebp)
 804d7b4:	d9 e8                	fld1   
 804d7b6:	dd 9d f8 fe ff ff    	fstpl  -0x108(%ebp)
 804d7bc:	d9 e8                	fld1   
 804d7be:	dd 9d f0 fe ff ff    	fstpl  -0x110(%ebp)
 804d7c4:	d9 e8                	fld1   
 804d7c6:	dd 9d e8 fe ff ff    	fstpl  -0x118(%ebp)
 804d7cc:	d9 e8                	fld1   
 804d7ce:	dd 9d e0 fe ff ff    	fstpl  -0x120(%ebp)
 804d7d4:	d9 e8                	fld1   
 804d7d6:	dd 9d d8 fe ff ff    	fstpl  -0x128(%ebp)
 804d7dc:	d9 e8                	fld1   
 804d7de:	dd 9d d0 fe ff ff    	fstpl  -0x130(%ebp)
 804d7e4:	d9 e8                	fld1   
 804d7e6:	dd 9d c8 fe ff ff    	fstpl  -0x138(%ebp)
 804d7ec:	d9 e8                	fld1   
 804d7ee:	dd 9d c0 fe ff ff    	fstpl  -0x140(%ebp)
 804d7f4:	d9 e8                	fld1   
 804d7f6:	dd 9d b8 fe ff ff    	fstpl  -0x148(%ebp)
 804d7fc:	d9 e8                	fld1   
 804d7fe:	dd 9d b0 fe ff ff    	fstpl  -0x150(%ebp)
 804d804:	d9 e8                	fld1   
 804d806:	dd 9d a8 fe ff ff    	fstpl  -0x158(%ebp)
 804d80c:	d9 e8                	fld1   
 804d80e:	dd 9d a0 fe ff ff    	fstpl  -0x160(%ebp)
 804d814:	b8 00 00 00 00       	mov    $0x0,%eax
 804d819:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804d81c:	b8 00 00 00 00       	mov    $0x0,%eax
 804d821:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804d824:	b8 00 00 00 00       	mov    $0x0,%eax
 804d829:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804d82c:	8b 45 0c             	mov    0xc(%ebp),%eax
 804d82f:	8b 00                	mov    (%eax),%eax
 804d831:	89 c1                	mov    %eax,%ecx
 804d833:	23 4d e0             	and    -0x20(%ebp),%ecx
 804d836:	8b 45 0c             	mov    0xc(%ebp),%eax
 804d839:	8b 10                	mov    (%eax),%edx
 804d83b:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804d83e:	01 c0                	add    %eax,%eax
 804d840:	21 d0                	and    %edx,%eax
 804d842:	01 c1                	add    %eax,%ecx
 804d844:	8b 45 0c             	mov    0xc(%ebp),%eax
 804d847:	8b 10                	mov    (%eax),%edx
 804d849:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804d84c:	c1 e0 02             	shl    $0x2,%eax
 804d84f:	21 d0                	and    %edx,%eax
 804d851:	8d 04 01             	lea    (%ecx,%eax,1),%eax
 804d854:	83 c0 01             	add    $0x1,%eax
 804d857:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804d85a:	b8 00 00 00 00       	mov    $0x0,%eax
 804d85f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804d862:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804d869:	eb 26                	jmp    804d891 <GAThread::objectivenew(unsigned int*, float*)+0x19d>
 804d86b:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804d86e:	c1 e0 02             	shl    $0x2,%eax
 804d871:	03 45 10             	add    0x10(%ebp),%eax
 804d874:	d9 00                	flds   (%eax)
 804d876:	d9 45 e4             	flds   -0x1c(%ebp)
 804d879:	de c1                	faddp  %st,%st(1)
 804d87b:	d9 5d e4             	fstps  -0x1c(%ebp)
 804d87e:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804d881:	b8 00 00 80 3f       	mov    $0x3f800000,%eax
 804d886:	89 84 95 14 fe ff ff 	mov    %eax,-0x1ec(%ebp,%edx,4)
 804d88d:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 804d891:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804d894:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 804d897:	77 d2                	ja     804d86b <GAThread::objectivenew(unsigned int*, float*)+0x177>
 804d899:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804d8a0:	eb 31                	jmp    804d8d3 <GAThread::objectivenew(unsigned int*, float*)+0x1df>
 804d8a2:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 804d8a5:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804d8a8:	c1 e0 02             	shl    $0x2,%eax
 804d8ab:	03 45 10             	add    0x10(%ebp),%eax
 804d8ae:	d9 00                	flds   (%eax)
 804d8b0:	a1 00 02 05 08       	mov    0x8050200,%eax
 804d8b5:	ba 00 00 00 00       	mov    $0x0,%edx
 804d8ba:	52                   	push   %edx
 804d8bb:	50                   	push   %eax
 804d8bc:	df 2c 24             	fildll (%esp)
 804d8bf:	8d 64 24 08          	lea    0x8(%esp),%esp
 804d8c3:	de c9                	fmulp  %st,%st(1)
 804d8c5:	d8 75 e4             	fdivs  -0x1c(%ebp)
 804d8c8:	d9 9c 8d 74 fe ff ff 	fstps  -0x18c(%ebp,%ecx,4)
 804d8cf:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 804d8d3:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804d8d6:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 804d8d9:	77 c7                	ja     804d8a2 <GAThread::objectivenew(unsigned int*, float*)+0x1ae>
 804d8db:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804d8e2:	eb 13                	jmp    804d8f7 <GAThread::objectivenew(unsigned int*, float*)+0x203>
 804d8e4:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804d8e7:	b8 00 00 00 00       	mov    $0x0,%eax
 804d8ec:	89 84 95 24 fd ff ff 	mov    %eax,-0x2dc(%ebp,%edx,4)
 804d8f3:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 804d8f7:	83 7d fc 0b          	cmpl   $0xb,-0x4(%ebp)
 804d8fb:	76 e7                	jbe    804d8e4 <GAThread::objectivenew(unsigned int*, float*)+0x1f0>
 804d8fd:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%ebp)
 804d904:	e9 12 0b 00 00       	jmp    804e41b <GAThread::objectivenew(unsigned int*, float*)+0xd27>
 804d909:	8b 55 bc             	mov    -0x44(%ebp),%edx
 804d90c:	b8 00 00 c8 42       	mov    $0x42c80000,%eax
 804d911:	89 84 95 54 fe ff ff 	mov    %eax,-0x1ac(%ebp,%edx,4)
 804d918:	8b 55 bc             	mov    -0x44(%ebp),%edx
 804d91b:	b8 00 00 00 00       	mov    $0x0,%eax
 804d920:	89 84 95 34 fe ff ff 	mov    %eax,-0x1cc(%ebp,%edx,4)
 804d927:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804d92e:	e9 2f 01 00 00       	jmp    804da62 <GAThread::objectivenew(unsigned int*, float*)+0x36e>
 804d933:	8b 55 bc             	mov    -0x44(%ebp),%edx
 804d936:	89 d0                	mov    %edx,%eax
 804d938:	01 c0                	add    %eax,%eax
 804d93a:	01 d0                	add    %edx,%eax
 804d93c:	c1 e0 02             	shl    $0x2,%eax
 804d93f:	03 45 fc             	add    -0x4(%ebp),%eax
 804d942:	01 c0                	add    %eax,%eax
 804d944:	83 c0 04             	add    $0x4,%eax
 804d947:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804d94a:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804d94d:	c1 e8 05             	shr    $0x5,%eax
 804d950:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804d953:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804d956:	89 c2                	mov    %eax,%edx
 804d958:	c1 e2 05             	shl    $0x5,%edx
 804d95b:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804d95e:	29 d0                	sub    %edx,%eax
 804d960:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804d963:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804d966:	c1 e0 02             	shl    $0x2,%eax
 804d969:	03 45 0c             	add    0xc(%ebp),%eax
 804d96c:	8b 10                	mov    (%eax),%edx
 804d96e:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804d971:	83 c0 01             	add    $0x1,%eax
 804d974:	89 c1                	mov    %eax,%ecx
 804d976:	89 d0                	mov    %edx,%eax
 804d978:	d3 e8                	shr    %cl,%eax
 804d97a:	23 45 e0             	and    -0x20(%ebp),%eax
 804d97d:	8d 14 00             	lea    (%eax,%eax,1),%edx
 804d980:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804d983:	c1 e0 02             	shl    $0x2,%eax
 804d986:	03 45 0c             	add    0xc(%ebp),%eax
 804d989:	8b 00                	mov    (%eax),%eax
 804d98b:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 804d98e:	d3 e8                	shr    %cl,%eax
 804d990:	23 45 e0             	and    -0x20(%ebp),%eax
 804d993:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804d996:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804d999:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)
 804d99d:	75 07                	jne    804d9a6 <GAThread::objectivenew(unsigned int*, float*)+0x2b2>
 804d99f:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 804d9a6:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 804d9a9:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804d9ac:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804d9af:	c1 e0 02             	shl    $0x2,%eax
 804d9b2:	01 d0                	add    %edx,%eax
 804d9b4:	8b 04 85 60 02 05 08 	mov    0x8050260(,%eax,4),%eax
 804d9bb:	89 84 8d e4 fd ff ff 	mov    %eax,-0x21c(%ebp,%ecx,4)
 804d9c2:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 804d9c5:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804d9c8:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804d9cb:	c1 e0 02             	shl    $0x2,%eax
 804d9ce:	01 d0                	add    %edx,%eax
 804d9d0:	8b 04 85 20 03 05 08 	mov    0x8050320(,%eax,4),%eax
 804d9d7:	89 84 8d b4 fd ff ff 	mov    %eax,-0x24c(%ebp,%ecx,4)
 804d9de:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804d9e1:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804d9e4:	d9 04 85 04 02 05 08 	flds   0x8050204(,%eax,4)
 804d9eb:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804d9ee:	d9 84 85 24 fd ff ff 	flds   -0x2dc(%ebp,%eax,4)
 804d9f5:	de c9                	fmulp  %st,%st(1)
 804d9f7:	d9 9c 95 54 fd ff ff 	fstps  -0x2ac(%ebp,%edx,4)
 804d9fe:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804da01:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804da04:	d9 84 85 54 fd ff ff 	flds   -0x2ac(%ebp,%eax,4)
 804da0b:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804da0e:	d9 84 85 74 fe ff ff 	flds   -0x18c(%ebp,%eax,4)
 804da15:	de c1                	faddp  %st,%st(1)
 804da17:	d9 9c 95 24 fd ff ff 	fstps  -0x2dc(%ebp,%edx,4)
 804da1e:	8b 55 bc             	mov    -0x44(%ebp),%edx
 804da21:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804da24:	d9 84 85 54 fe ff ff 	flds   -0x1ac(%ebp,%eax,4)
 804da2b:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804da2e:	d9 84 85 e4 fd ff ff 	flds   -0x21c(%ebp,%eax,4)
 804da35:	de c1                	faddp  %st,%st(1)
 804da37:	d9 9c 95 54 fe ff ff 	fstps  -0x1ac(%ebp,%edx,4)
 804da3e:	8b 55 bc             	mov    -0x44(%ebp),%edx
 804da41:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804da44:	d9 84 85 34 fe ff ff 	flds   -0x1cc(%ebp,%eax,4)
 804da4b:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804da4e:	d9 84 85 b4 fd ff ff 	flds   -0x24c(%ebp,%eax,4)
 804da55:	de c1                	faddp  %st,%st(1)
 804da57:	d9 9c 95 34 fe ff ff 	fstps  -0x1cc(%ebp,%edx,4)
 804da5e:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 804da62:	83 7d fc 0b          	cmpl   $0xb,-0x4(%ebp)
 804da66:	0f 86 c7 fe ff ff    	jbe    804d933 <GAThread::objectivenew(unsigned int*, float*)+0x23f>
 804da6c:	d9 85 24 fd ff ff    	flds   -0x2dc(%ebp)
 804da72:	dc b5 58 ff ff ff    	fdivl  -0xa8(%ebp)
 804da78:	dd 85 f8 fe ff ff    	fldl   -0x108(%ebp)
 804da7e:	dd 5c 24 08          	fstpl  0x8(%esp)
 804da82:	dd 1c 24             	fstpl  (%esp)
 804da85:	e8 06 b2 ff ff       	call   8048c90 <pow@plt>
 804da8a:	d9 e0                	fchs   
 804da8c:	dd 5c 24 08          	fstpl  0x8(%esp)
 804da90:	dd 05 20 f7 04 08    	fldl   0x804f720
 804da96:	dd 1c 24             	fstpl  (%esp)
 804da99:	e8 f2 b1 ff ff       	call   8048c90 <pow@plt>
 804da9e:	dd 9d c0 fc ff ff    	fstpl  -0x340(%ebp)
 804daa4:	d9 85 28 fd ff ff    	flds   -0x2d8(%ebp)
 804daaa:	dc b5 50 ff ff ff    	fdivl  -0xb0(%ebp)
 804dab0:	dd 85 f0 fe ff ff    	fldl   -0x110(%ebp)
 804dab6:	dd 5c 24 08          	fstpl  0x8(%esp)
 804daba:	dd 1c 24             	fstpl  (%esp)
 804dabd:	e8 ce b1 ff ff       	call   8048c90 <pow@plt>
 804dac2:	d9 e0                	fchs   
 804dac4:	dd 5c 24 08          	fstpl  0x8(%esp)
 804dac8:	dd 05 20 f7 04 08    	fldl   0x804f720
 804dace:	dd 1c 24             	fstpl  (%esp)
 804dad1:	e8 ba b1 ff ff       	call   8048c90 <pow@plt>
 804dad6:	dd 9d c8 fc ff ff    	fstpl  -0x338(%ebp)
 804dadc:	d9 85 2c fd ff ff    	flds   -0x2d4(%ebp)
 804dae2:	dc b5 48 ff ff ff    	fdivl  -0xb8(%ebp)
 804dae8:	dd 85 e8 fe ff ff    	fldl   -0x118(%ebp)
 804daee:	dd 5c 24 08          	fstpl  0x8(%esp)
 804daf2:	dd 1c 24             	fstpl  (%esp)
 804daf5:	e8 96 b1 ff ff       	call   8048c90 <pow@plt>
 804dafa:	d9 e0                	fchs   
 804dafc:	dd 5c 24 08          	fstpl  0x8(%esp)
 804db00:	dd 05 20 f7 04 08    	fldl   0x804f720
 804db06:	dd 1c 24             	fstpl  (%esp)
 804db09:	e8 82 b1 ff ff       	call   8048c90 <pow@plt>
 804db0e:	dd 9d d0 fc ff ff    	fstpl  -0x330(%ebp)
 804db14:	d9 85 30 fd ff ff    	flds   -0x2d0(%ebp)
 804db1a:	dc b5 40 ff ff ff    	fdivl  -0xc0(%ebp)
 804db20:	dd 85 e0 fe ff ff    	fldl   -0x120(%ebp)
 804db26:	dd 5c 24 08          	fstpl  0x8(%esp)
 804db2a:	dd 1c 24             	fstpl  (%esp)
 804db2d:	e8 5e b1 ff ff       	call   8048c90 <pow@plt>
 804db32:	d9 e0                	fchs   
 804db34:	dd 5c 24 08          	fstpl  0x8(%esp)
 804db38:	dd 05 20 f7 04 08    	fldl   0x804f720
 804db3e:	dd 1c 24             	fstpl  (%esp)
 804db41:	e8 4a b1 ff ff       	call   8048c90 <pow@plt>
 804db46:	dd 9d d8 fc ff ff    	fstpl  -0x328(%ebp)
 804db4c:	d9 85 34 fd ff ff    	flds   -0x2cc(%ebp)
 804db52:	dc b5 38 ff ff ff    	fdivl  -0xc8(%ebp)
 804db58:	dd 85 d8 fe ff ff    	fldl   -0x128(%ebp)
 804db5e:	dd 5c 24 08          	fstpl  0x8(%esp)
 804db62:	dd 1c 24             	fstpl  (%esp)
 804db65:	e8 26 b1 ff ff       	call   8048c90 <pow@plt>
 804db6a:	d9 e0                	fchs   
 804db6c:	dd 5c 24 08          	fstpl  0x8(%esp)
 804db70:	dd 05 20 f7 04 08    	fldl   0x804f720
 804db76:	dd 1c 24             	fstpl  (%esp)
 804db79:	e8 12 b1 ff ff       	call   8048c90 <pow@plt>
 804db7e:	dd 9d e0 fc ff ff    	fstpl  -0x320(%ebp)
 804db84:	d9 85 38 fd ff ff    	flds   -0x2c8(%ebp)
 804db8a:	dc b5 30 ff ff ff    	fdivl  -0xd0(%ebp)
 804db90:	dd 85 d0 fe ff ff    	fldl   -0x130(%ebp)
 804db96:	dd 5c 24 08          	fstpl  0x8(%esp)
 804db9a:	dd 1c 24             	fstpl  (%esp)
 804db9d:	e8 ee b0 ff ff       	call   8048c90 <pow@plt>
 804dba2:	d9 e0                	fchs   
 804dba4:	dd 5c 24 08          	fstpl  0x8(%esp)
 804dba8:	dd 05 20 f7 04 08    	fldl   0x804f720
 804dbae:	dd 1c 24             	fstpl  (%esp)
 804dbb1:	e8 da b0 ff ff       	call   8048c90 <pow@plt>
 804dbb6:	dd 9d e8 fc ff ff    	fstpl  -0x318(%ebp)
 804dbbc:	d9 85 3c fd ff ff    	flds   -0x2c4(%ebp)
 804dbc2:	dc b5 28 ff ff ff    	fdivl  -0xd8(%ebp)
 804dbc8:	dd 85 c8 fe ff ff    	fldl   -0x138(%ebp)
 804dbce:	dd 5c 24 08          	fstpl  0x8(%esp)
 804dbd2:	dd 1c 24             	fstpl  (%esp)
 804dbd5:	e8 b6 b0 ff ff       	call   8048c90 <pow@plt>
 804dbda:	d9 e0                	fchs   
 804dbdc:	dd 5c 24 08          	fstpl  0x8(%esp)
 804dbe0:	dd 05 20 f7 04 08    	fldl   0x804f720
 804dbe6:	dd 1c 24             	fstpl  (%esp)
 804dbe9:	e8 a2 b0 ff ff       	call   8048c90 <pow@plt>
 804dbee:	dd 9d f0 fc ff ff    	fstpl  -0x310(%ebp)
 804dbf4:	d9 85 40 fd ff ff    	flds   -0x2c0(%ebp)
 804dbfa:	dc b5 20 ff ff ff    	fdivl  -0xe0(%ebp)
 804dc00:	dd 85 c0 fe ff ff    	fldl   -0x140(%ebp)
 804dc06:	dd 5c 24 08          	fstpl  0x8(%esp)
 804dc0a:	dd 1c 24             	fstpl  (%esp)
 804dc0d:	e8 7e b0 ff ff       	call   8048c90 <pow@plt>
 804dc12:	d9 e0                	fchs   
 804dc14:	dd 5c 24 08          	fstpl  0x8(%esp)
 804dc18:	dd 05 20 f7 04 08    	fldl   0x804f720
 804dc1e:	dd 1c 24             	fstpl  (%esp)
 804dc21:	e8 6a b0 ff ff       	call   8048c90 <pow@plt>
 804dc26:	dd 9d f8 fc ff ff    	fstpl  -0x308(%ebp)
 804dc2c:	d9 85 44 fd ff ff    	flds   -0x2bc(%ebp)
 804dc32:	dc b5 18 ff ff ff    	fdivl  -0xe8(%ebp)
 804dc38:	dd 85 b8 fe ff ff    	fldl   -0x148(%ebp)
 804dc3e:	dd 5c 24 08          	fstpl  0x8(%esp)
 804dc42:	dd 1c 24             	fstpl  (%esp)
 804dc45:	e8 46 b0 ff ff       	call   8048c90 <pow@plt>
 804dc4a:	d9 e0                	fchs   
 804dc4c:	dd 5c 24 08          	fstpl  0x8(%esp)
 804dc50:	dd 05 20 f7 04 08    	fldl   0x804f720
 804dc56:	dd 1c 24             	fstpl  (%esp)
 804dc59:	e8 32 b0 ff ff       	call   8048c90 <pow@plt>
 804dc5e:	dd 9d 00 fd ff ff    	fstpl  -0x300(%ebp)
 804dc64:	d9 85 48 fd ff ff    	flds   -0x2b8(%ebp)
 804dc6a:	dc b5 10 ff ff ff    	fdivl  -0xf0(%ebp)
 804dc70:	dd 85 b0 fe ff ff    	fldl   -0x150(%ebp)
 804dc76:	dd 5c 24 08          	fstpl  0x8(%esp)
 804dc7a:	dd 1c 24             	fstpl  (%esp)
 804dc7d:	e8 0e b0 ff ff       	call   8048c90 <pow@plt>
 804dc82:	d9 e0                	fchs   
 804dc84:	dd 5c 24 08          	fstpl  0x8(%esp)
 804dc88:	dd 05 20 f7 04 08    	fldl   0x804f720
 804dc8e:	dd 1c 24             	fstpl  (%esp)
 804dc91:	e8 fa af ff ff       	call   8048c90 <pow@plt>
 804dc96:	dd 9d 08 fd ff ff    	fstpl  -0x2f8(%ebp)
 804dc9c:	d9 85 4c fd ff ff    	flds   -0x2b4(%ebp)
 804dca2:	dc b5 08 ff ff ff    	fdivl  -0xf8(%ebp)
 804dca8:	dd 85 a8 fe ff ff    	fldl   -0x158(%ebp)
 804dcae:	dd 5c 24 08          	fstpl  0x8(%esp)
 804dcb2:	dd 1c 24             	fstpl  (%esp)
 804dcb5:	e8 d6 af ff ff       	call   8048c90 <pow@plt>
 804dcba:	d9 e0                	fchs   
 804dcbc:	dd 5c 24 08          	fstpl  0x8(%esp)
 804dcc0:	dd 05 20 f7 04 08    	fldl   0x804f720
 804dcc6:	dd 1c 24             	fstpl  (%esp)
 804dcc9:	e8 c2 af ff ff       	call   8048c90 <pow@plt>
 804dcce:	dd 9d 10 fd ff ff    	fstpl  -0x2f0(%ebp)
 804dcd4:	d9 85 50 fd ff ff    	flds   -0x2b0(%ebp)
 804dcda:	dc b5 00 ff ff ff    	fdivl  -0x100(%ebp)
 804dce0:	dd 85 a0 fe ff ff    	fldl   -0x160(%ebp)
 804dce6:	dd 5c 24 08          	fstpl  0x8(%esp)
 804dcea:	dd 1c 24             	fstpl  (%esp)
 804dced:	e8 9e af ff ff       	call   8048c90 <pow@plt>
 804dcf2:	d9 e0                	fchs   
 804dcf4:	dd 5c 24 08          	fstpl  0x8(%esp)
 804dcf8:	dd 05 20 f7 04 08    	fldl   0x804f720
 804dcfe:	dd 1c 24             	fstpl  (%esp)
 804dd01:	e8 8a af ff ff       	call   8048c90 <pow@plt>
 804dd06:	dd 9d 18 fd ff ff    	fstpl  -0x2e8(%ebp)
 804dd0c:	dd 85 d8 fc ff ff    	fldl   -0x328(%ebp)
 804dd12:	d9 5d b8             	fstps  -0x48(%ebp)
 804dd15:	dd 85 e8 fc ff ff    	fldl   -0x318(%ebp)
 804dd1b:	d9 5d b4             	fstps  -0x4c(%ebp)
 804dd1e:	dd 85 00 fd ff ff    	fldl   -0x300(%ebp)
 804dd24:	d9 5d b0             	fstps  -0x50(%ebp)
 804dd27:	dd 85 c0 fc ff ff    	fldl   -0x340(%ebp)
 804dd2d:	d9 5d ac             	fstps  -0x54(%ebp)
 804dd30:	dd 85 c8 fc ff ff    	fldl   -0x338(%ebp)
 804dd36:	d9 5d a8             	fstps  -0x58(%ebp)
 804dd39:	dd 85 d0 fc ff ff    	fldl   -0x330(%ebp)
 804dd3f:	d9 5d a4             	fstps  -0x5c(%ebp)
 804dd42:	dd 85 e0 fc ff ff    	fldl   -0x320(%ebp)
 804dd48:	d9 5d a0             	fstps  -0x60(%ebp)
 804dd4b:	dd 85 f0 fc ff ff    	fldl   -0x310(%ebp)
 804dd51:	d9 5d 9c             	fstps  -0x64(%ebp)
 804dd54:	dd 85 f8 fc ff ff    	fldl   -0x308(%ebp)
 804dd5a:	d9 5d 98             	fstps  -0x68(%ebp)
 804dd5d:	dd 85 08 fd ff ff    	fldl   -0x2f8(%ebp)
 804dd63:	d9 5d 94             	fstps  -0x6c(%ebp)
 804dd66:	dd 85 10 fd ff ff    	fldl   -0x2f0(%ebp)
 804dd6c:	d9 5d 90             	fstps  -0x70(%ebp)
 804dd6f:	dd 85 18 fd ff ff    	fldl   -0x2e8(%ebp)
 804dd75:	d9 5d 8c             	fstps  -0x74(%ebp)
 804dd78:	d9 45 ac             	flds   -0x54(%ebp)
 804dd7b:	d8 4d a8             	fmuls  -0x58(%ebp)
 804dd7e:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804dd81:	d8 4d a0             	fmuls  -0x60(%ebp)
 804dd84:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804dd87:	d8 4d 98             	fmuls  -0x68(%ebp)
 804dd8a:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804dd8d:	d8 4d 90             	fmuls  -0x70(%ebp)
 804dd90:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804dd93:	d9 5d c8             	fstps  -0x38(%ebp)
 804dd96:	d9 e8                	fld1   
 804dd98:	d8 65 ac             	fsubs  -0x54(%ebp)
 804dd9b:	d9 45 a8             	flds   -0x58(%ebp)
 804dd9e:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804dda1:	d8 4d a0             	fmuls  -0x60(%ebp)
 804dda4:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804dda7:	d8 4d 98             	fmuls  -0x68(%ebp)
 804ddaa:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804ddad:	d8 4d 90             	fmuls  -0x70(%ebp)
 804ddb0:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804ddb3:	de c9                	fmulp  %st,%st(1)
 804ddb5:	d9 e8                	fld1   
 804ddb7:	d8 65 a8             	fsubs  -0x58(%ebp)
 804ddba:	d9 45 ac             	flds   -0x54(%ebp)
 804ddbd:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804ddc0:	d8 4d a0             	fmuls  -0x60(%ebp)
 804ddc3:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804ddc6:	d8 4d 98             	fmuls  -0x68(%ebp)
 804ddc9:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804ddcc:	d8 4d 90             	fmuls  -0x70(%ebp)
 804ddcf:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804ddd2:	de c9                	fmulp  %st,%st(1)
 804ddd4:	de c1                	faddp  %st,%st(1)
 804ddd6:	d9 e8                	fld1   
 804ddd8:	d8 65 a4             	fsubs  -0x5c(%ebp)
 804dddb:	d9 45 ac             	flds   -0x54(%ebp)
 804ddde:	d8 4d a8             	fmuls  -0x58(%ebp)
 804dde1:	d8 4d a0             	fmuls  -0x60(%ebp)
 804dde4:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804dde7:	d8 4d 98             	fmuls  -0x68(%ebp)
 804ddea:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804dded:	d8 4d 90             	fmuls  -0x70(%ebp)
 804ddf0:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804ddf3:	de c9                	fmulp  %st,%st(1)
 804ddf5:	de c1                	faddp  %st,%st(1)
 804ddf7:	d9 e8                	fld1   
 804ddf9:	d8 65 a0             	fsubs  -0x60(%ebp)
 804ddfc:	d9 45 ac             	flds   -0x54(%ebp)
 804ddff:	d8 4d a8             	fmuls  -0x58(%ebp)
 804de02:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804de05:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804de08:	d8 4d 98             	fmuls  -0x68(%ebp)
 804de0b:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804de0e:	d8 4d 90             	fmuls  -0x70(%ebp)
 804de11:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804de14:	de c9                	fmulp  %st,%st(1)
 804de16:	de c1                	faddp  %st,%st(1)
 804de18:	d9 e8                	fld1   
 804de1a:	d8 65 9c             	fsubs  -0x64(%ebp)
 804de1d:	d9 45 ac             	flds   -0x54(%ebp)
 804de20:	d8 4d a8             	fmuls  -0x58(%ebp)
 804de23:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804de26:	d8 4d a0             	fmuls  -0x60(%ebp)
 804de29:	d8 4d 98             	fmuls  -0x68(%ebp)
 804de2c:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804de2f:	d8 4d 90             	fmuls  -0x70(%ebp)
 804de32:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804de35:	de c9                	fmulp  %st,%st(1)
 804de37:	de c1                	faddp  %st,%st(1)
 804de39:	d9 e8                	fld1   
 804de3b:	d8 65 98             	fsubs  -0x68(%ebp)
 804de3e:	d9 45 ac             	flds   -0x54(%ebp)
 804de41:	d8 4d a8             	fmuls  -0x58(%ebp)
 804de44:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804de47:	d8 4d a0             	fmuls  -0x60(%ebp)
 804de4a:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804de4d:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804de50:	d8 4d 90             	fmuls  -0x70(%ebp)
 804de53:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804de56:	de c9                	fmulp  %st,%st(1)
 804de58:	de c1                	faddp  %st,%st(1)
 804de5a:	d9 e8                	fld1   
 804de5c:	d8 65 94             	fsubs  -0x6c(%ebp)
 804de5f:	d9 45 ac             	flds   -0x54(%ebp)
 804de62:	d8 4d a8             	fmuls  -0x58(%ebp)
 804de65:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804de68:	d8 4d a0             	fmuls  -0x60(%ebp)
 804de6b:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804de6e:	d8 4d 98             	fmuls  -0x68(%ebp)
 804de71:	d8 4d 90             	fmuls  -0x70(%ebp)
 804de74:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804de77:	de c9                	fmulp  %st,%st(1)
 804de79:	de c1                	faddp  %st,%st(1)
 804de7b:	d9 e8                	fld1   
 804de7d:	d8 65 90             	fsubs  -0x70(%ebp)
 804de80:	d9 45 ac             	flds   -0x54(%ebp)
 804de83:	d8 4d a8             	fmuls  -0x58(%ebp)
 804de86:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804de89:	d8 4d a0             	fmuls  -0x60(%ebp)
 804de8c:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804de8f:	d8 4d 98             	fmuls  -0x68(%ebp)
 804de92:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804de95:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804de98:	de c9                	fmulp  %st,%st(1)
 804de9a:	de c1                	faddp  %st,%st(1)
 804de9c:	d9 e8                	fld1   
 804de9e:	d8 65 8c             	fsubs  -0x74(%ebp)
 804dea1:	d9 45 ac             	flds   -0x54(%ebp)
 804dea4:	d8 4d a8             	fmuls  -0x58(%ebp)
 804dea7:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804deaa:	d8 4d a0             	fmuls  -0x60(%ebp)
 804dead:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804deb0:	d8 4d 98             	fmuls  -0x68(%ebp)
 804deb3:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804deb6:	d8 4d 90             	fmuls  -0x70(%ebp)
 804deb9:	de c9                	fmulp  %st,%st(1)
 804debb:	de c1                	faddp  %st,%st(1)
 804debd:	d9 5d c4             	fstps  -0x3c(%ebp)
 804dec0:	d9 e8                	fld1   
 804dec2:	d8 65 ac             	fsubs  -0x54(%ebp)
 804dec5:	d9 e8                	fld1   
 804dec7:	d8 65 a8             	fsubs  -0x58(%ebp)
 804deca:	de c9                	fmulp  %st,%st(1)
 804decc:	d9 45 a4             	flds   -0x5c(%ebp)
 804decf:	d8 4d a0             	fmuls  -0x60(%ebp)
 804ded2:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804ded5:	d8 4d 98             	fmuls  -0x68(%ebp)
 804ded8:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804dedb:	d8 4d 90             	fmuls  -0x70(%ebp)
 804dede:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804dee1:	de c9                	fmulp  %st,%st(1)
 804dee3:	d9 e8                	fld1   
 804dee5:	d8 65 ac             	fsubs  -0x54(%ebp)
 804dee8:	d9 e8                	fld1   
 804deea:	d8 65 a4             	fsubs  -0x5c(%ebp)
 804deed:	de c9                	fmulp  %st,%st(1)
 804deef:	d9 45 a8             	flds   -0x58(%ebp)
 804def2:	d8 4d a0             	fmuls  -0x60(%ebp)
 804def5:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804def8:	d8 4d 98             	fmuls  -0x68(%ebp)
 804defb:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804defe:	d8 4d 90             	fmuls  -0x70(%ebp)
 804df01:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804df04:	de c9                	fmulp  %st,%st(1)
 804df06:	de c1                	faddp  %st,%st(1)
 804df08:	d9 e8                	fld1   
 804df0a:	d8 65 ac             	fsubs  -0x54(%ebp)
 804df0d:	d9 e8                	fld1   
 804df0f:	d8 65 a0             	fsubs  -0x60(%ebp)
 804df12:	de c9                	fmulp  %st,%st(1)
 804df14:	d9 45 a8             	flds   -0x58(%ebp)
 804df17:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804df1a:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804df1d:	d8 4d 98             	fmuls  -0x68(%ebp)
 804df20:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804df23:	d8 4d 90             	fmuls  -0x70(%ebp)
 804df26:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804df29:	de c9                	fmulp  %st,%st(1)
 804df2b:	de c1                	faddp  %st,%st(1)
 804df2d:	d9 e8                	fld1   
 804df2f:	d8 65 ac             	fsubs  -0x54(%ebp)
 804df32:	d9 e8                	fld1   
 804df34:	d8 65 9c             	fsubs  -0x64(%ebp)
 804df37:	de c9                	fmulp  %st,%st(1)
 804df39:	d9 45 a8             	flds   -0x58(%ebp)
 804df3c:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804df3f:	d8 4d a0             	fmuls  -0x60(%ebp)
 804df42:	d8 4d 98             	fmuls  -0x68(%ebp)
 804df45:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804df48:	d8 4d 90             	fmuls  -0x70(%ebp)
 804df4b:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804df4e:	de c9                	fmulp  %st,%st(1)
 804df50:	de c1                	faddp  %st,%st(1)
 804df52:	d9 e8                	fld1   
 804df54:	d8 65 ac             	fsubs  -0x54(%ebp)
 804df57:	d9 e8                	fld1   
 804df59:	d8 65 98             	fsubs  -0x68(%ebp)
 804df5c:	de c9                	fmulp  %st,%st(1)
 804df5e:	d9 45 a8             	flds   -0x58(%ebp)
 804df61:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804df64:	d8 4d a0             	fmuls  -0x60(%ebp)
 804df67:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804df6a:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804df6d:	d8 4d 90             	fmuls  -0x70(%ebp)
 804df70:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804df73:	de c9                	fmulp  %st,%st(1)
 804df75:	de c1                	faddp  %st,%st(1)
 804df77:	d9 e8                	fld1   
 804df79:	d8 65 ac             	fsubs  -0x54(%ebp)
 804df7c:	d9 e8                	fld1   
 804df7e:	d8 65 94             	fsubs  -0x6c(%ebp)
 804df81:	de c9                	fmulp  %st,%st(1)
 804df83:	d9 45 a8             	flds   -0x58(%ebp)
 804df86:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804df89:	d8 4d a0             	fmuls  -0x60(%ebp)
 804df8c:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804df8f:	d8 4d 98             	fmuls  -0x68(%ebp)
 804df92:	d8 4d 90             	fmuls  -0x70(%ebp)
 804df95:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804df98:	de c9                	fmulp  %st,%st(1)
 804df9a:	de c1                	faddp  %st,%st(1)
 804df9c:	d9 e8                	fld1   
 804df9e:	d8 65 ac             	fsubs  -0x54(%ebp)
 804dfa1:	d9 e8                	fld1   
 804dfa3:	d8 65 90             	fsubs  -0x70(%ebp)
 804dfa6:	de c9                	fmulp  %st,%st(1)
 804dfa8:	d9 45 a8             	flds   -0x58(%ebp)
 804dfab:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804dfae:	d8 4d a0             	fmuls  -0x60(%ebp)
 804dfb1:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804dfb4:	d8 4d 98             	fmuls  -0x68(%ebp)
 804dfb7:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804dfba:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804dfbd:	de c9                	fmulp  %st,%st(1)
 804dfbf:	de c1                	faddp  %st,%st(1)
 804dfc1:	d9 e8                	fld1   
 804dfc3:	d8 65 ac             	fsubs  -0x54(%ebp)
 804dfc6:	d9 e8                	fld1   
 804dfc8:	d8 65 8c             	fsubs  -0x74(%ebp)
 804dfcb:	de c9                	fmulp  %st,%st(1)
 804dfcd:	d9 45 a8             	flds   -0x58(%ebp)
 804dfd0:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804dfd3:	d8 4d a0             	fmuls  -0x60(%ebp)
 804dfd6:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804dfd9:	d8 4d 98             	fmuls  -0x68(%ebp)
 804dfdc:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804dfdf:	d8 4d 90             	fmuls  -0x70(%ebp)
 804dfe2:	de c9                	fmulp  %st,%st(1)
 804dfe4:	de c1                	faddp  %st,%st(1)
 804dfe6:	d9 e8                	fld1   
 804dfe8:	d8 65 a8             	fsubs  -0x58(%ebp)
 804dfeb:	d9 e8                	fld1   
 804dfed:	d8 65 a4             	fsubs  -0x5c(%ebp)
 804dff0:	de c9                	fmulp  %st,%st(1)
 804dff2:	d9 45 ac             	flds   -0x54(%ebp)
 804dff5:	d8 4d a0             	fmuls  -0x60(%ebp)
 804dff8:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804dffb:	d8 4d 98             	fmuls  -0x68(%ebp)
 804dffe:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e001:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e004:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e007:	de c9                	fmulp  %st,%st(1)
 804e009:	de c1                	faddp  %st,%st(1)
 804e00b:	d9 e8                	fld1   
 804e00d:	d8 65 a8             	fsubs  -0x58(%ebp)
 804e010:	d9 e8                	fld1   
 804e012:	d8 65 a0             	fsubs  -0x60(%ebp)
 804e015:	de c9                	fmulp  %st,%st(1)
 804e017:	d9 45 ac             	flds   -0x54(%ebp)
 804e01a:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e01d:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804e020:	d8 4d 98             	fmuls  -0x68(%ebp)
 804e023:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e026:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e029:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e02c:	de c9                	fmulp  %st,%st(1)
 804e02e:	de c1                	faddp  %st,%st(1)
 804e030:	d9 e8                	fld1   
 804e032:	d8 65 a8             	fsubs  -0x58(%ebp)
 804e035:	d9 e8                	fld1   
 804e037:	d8 65 9c             	fsubs  -0x64(%ebp)
 804e03a:	de c9                	fmulp  %st,%st(1)
 804e03c:	d9 45 ac             	flds   -0x54(%ebp)
 804e03f:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e042:	d8 4d a0             	fmuls  -0x60(%ebp)
 804e045:	d8 4d 98             	fmuls  -0x68(%ebp)
 804e048:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e04b:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e04e:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e051:	de c9                	fmulp  %st,%st(1)
 804e053:	de c1                	faddp  %st,%st(1)
 804e055:	d9 e8                	fld1   
 804e057:	d8 65 a8             	fsubs  -0x58(%ebp)
 804e05a:	d9 e8                	fld1   
 804e05c:	d8 65 98             	fsubs  -0x68(%ebp)
 804e05f:	de c9                	fmulp  %st,%st(1)
 804e061:	d9 45 ac             	flds   -0x54(%ebp)
 804e064:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e067:	d8 4d a0             	fmuls  -0x60(%ebp)
 804e06a:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804e06d:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e070:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e073:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e076:	de c9                	fmulp  %st,%st(1)
 804e078:	de c1                	faddp  %st,%st(1)
 804e07a:	d9 e8                	fld1   
 804e07c:	d8 65 a8             	fsubs  -0x58(%ebp)
 804e07f:	d9 e8                	fld1   
 804e081:	d8 65 94             	fsubs  -0x6c(%ebp)
 804e084:	de c9                	fmulp  %st,%st(1)
 804e086:	d9 45 ac             	flds   -0x54(%ebp)
 804e089:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e08c:	d8 4d a0             	fmuls  -0x60(%ebp)
 804e08f:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804e092:	d8 4d 98             	fmuls  -0x68(%ebp)
 804e095:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e098:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e09b:	de c9                	fmulp  %st,%st(1)
 804e09d:	de c1                	faddp  %st,%st(1)
 804e09f:	d9 e8                	fld1   
 804e0a1:	d8 65 a8             	fsubs  -0x58(%ebp)
 804e0a4:	d9 e8                	fld1   
 804e0a6:	d8 65 90             	fsubs  -0x70(%ebp)
 804e0a9:	de c9                	fmulp  %st,%st(1)
 804e0ab:	d9 45 ac             	flds   -0x54(%ebp)
 804e0ae:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e0b1:	d8 4d a0             	fmuls  -0x60(%ebp)
 804e0b4:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804e0b7:	d8 4d 98             	fmuls  -0x68(%ebp)
 804e0ba:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e0bd:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e0c0:	de c9                	fmulp  %st,%st(1)
 804e0c2:	de c1                	faddp  %st,%st(1)
 804e0c4:	d9 e8                	fld1   
 804e0c6:	d8 65 a8             	fsubs  -0x58(%ebp)
 804e0c9:	d9 e8                	fld1   
 804e0cb:	d8 65 8c             	fsubs  -0x74(%ebp)
 804e0ce:	de c9                	fmulp  %st,%st(1)
 804e0d0:	d9 45 ac             	flds   -0x54(%ebp)
 804e0d3:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e0d6:	d8 4d a0             	fmuls  -0x60(%ebp)
 804e0d9:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804e0dc:	d8 4d 98             	fmuls  -0x68(%ebp)
 804e0df:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e0e2:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e0e5:	de c9                	fmulp  %st,%st(1)
 804e0e7:	de c1                	faddp  %st,%st(1)
 804e0e9:	d9 e8                	fld1   
 804e0eb:	d8 65 a4             	fsubs  -0x5c(%ebp)
 804e0ee:	d9 e8                	fld1   
 804e0f0:	d8 65 a0             	fsubs  -0x60(%ebp)
 804e0f3:	de c9                	fmulp  %st,%st(1)
 804e0f5:	d9 45 ac             	flds   -0x54(%ebp)
 804e0f8:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e0fb:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804e0fe:	d8 4d 98             	fmuls  -0x68(%ebp)
 804e101:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e104:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e107:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e10a:	de c9                	fmulp  %st,%st(1)
 804e10c:	de c1                	faddp  %st,%st(1)
 804e10e:	d9 e8                	fld1   
 804e110:	d8 65 a4             	fsubs  -0x5c(%ebp)
 804e113:	d9 e8                	fld1   
 804e115:	d8 65 9c             	fsubs  -0x64(%ebp)
 804e118:	de c9                	fmulp  %st,%st(1)
 804e11a:	d9 45 ac             	flds   -0x54(%ebp)
 804e11d:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e120:	d8 4d a0             	fmuls  -0x60(%ebp)
 804e123:	d8 4d 98             	fmuls  -0x68(%ebp)
 804e126:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e129:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e12c:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e12f:	de c9                	fmulp  %st,%st(1)
 804e131:	de c1                	faddp  %st,%st(1)
 804e133:	d9 e8                	fld1   
 804e135:	d8 65 a4             	fsubs  -0x5c(%ebp)
 804e138:	d9 e8                	fld1   
 804e13a:	d8 65 98             	fsubs  -0x68(%ebp)
 804e13d:	de c9                	fmulp  %st,%st(1)
 804e13f:	d9 45 ac             	flds   -0x54(%ebp)
 804e142:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e145:	d8 4d a0             	fmuls  -0x60(%ebp)
 804e148:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804e14b:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e14e:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e151:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e154:	de c9                	fmulp  %st,%st(1)
 804e156:	de c1                	faddp  %st,%st(1)
 804e158:	d9 e8                	fld1   
 804e15a:	d8 65 a4             	fsubs  -0x5c(%ebp)
 804e15d:	d9 e8                	fld1   
 804e15f:	d8 65 94             	fsubs  -0x6c(%ebp)
 804e162:	de c9                	fmulp  %st,%st(1)
 804e164:	d9 45 ac             	flds   -0x54(%ebp)
 804e167:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e16a:	d8 4d a0             	fmuls  -0x60(%ebp)
 804e16d:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804e170:	d8 4d 98             	fmuls  -0x68(%ebp)
 804e173:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e176:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e179:	de c9                	fmulp  %st,%st(1)
 804e17b:	de c1                	faddp  %st,%st(1)
 804e17d:	d9 e8                	fld1   
 804e17f:	d8 65 a4             	fsubs  -0x5c(%ebp)
 804e182:	d9 e8                	fld1   
 804e184:	d8 65 90             	fsubs  -0x70(%ebp)
 804e187:	de c9                	fmulp  %st,%st(1)
 804e189:	d9 45 ac             	flds   -0x54(%ebp)
 804e18c:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e18f:	d8 4d a0             	fmuls  -0x60(%ebp)
 804e192:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804e195:	d8 4d 98             	fmuls  -0x68(%ebp)
 804e198:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e19b:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e19e:	de c9                	fmulp  %st,%st(1)
 804e1a0:	de c1                	faddp  %st,%st(1)
 804e1a2:	d9 e8                	fld1   
 804e1a4:	d8 65 a4             	fsubs  -0x5c(%ebp)
 804e1a7:	d9 e8                	fld1   
 804e1a9:	d8 65 8c             	fsubs  -0x74(%ebp)
 804e1ac:	de c9                	fmulp  %st,%st(1)
 804e1ae:	d9 45 ac             	flds   -0x54(%ebp)
 804e1b1:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e1b4:	d8 4d a0             	fmuls  -0x60(%ebp)
 804e1b7:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804e1ba:	d8 4d 98             	fmuls  -0x68(%ebp)
 804e1bd:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e1c0:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e1c3:	de c9                	fmulp  %st,%st(1)
 804e1c5:	de c1                	faddp  %st,%st(1)
 804e1c7:	d9 e8                	fld1   
 804e1c9:	d8 65 a0             	fsubs  -0x60(%ebp)
 804e1cc:	d9 e8                	fld1   
 804e1ce:	d8 65 9c             	fsubs  -0x64(%ebp)
 804e1d1:	de c9                	fmulp  %st,%st(1)
 804e1d3:	d9 45 ac             	flds   -0x54(%ebp)
 804e1d6:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e1d9:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e1dc:	d8 4d 98             	fmuls  -0x68(%ebp)
 804e1df:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e1e2:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e1e5:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e1e8:	de c9                	fmulp  %st,%st(1)
 804e1ea:	de c1                	faddp  %st,%st(1)
 804e1ec:	d9 e8                	fld1   
 804e1ee:	d8 65 a0             	fsubs  -0x60(%ebp)
 804e1f1:	d9 e8                	fld1   
 804e1f3:	d8 65 98             	fsubs  -0x68(%ebp)
 804e1f6:	de c9                	fmulp  %st,%st(1)
 804e1f8:	d9 45 ac             	flds   -0x54(%ebp)
 804e1fb:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e1fe:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e201:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804e204:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e207:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e20a:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e20d:	de c9                	fmulp  %st,%st(1)
 804e20f:	de c1                	faddp  %st,%st(1)
 804e211:	d9 e8                	fld1   
 804e213:	d8 65 a0             	fsubs  -0x60(%ebp)
 804e216:	d9 e8                	fld1   
 804e218:	d8 65 94             	fsubs  -0x6c(%ebp)
 804e21b:	de c9                	fmulp  %st,%st(1)
 804e21d:	d9 45 ac             	flds   -0x54(%ebp)
 804e220:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e223:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e226:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804e229:	d8 4d 98             	fmuls  -0x68(%ebp)
 804e22c:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e22f:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e232:	de c9                	fmulp  %st,%st(1)
 804e234:	de c1                	faddp  %st,%st(1)
 804e236:	d9 e8                	fld1   
 804e238:	d8 65 a0             	fsubs  -0x60(%ebp)
 804e23b:	d9 e8                	fld1   
 804e23d:	d8 65 90             	fsubs  -0x70(%ebp)
 804e240:	de c9                	fmulp  %st,%st(1)
 804e242:	d9 45 ac             	flds   -0x54(%ebp)
 804e245:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e248:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e24b:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804e24e:	d8 4d 98             	fmuls  -0x68(%ebp)
 804e251:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e254:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e257:	de c9                	fmulp  %st,%st(1)
 804e259:	de c1                	faddp  %st,%st(1)
 804e25b:	d9 e8                	fld1   
 804e25d:	d8 65 a0             	fsubs  -0x60(%ebp)
 804e260:	d9 e8                	fld1   
 804e262:	d8 65 8c             	fsubs  -0x74(%ebp)
 804e265:	de c9                	fmulp  %st,%st(1)
 804e267:	d9 45 ac             	flds   -0x54(%ebp)
 804e26a:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e26d:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e270:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804e273:	d8 4d 98             	fmuls  -0x68(%ebp)
 804e276:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e279:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e27c:	de c9                	fmulp  %st,%st(1)
 804e27e:	de c1                	faddp  %st,%st(1)
 804e280:	d9 e8                	fld1   
 804e282:	d8 65 9c             	fsubs  -0x64(%ebp)
 804e285:	d9 e8                	fld1   
 804e287:	d8 65 98             	fsubs  -0x68(%ebp)
 804e28a:	de c9                	fmulp  %st,%st(1)
 804e28c:	d9 45 ac             	flds   -0x54(%ebp)
 804e28f:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e292:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e295:	d8 4d a0             	fmuls  -0x60(%ebp)
 804e298:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e29b:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e29e:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e2a1:	de c9                	fmulp  %st,%st(1)
 804e2a3:	de c1                	faddp  %st,%st(1)
 804e2a5:	d9 e8                	fld1   
 804e2a7:	d8 65 9c             	fsubs  -0x64(%ebp)
 804e2aa:	d9 e8                	fld1   
 804e2ac:	d8 65 94             	fsubs  -0x6c(%ebp)
 804e2af:	de c9                	fmulp  %st,%st(1)
 804e2b1:	d9 45 ac             	flds   -0x54(%ebp)
 804e2b4:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e2b7:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e2ba:	d8 4d a0             	fmuls  -0x60(%ebp)
 804e2bd:	d8 4d 98             	fmuls  -0x68(%ebp)
 804e2c0:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e2c3:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e2c6:	de c9                	fmulp  %st,%st(1)
 804e2c8:	de c1                	faddp  %st,%st(1)
 804e2ca:	d9 e8                	fld1   
 804e2cc:	d8 65 9c             	fsubs  -0x64(%ebp)
 804e2cf:	d9 e8                	fld1   
 804e2d1:	d8 65 90             	fsubs  -0x70(%ebp)
 804e2d4:	de c9                	fmulp  %st,%st(1)
 804e2d6:	d9 45 ac             	flds   -0x54(%ebp)
 804e2d9:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e2dc:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e2df:	d8 4d a0             	fmuls  -0x60(%ebp)
 804e2e2:	d8 4d 98             	fmuls  -0x68(%ebp)
 804e2e5:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e2e8:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e2eb:	de c9                	fmulp  %st,%st(1)
 804e2ed:	de c1                	faddp  %st,%st(1)
 804e2ef:	d9 e8                	fld1   
 804e2f1:	d8 65 9c             	fsubs  -0x64(%ebp)
 804e2f4:	d9 e8                	fld1   
 804e2f6:	d8 65 8c             	fsubs  -0x74(%ebp)
 804e2f9:	de c9                	fmulp  %st,%st(1)
 804e2fb:	d9 45 ac             	flds   -0x54(%ebp)
 804e2fe:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e301:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e304:	d8 4d a0             	fmuls  -0x60(%ebp)
 804e307:	d8 4d 98             	fmuls  -0x68(%ebp)
 804e30a:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e30d:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e310:	de c9                	fmulp  %st,%st(1)
 804e312:	de c1                	faddp  %st,%st(1)
 804e314:	d9 e8                	fld1   
 804e316:	d8 65 98             	fsubs  -0x68(%ebp)
 804e319:	d9 e8                	fld1   
 804e31b:	d8 65 94             	fsubs  -0x6c(%ebp)
 804e31e:	de c9                	fmulp  %st,%st(1)
 804e320:	d9 45 ac             	flds   -0x54(%ebp)
 804e323:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e326:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e329:	d8 4d a0             	fmuls  -0x60(%ebp)
 804e32c:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804e32f:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e332:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e335:	de c9                	fmulp  %st,%st(1)
 804e337:	de c1                	faddp  %st,%st(1)
 804e339:	d9 e8                	fld1   
 804e33b:	d8 65 98             	fsubs  -0x68(%ebp)
 804e33e:	d9 e8                	fld1   
 804e340:	d8 65 90             	fsubs  -0x70(%ebp)
 804e343:	de c9                	fmulp  %st,%st(1)
 804e345:	d9 45 ac             	flds   -0x54(%ebp)
 804e348:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e34b:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e34e:	d8 4d a0             	fmuls  -0x60(%ebp)
 804e351:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804e354:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e357:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e35a:	de c9                	fmulp  %st,%st(1)
 804e35c:	de c1                	faddp  %st,%st(1)
 804e35e:	d9 e8                	fld1   
 804e360:	d8 65 98             	fsubs  -0x68(%ebp)
 804e363:	d9 e8                	fld1   
 804e365:	d8 65 8c             	fsubs  -0x74(%ebp)
 804e368:	de c9                	fmulp  %st,%st(1)
 804e36a:	d9 45 ac             	flds   -0x54(%ebp)
 804e36d:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e370:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e373:	d8 4d a0             	fmuls  -0x60(%ebp)
 804e376:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804e379:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e37c:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e37f:	de c9                	fmulp  %st,%st(1)
 804e381:	de c1                	faddp  %st,%st(1)
 804e383:	d9 e8                	fld1   
 804e385:	d8 65 94             	fsubs  -0x6c(%ebp)
 804e388:	d9 e8                	fld1   
 804e38a:	d8 65 90             	fsubs  -0x70(%ebp)
 804e38d:	de c9                	fmulp  %st,%st(1)
 804e38f:	d9 45 ac             	flds   -0x54(%ebp)
 804e392:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e395:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e398:	d8 4d a0             	fmuls  -0x60(%ebp)
 804e39b:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804e39e:	d8 4d 98             	fmuls  -0x68(%ebp)
 804e3a1:	d8 4d 8c             	fmuls  -0x74(%ebp)
 804e3a4:	de c9                	fmulp  %st,%st(1)
 804e3a6:	de c1                	faddp  %st,%st(1)
 804e3a8:	d9 e8                	fld1   
 804e3aa:	d8 65 94             	fsubs  -0x6c(%ebp)
 804e3ad:	d9 e8                	fld1   
 804e3af:	d8 65 8c             	fsubs  -0x74(%ebp)
 804e3b2:	de c9                	fmulp  %st,%st(1)
 804e3b4:	d9 45 ac             	flds   -0x54(%ebp)
 804e3b7:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e3ba:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e3bd:	d8 4d a0             	fmuls  -0x60(%ebp)
 804e3c0:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804e3c3:	d8 4d 98             	fmuls  -0x68(%ebp)
 804e3c6:	d8 4d 90             	fmuls  -0x70(%ebp)
 804e3c9:	de c9                	fmulp  %st,%st(1)
 804e3cb:	de c1                	faddp  %st,%st(1)
 804e3cd:	d9 e8                	fld1   
 804e3cf:	d8 65 90             	fsubs  -0x70(%ebp)
 804e3d2:	d9 e8                	fld1   
 804e3d4:	d8 65 8c             	fsubs  -0x74(%ebp)
 804e3d7:	de c9                	fmulp  %st,%st(1)
 804e3d9:	d9 45 ac             	flds   -0x54(%ebp)
 804e3dc:	d8 4d a8             	fmuls  -0x58(%ebp)
 804e3df:	d8 4d a4             	fmuls  -0x5c(%ebp)
 804e3e2:	d8 4d a0             	fmuls  -0x60(%ebp)
 804e3e5:	d8 4d 9c             	fmuls  -0x64(%ebp)
 804e3e8:	d8 4d 98             	fmuls  -0x68(%ebp)
 804e3eb:	d8 4d 94             	fmuls  -0x6c(%ebp)
 804e3ee:	de c9                	fmulp  %st,%st(1)
 804e3f0:	de c1                	faddp  %st,%st(1)
 804e3f2:	d9 5d c0             	fstps  -0x40(%ebp)
 804e3f5:	d9 45 b8             	flds   -0x48(%ebp)
 804e3f8:	d8 4d b4             	fmuls  -0x4c(%ebp)
 804e3fb:	d8 4d b0             	fmuls  -0x50(%ebp)
 804e3fe:	d9 5d cc             	fstps  -0x34(%ebp)
 804e401:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804e404:	d9 45 c8             	flds   -0x38(%ebp)
 804e407:	d8 45 c4             	fadds  -0x3c(%ebp)
 804e40a:	d8 45 c0             	fadds  -0x40(%ebp)
 804e40d:	d8 4d cc             	fmuls  -0x34(%ebp)
 804e410:	d9 9c 85 14 fe ff ff 	fstps  -0x1ec(%ebp,%eax,4)
 804e417:	83 45 bc 01          	addl   $0x1,-0x44(%ebp)
 804e41b:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804e41e:	3b 45 ec             	cmp    -0x14(%ebp),%eax
 804e421:	0f 8c e2 f4 ff ff    	jl     804d909 <GAThread::objectivenew(unsigned int*, float*)+0x215>
 804e427:	b8 00 00 80 7f       	mov    $0x7f800000,%eax
 804e42c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804e42f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804e436:	eb 4b                	jmp    804e483 <GAThread::objectivenew(unsigned int*, float*)+0xd8f>
 804e438:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804e43b:	d9 84 85 54 fe ff ff 	flds   -0x1ac(%ebp,%eax,4)
 804e442:	d9 45 dc             	flds   -0x24(%ebp)
 804e445:	de c1                	faddp  %st,%st(1)
 804e447:	d9 5d dc             	fstps  -0x24(%ebp)
 804e44a:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804e44d:	d9 84 85 34 fe ff ff 	flds   -0x1cc(%ebp,%eax,4)
 804e454:	d9 45 d8             	flds   -0x28(%ebp)
 804e457:	de c1                	faddp  %st,%st(1)
 804e459:	d9 5d d8             	fstps  -0x28(%ebp)
 804e45c:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804e45f:	d9 84 85 14 fe ff ff 	flds   -0x1ec(%ebp,%eax,4)
 804e466:	d9 45 d4             	flds   -0x2c(%ebp)
 804e469:	da e9                	fucompp 
 804e46b:	df e0                	fnstsw %ax
 804e46d:	9e                   	sahf   
 804e46e:	77 02                	ja     804e472 <GAThread::objectivenew(unsigned int*, float*)+0xd7e>
 804e470:	eb 0d                	jmp    804e47f <GAThread::objectivenew(unsigned int*, float*)+0xd8b>
 804e472:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804e475:	8b 84 85 14 fe ff ff 	mov    -0x1ec(%ebp,%eax,4),%eax
 804e47c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804e47f:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 804e483:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804e486:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 804e489:	77 ad                	ja     804e438 <GAThread::objectivenew(unsigned int*, float*)+0xd44>
 804e48b:	d9 05 24 02 05 08    	flds   0x8050224
 804e491:	d9 45 dc             	flds   -0x24(%ebp)
 804e494:	de e1                	fsubp  %st,%st(1)
 804e496:	d9 e0                	fchs   
 804e498:	d9 05 24 02 05 08    	flds   0x8050224
 804e49e:	d9 05 20 02 05 08    	flds   0x8050220
 804e4a4:	de e9                	fsubrp %st,%st(1)
 804e4a6:	de f9                	fdivrp %st,%st(1)
 804e4a8:	d9 9d 94 fe ff ff    	fstps  -0x16c(%ebp)
 804e4ae:	d9 05 2c 02 05 08    	flds   0x805022c
 804e4b4:	d9 45 d8             	flds   -0x28(%ebp)
 804e4b7:	de e1                	fsubp  %st,%st(1)
 804e4b9:	d9 e0                	fchs   
 804e4bb:	d9 05 2c 02 05 08    	flds   0x805022c
 804e4c1:	d9 05 28 02 05 08    	flds   0x8050228
 804e4c7:	de e9                	fsubrp %st,%st(1)
 804e4c9:	de f9                	fdivrp %st,%st(1)
 804e4cb:	d9 9d 98 fe ff ff    	fstps  -0x168(%ebp)
 804e4d1:	d9 05 30 02 05 08    	flds   0x8050230
 804e4d7:	d8 65 d4             	fsubs  -0x2c(%ebp)
 804e4da:	d9 e0                	fchs   
 804e4dc:	d9 05 34 02 05 08    	flds   0x8050234
 804e4e2:	d9 05 30 02 05 08    	flds   0x8050230
 804e4e8:	de e9                	fsubrp %st,%st(1)
 804e4ea:	de f9                	fdivrp %st,%st(1)
 804e4ec:	d9 9d 9c fe ff ff    	fstps  -0x164(%ebp)
 804e4f2:	b8 00 00 00 00       	mov    $0x0,%eax
 804e4f7:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804e4fa:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804e501:	eb 2b                	jmp    804e52e <GAThread::objectivenew(unsigned int*, float*)+0xe3a>
 804e503:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804e506:	d9 84 85 94 fe ff ff 	flds   -0x16c(%ebp,%eax,4)
 804e50d:	d9 ee                	fldz   
 804e50f:	da e9                	fucompp 
 804e511:	df e0                	fnstsw %ax
 804e513:	9e                   	sahf   
 804e514:	77 02                	ja     804e518 <GAThread::objectivenew(unsigned int*, float*)+0xe24>
 804e516:	eb 12                	jmp    804e52a <GAThread::objectivenew(unsigned int*, float*)+0xe36>
 804e518:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804e51b:	d9 84 85 94 fe ff ff 	flds   -0x16c(%ebp,%eax,4)
 804e522:	d9 45 d0             	flds   -0x30(%ebp)
 804e525:	de c1                	faddp  %st,%st(1)
 804e527:	d9 5d d0             	fstps  -0x30(%ebp)
 804e52a:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 804e52e:	83 7d fc 02          	cmpl   $0x2,-0x4(%ebp)
 804e532:	76 cf                	jbe    804e503 <GAThread::objectivenew(unsigned int*, float*)+0xe0f>
 804e534:	d9 45 d0             	flds   -0x30(%ebp)
 804e537:	d9 05 28 f7 04 08    	flds   0x804f728
 804e53d:	de c9                	fmulp  %st,%st(1)
 804e53f:	d9 5d d0             	fstps  -0x30(%ebp)
 804e542:	a1 38 02 05 08       	mov    0x8050238,%eax
 804e547:	89 45 88             	mov    %eax,-0x78(%ebp)
 804e54a:	a1 3c 02 05 08       	mov    0x805023c,%eax
 804e54f:	89 45 84             	mov    %eax,-0x7c(%ebp)
 804e552:	a1 40 02 05 08       	mov    0x8050240,%eax
 804e557:	89 45 80             	mov    %eax,-0x80(%ebp)
 804e55a:	d9 45 88             	flds   -0x78(%ebp)
 804e55d:	d8 4d 84             	fmuls  -0x7c(%ebp)
 804e560:	d8 4d 80             	fmuls  -0x80(%ebp)
 804e563:	d9 9d 7c ff ff ff    	fstps  -0x84(%ebp)
 804e569:	d9 45 88             	flds   -0x78(%ebp)
 804e56c:	d8 4d 84             	fmuls  -0x7c(%ebp)
 804e56f:	d9 45 84             	flds   -0x7c(%ebp)
 804e572:	d8 4d 80             	fmuls  -0x80(%ebp)
 804e575:	de c1                	faddp  %st,%st(1)
 804e577:	d9 45 80             	flds   -0x80(%ebp)
 804e57a:	d8 4d 88             	fmuls  -0x78(%ebp)
 804e57d:	de c1                	faddp  %st,%st(1)
 804e57f:	d9 9d 78 ff ff ff    	fstps  -0x88(%ebp)
 804e585:	d9 45 88             	flds   -0x78(%ebp)
 804e588:	d8 45 84             	fadds  -0x7c(%ebp)
 804e58b:	d8 45 80             	fadds  -0x80(%ebp)
 804e58e:	d9 e8                	fld1   
 804e590:	de e9                	fsubrp %st,%st(1)
 804e592:	d9 9d 74 ff ff ff    	fstps  -0x8c(%ebp)
 804e598:	d9 85 78 ff ff ff    	flds   -0x88(%ebp)
 804e59e:	d8 8d 78 ff ff ff    	fmuls  -0x88(%ebp)
 804e5a4:	d9 85 7c ff ff ff    	flds   -0x84(%ebp)
 804e5aa:	d9 05 2c f7 04 08    	flds   0x804f72c
 804e5b0:	de c9                	fmulp  %st,%st(1)
 804e5b2:	d8 8d 74 ff ff ff    	fmuls  -0x8c(%ebp)
 804e5b8:	de c1                	faddp  %st,%st(1)
 804e5ba:	d9 1c 24             	fstps  (%esp)
 804e5bd:	e8 6c 01 00 00       	call   804e72e <std::sqrt(float)>
 804e5c2:	d8 a5 78 ff ff ff    	fsubs  -0x88(%ebp)
 804e5c8:	d9 85 7c ff ff ff    	flds   -0x84(%ebp)
 804e5ce:	d8 c0                	fadd   %st(0),%st
 804e5d0:	de f9                	fdivrp %st,%st(1)
 804e5d2:	d9 9d 70 ff ff ff    	fstps  -0x90(%ebp)
 804e5d8:	d9 05 24 02 05 08    	flds   0x8050224
 804e5de:	d8 65 dc             	fsubs  -0x24(%ebp)
 804e5e1:	d9 05 24 02 05 08    	flds   0x8050224
 804e5e7:	d9 05 20 02 05 08    	flds   0x8050220
 804e5ed:	de e9                	fsubrp %st,%st(1)
 804e5ef:	de f9                	fdivrp %st,%st(1)
 804e5f1:	d9 9d 6c ff ff ff    	fstps  -0x94(%ebp)
 804e5f7:	d9 05 2c 02 05 08    	flds   0x805022c
 804e5fd:	d8 65 d8             	fsubs  -0x28(%ebp)
 804e600:	d9 05 2c 02 05 08    	flds   0x805022c
 804e606:	d9 05 28 02 05 08    	flds   0x8050228
 804e60c:	de e9                	fsubrp %st,%st(1)
 804e60e:	de f9                	fdivrp %st,%st(1)
 804e610:	d9 9d 68 ff ff ff    	fstps  -0x98(%ebp)
 804e616:	d9 05 30 02 05 08    	flds   0x8050230
 804e61c:	d9 45 d4             	flds   -0x2c(%ebp)
 804e61f:	de e1                	fsubp  %st,%st(1)
 804e621:	d9 05 34 02 05 08    	flds   0x8050234
 804e627:	d9 05 30 02 05 08    	flds   0x8050230
 804e62d:	de e9                	fsubrp %st,%st(1)
 804e62f:	de f9                	fdivrp %st,%st(1)
 804e631:	d9 9d 64 ff ff ff    	fstps  -0x9c(%ebp)
 804e637:	d9 85 6c ff ff ff    	flds   -0x94(%ebp)
 804e63d:	d9 ee                	fldz   
 804e63f:	da e9                	fucompp 
 804e641:	df e0                	fnstsw %ax
 804e643:	9e                   	sahf   
 804e644:	77 20                	ja     804e666 <GAThread::objectivenew(unsigned int*, float*)+0xf72>
 804e646:	d9 85 68 ff ff ff    	flds   -0x98(%ebp)
 804e64c:	d9 ee                	fldz   
 804e64e:	da e9                	fucompp 
 804e650:	df e0                	fnstsw %ax
 804e652:	9e                   	sahf   
 804e653:	77 11                	ja     804e666 <GAThread::objectivenew(unsigned int*, float*)+0xf72>
 804e655:	d9 85 64 ff ff ff    	flds   -0x9c(%ebp)
 804e65b:	d9 ee                	fldz   
 804e65d:	da e9                	fucompp 
 804e65f:	df e0                	fnstsw %ax
 804e661:	9e                   	sahf   
 804e662:	77 02                	ja     804e666 <GAThread::objectivenew(unsigned int*, float*)+0xf72>
 804e664:	eb 0d                	jmp    804e673 <GAThread::objectivenew(unsigned int*, float*)+0xf7f>
 804e666:	d9 ee                	fldz   
 804e668:	d9 9d b8 fc ff ff    	fstps  -0x348(%ebp)
 804e66e:	e9 b3 00 00 00       	jmp    804e726 <GAThread::objectivenew(unsigned int*, float*)+0x1032>
 804e673:	d9 85 6c ff ff ff    	flds   -0x94(%ebp)
 804e679:	d9 e8                	fld1   
 804e67b:	d9 c9                	fxch   %st(1)
 804e67d:	da e9                	fucompp 
 804e67f:	df e0                	fnstsw %ax
 804e681:	9e                   	sahf   
 804e682:	77 02                	ja     804e686 <GAThread::objectivenew(unsigned int*, float*)+0xf92>
 804e684:	eb 0b                	jmp    804e691 <GAThread::objectivenew(unsigned int*, float*)+0xf9d>
 804e686:	b8 00 00 80 3f       	mov    $0x3f800000,%eax
 804e68b:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 804e691:	d9 85 68 ff ff ff    	flds   -0x98(%ebp)
 804e697:	d9 e8                	fld1   
 804e699:	d9 c9                	fxch   %st(1)
 804e69b:	da e9                	fucompp 
 804e69d:	df e0                	fnstsw %ax
 804e69f:	9e                   	sahf   
 804e6a0:	77 02                	ja     804e6a4 <GAThread::objectivenew(unsigned int*, float*)+0xfb0>
 804e6a2:	eb 0b                	jmp    804e6af <GAThread::objectivenew(unsigned int*, float*)+0xfbb>
 804e6a4:	b8 00 00 80 3f       	mov    $0x3f800000,%eax
 804e6a9:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 804e6af:	d9 85 64 ff ff ff    	flds   -0x9c(%ebp)
 804e6b5:	d9 e8                	fld1   
 804e6b7:	d9 c9                	fxch   %st(1)
 804e6b9:	da e9                	fucompp 
 804e6bb:	df e0                	fnstsw %ax
 804e6bd:	9e                   	sahf   
 804e6be:	77 02                	ja     804e6c2 <GAThread::objectivenew(unsigned int*, float*)+0xfce>
 804e6c0:	eb 0b                	jmp    804e6cd <GAThread::objectivenew(unsigned int*, float*)+0xfd9>
 804e6c2:	b8 00 00 80 3f       	mov    $0x3f800000,%eax
 804e6c7:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)
 804e6cd:	d9 45 88             	flds   -0x78(%ebp)
 804e6d0:	d8 8d 70 ff ff ff    	fmuls  -0x90(%ebp)
 804e6d6:	d8 8d 6c ff ff ff    	fmuls  -0x94(%ebp)
 804e6dc:	d9 e8                	fld1   
 804e6de:	de c1                	faddp  %st,%st(1)
 804e6e0:	d9 45 84             	flds   -0x7c(%ebp)
 804e6e3:	d8 8d 70 ff ff ff    	fmuls  -0x90(%ebp)
 804e6e9:	d8 8d 68 ff ff ff    	fmuls  -0x98(%ebp)
 804e6ef:	d9 e8                	fld1   
 804e6f1:	de c1                	faddp  %st,%st(1)
 804e6f3:	de c9                	fmulp  %st,%st(1)
 804e6f5:	d9 45 80             	flds   -0x80(%ebp)
 804e6f8:	d8 8d 70 ff ff ff    	fmuls  -0x90(%ebp)
 804e6fe:	d8 8d 64 ff ff ff    	fmuls  -0x9c(%ebp)
 804e704:	d9 e8                	fld1   
 804e706:	de c1                	faddp  %st,%st(1)
 804e708:	de c9                	fmulp  %st,%st(1)
 804e70a:	d9 e8                	fld1   
 804e70c:	de e9                	fsubrp %st,%st(1)
 804e70e:	d8 b5 70 ff ff ff    	fdivs  -0x90(%ebp)
 804e714:	d9 9d 60 ff ff ff    	fstps  -0xa0(%ebp)
 804e71a:	d9 85 60 ff ff ff    	flds   -0xa0(%ebp)
 804e720:	d9 9d b8 fc ff ff    	fstps  -0x348(%ebp)
 804e726:	d9 85 b8 fc ff ff    	flds   -0x348(%ebp)
 804e72c:	c9                   	leave  
 804e72d:	c3                   	ret    

0804e72e <std::sqrt(float)>:
 804e72e:	55                   	push   %ebp
 804e72f:	89 e5                	mov    %esp,%ebp
 804e731:	83 ec 18             	sub    $0x18,%esp
 804e734:	d9 45 08             	flds   0x8(%ebp)
 804e737:	d9 fa                	fsqrt  
 804e739:	d9 5d fc             	fstps  -0x4(%ebp)
 804e73c:	d9 45 fc             	flds   -0x4(%ebp)
 804e73f:	dd e8                	fucomp %st(0)
 804e741:	df e0                	fnstsw %ax
 804e743:	9e                   	sahf   
 804e744:	7a 02                	jp     804e748 <std::sqrt(float)+0x1a>
 804e746:	74 0e                	je     804e756 <std::sqrt(float)+0x28>
 804e748:	8b 45 08             	mov    0x8(%ebp),%eax
 804e74b:	89 04 24             	mov    %eax,(%esp)
 804e74e:	e8 ed a4 ff ff       	call   8048c40 <sqrtf@plt>
 804e753:	d9 5d fc             	fstps  -0x4(%ebp)
 804e756:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804e759:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804e75c:	d9 45 f8             	flds   -0x8(%ebp)
 804e75f:	c9                   	leave  
 804e760:	c3                   	ret    
 804e761:	90                   	nop    
 804e762:	90                   	nop    
 804e763:	90                   	nop    
 804e764:	90                   	nop    
 804e765:	90                   	nop    
 804e766:	90                   	nop    
 804e767:	90                   	nop    
 804e768:	90                   	nop    
 804e769:	90                   	nop    
 804e76a:	90                   	nop    
 804e76b:	90                   	nop    
 804e76c:	90                   	nop    
 804e76d:	90                   	nop    
 804e76e:	90                   	nop    
 804e76f:	90                   	nop    

0804e770 <__libc_csu_fini>:
 804e770:	55                   	push   %ebp
 804e771:	89 e5                	mov    %esp,%ebp
 804e773:	5d                   	pop    %ebp
 804e774:	c3                   	ret    
 804e775:	8d 74 26 00          	lea    0x0(%esi),%esi
 804e779:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

0804e780 <__libc_csu_init>:
 804e780:	55                   	push   %ebp
 804e781:	89 e5                	mov    %esp,%ebp
 804e783:	57                   	push   %edi
 804e784:	56                   	push   %esi
 804e785:	53                   	push   %ebx
 804e786:	e8 4f 00 00 00       	call   804e7da <__i686.get_pc_thunk.bx>
 804e78b:	81 c3 89 19 00 00    	add    $0x1989,%ebx
 804e791:	83 ec 0c             	sub    $0xc,%esp
 804e794:	e8 07 a4 ff ff       	call   8048ba0 <_init>
 804e799:	8d bb ec fe ff ff    	lea    -0x114(%ebx),%edi
 804e79f:	8d 83 ec fe ff ff    	lea    -0x114(%ebx),%eax
 804e7a5:	29 c7                	sub    %eax,%edi
 804e7a7:	c1 ff 02             	sar    $0x2,%edi
 804e7aa:	85 ff                	test   %edi,%edi
 804e7ac:	74 24                	je     804e7d2 <__libc_csu_init+0x52>
 804e7ae:	31 f6                	xor    %esi,%esi
 804e7b0:	8b 45 10             	mov    0x10(%ebp),%eax
 804e7b3:	89 44 24 08          	mov    %eax,0x8(%esp)
 804e7b7:	8b 45 0c             	mov    0xc(%ebp),%eax
 804e7ba:	89 44 24 04          	mov    %eax,0x4(%esp)
 804e7be:	8b 45 08             	mov    0x8(%ebp),%eax
 804e7c1:	89 04 24             	mov    %eax,(%esp)
 804e7c4:	ff 94 b3 ec fe ff ff 	call   *-0x114(%ebx,%esi,4)
 804e7cb:	83 c6 01             	add    $0x1,%esi
 804e7ce:	39 f7                	cmp    %esi,%edi
 804e7d0:	75 de                	jne    804e7b0 <__libc_csu_init+0x30>
 804e7d2:	83 c4 0c             	add    $0xc,%esp
 804e7d5:	5b                   	pop    %ebx
 804e7d6:	5e                   	pop    %esi
 804e7d7:	5f                   	pop    %edi
 804e7d8:	5d                   	pop    %ebp
 804e7d9:	c3                   	ret    

0804e7da <__i686.get_pc_thunk.bx>:
 804e7da:	8b 1c 24             	mov    (%esp),%ebx
 804e7dd:	c3                   	ret    
 804e7de:	90                   	nop    
 804e7df:	90                   	nop    

0804e7e0 <__do_global_ctors_aux>:
 804e7e0:	55                   	push   %ebp
 804e7e1:	89 e5                	mov    %esp,%ebp
 804e7e3:	53                   	push   %ebx
 804e7e4:	83 ec 04             	sub    $0x4,%esp
 804e7e7:	a1 0c 00 05 08       	mov    0x805000c,%eax
 804e7ec:	83 f8 ff             	cmp    $0xffffffff,%eax
 804e7ef:	74 12                	je     804e803 <__do_global_ctors_aux+0x23>
 804e7f1:	31 db                	xor    %ebx,%ebx
 804e7f3:	ff d0                	call   *%eax
 804e7f5:	8b 83 08 00 05 08    	mov    0x8050008(%ebx),%eax
 804e7fb:	83 eb 04             	sub    $0x4,%ebx
 804e7fe:	83 f8 ff             	cmp    $0xffffffff,%eax
 804e801:	75 f0                	jne    804e7f3 <__do_global_ctors_aux+0x13>
 804e803:	83 c4 04             	add    $0x4,%esp
 804e806:	5b                   	pop    %ebx
 804e807:	5d                   	pop    %ebp
 804e808:	c3                   	ret    
 804e809:	90                   	nop    
 804e80a:	90                   	nop    
 804e80b:	90                   	nop    
Disassembly of section .fini:

0804e80c <_fini>:
 804e80c:	55                   	push   %ebp
 804e80d:	89 e5                	mov    %esp,%ebp
 804e80f:	53                   	push   %ebx
 804e810:	83 ec 04             	sub    $0x4,%esp
 804e813:	e8 00 00 00 00       	call   804e818 <_fini+0xc>
 804e818:	5b                   	pop    %ebx
 804e819:	81 c3 fc 18 00 00    	add    $0x18fc,%ebx
 804e81f:	e8 bc a6 ff ff       	call   8048ee0 <__do_global_dtors_aux>
 804e824:	59                   	pop    %ecx
 804e825:	5b                   	pop    %ebx
 804e826:	c9                   	leave  
 804e827:	c3                   	ret    
Disassembly of section .rodata:

0804e828 <_fp_hw>:
 804e828:	03 00                	add    (%eax),%eax
	...

0804e82c <_IO_stdin_used>:
 804e82c:	01 00                	add    %eax,(%eax)
 804e82e:	02 00                	add    (%eax),%al
 804e830:	0a 20                	or     (%eax),%ah
 804e832:	45                   	inc    %ebp
 804e833:	72 72                	jb     804e8a7 <_IO_stdin_used+0x7b>
 804e835:	6f                   	outsl  %ds:(%esi),(%dx)
 804e836:	72 20                	jb     804e858 <_IO_stdin_used+0x2c>
 804e838:	21 21                	and    %esp,(%ecx)
 804e83a:	20 50 6f             	and    %dl,0x6f(%eax)
 804e83d:	69 6e 74 65 72 20 25 	imul   $0x25207265,0x74(%esi),%ebp
 804e844:	73 20                	jae    804e866 <_IO_stdin_used+0x3a>
 804e846:	66 6f                	outsw  %ds:(%esi),(%dx)
 804e848:	75 6e                	jne    804e8b8 <_IO_stdin_used+0x8c>
 804e84a:	64 20 4e 75          	and    %cl,%fs:0x75(%esi)
 804e84e:	6c                   	insb   (%dx),%es:(%edi)
 804e84f:	6c                   	insb   (%dx),%es:(%edi)
 804e850:	20 21                	and    %ah,(%ecx)
 804e852:	00 0a                	add    %cl,(%edx)
 804e854:	20 50 72             	and    %dl,0x72(%eax)
 804e857:	6f                   	outsl  %ds:(%esi),(%dx)
 804e858:	67 72 61             	addr16 jb 804e8bc <_IO_stdin_used+0x90>
 804e85b:	6d                   	insl   (%dx),%es:(%edi)
 804e85c:	20 69 73             	and    %ch,0x73(%ecx)
 804e85f:	20 68 61             	and    %ch,0x61(%eax)
 804e862:	6c                   	insb   (%dx),%es:(%edi)
 804e863:	74 69                	je     804e8ce <_IO_stdin_used+0xa2>
 804e865:	6e                   	outsb  %ds:(%esi),(%dx)
 804e866:	67 20 2e 2e 2e       	addr16 and %ch,0x2e2e
 804e86b:	2e 2e 00 78 20       	add    %bh,%cs:0x20(%eax)
 804e870:	69 6e 20 6f 62 6a 65 	imul   $0x656a626f,0x20(%esi),%ebp
 804e877:	63 74 69 76          	arpl   %si,0x76(%ecx,%ebp,2)
 804e87b:	65 28 29             	sub    %ch,%gs:(%ecx)
 804e87e:	00 63 68             	add    %ah,0x68(%ebx)
 804e881:	72 6f                	jb     804e8f2 <_IO_stdin_used+0xc6>
 804e883:	6d                   	insl   (%dx),%es:(%edi)
 804e884:	20 69 6e             	and    %ch,0x6e(%ecx)
 804e887:	20 64 65 63          	and    %ah,0x63(%ebp)
 804e88b:	6f                   	outsl  %ds:(%esi),(%dx)
 804e88c:	64                   	fs
 804e88d:	65                   	gs
 804e88e:	76 61                	jbe    804e8f1 <_IO_stdin_used+0xc5>
 804e890:	6c                   	insb   (%dx),%es:(%edi)
 804e891:	75 65                	jne    804e8f8 <_IO_stdin_used+0xcc>
 804e893:	00 70 74             	add    %dh,0x74(%eax)
 804e896:	72 5f                	jb     804e8f7 <_IO_stdin_used+0xcb>
 804e898:	69 6e 64 69 76 20 69 	imul   $0x69207669,0x64(%esi),%ebp
 804e89f:	6e                   	outsb  %ds:(%esi),(%dx)
 804e8a0:	20 64 65 63          	and    %ah,0x63(%ebp)
 804e8a4:	6f                   	outsl  %ds:(%esi),(%dx)
 804e8a5:	64                   	fs
 804e8a6:	65                   	gs
 804e8a7:	5f                   	pop    %edi
 804e8a8:	73 74                	jae    804e91e <_IO_stdin_used+0xf2>
 804e8aa:	72 69                	jb     804e915 <_IO_stdin_used+0xe9>
 804e8ac:	6e                   	outsb  %ds:(%esi),(%dx)
 804e8ad:	67 00 73 6f          	addr16 add %dh,0x6f(%bp,%di)
 804e8b1:	75 72                	jne    804e925 <_IO_stdin_used+0xf9>
 804e8b3:	63 65 20             	arpl   %sp,0x20(%ebp)
 804e8b6:	69 6e 20 63 6f 70 79 	imul   $0x79706f63,0x20(%esi),%ebp
 804e8bd:	5f                   	pop    %edi
 804e8be:	69 6e 64 69 76 69 64 	imul   $0x64697669,0x64(%esi),%ebp
 804e8c5:	75 61                	jne    804e928 <_IO_stdin_used+0xfc>
 804e8c7:	6c                   	insb   (%dx),%es:(%edi)
 804e8c8:	00 74 61 72          	add    %dh,0x72(%ecx)
 804e8cc:	67                   	addr16
 804e8cd:	65                   	gs
 804e8ce:	74 20                	je     804e8f0 <_IO_stdin_used+0xc4>
 804e8d0:	69 6e 20 63 6f 70 79 	imul   $0x79706f63,0x20(%esi),%ebp
 804e8d7:	5f                   	pop    %edi
 804e8d8:	69 6e 64 69 76 69 64 	imul   $0x64697669,0x64(%esi),%ebp
 804e8df:	75 61                	jne    804e942 <_IO_stdin_used+0x116>
 804e8e1:	6c                   	insb   (%dx),%es:(%edi)
 804e8e2:	00 00                	add    %al,(%eax)
 804e8e4:	0a 6d 61             	or     0x61(%ebp),%ch
 804e8e7:	6c                   	insb   (%dx),%es:(%edi)
 804e8e8:	6c                   	insb   (%dx),%es:(%edi)
 804e8e9:	6f                   	outsl  %ds:(%esi),(%dx)
 804e8ea:	63 3a                	arpl   %di,(%edx)
 804e8ec:	20 6f 75             	and    %ch,0x75(%edi)
 804e8ef:	74 20                	je     804e911 <_IO_stdin_used+0xe5>
 804e8f1:	6f                   	outsl  %ds:(%esi),(%dx)
 804e8f2:	66                   	data16
 804e8f3:	20 6d 65             	and    %ch,0x65(%ebp)
 804e8f6:	6d                   	insl   (%dx),%es:(%edi)
 804e8f7:	6f                   	outsl  %ds:(%esi),(%dx)
 804e8f8:	72 79                	jb     804e973 <_IO_stdin_used+0x147>
 804e8fa:	20 6d 61             	and    %ch,0x61(%ebp)
 804e8fd:	6b 69 6e 67          	imul   $0x67,0x6e(%ecx),%ebp
 804e901:	20 25 73 21 21 0a    	and    %ah,0xa212173
 804e907:	00 20                	add    %ah,(%eax)
 804e909:	46                   	inc    %esi
 804e90a:	69 6c 65 20 66 70 20 	imul   $0x69207066,0x20(%ebp),%ebp
 804e911:	69 
 804e912:	6e                   	outsb  %ds:(%esi),(%dx)
 804e913:	20 69 6e             	and    %ch,0x6e(%ecx)
 804e916:	69 74 72 65 70 6f 72 	imul   $0x74726f70,0x65(%edx,%esi,2),%esi
 804e91d:	74 
 804e91e:	00 00                	add    %al,(%eax)
 804e920:	0a 0a                	or     (%edx),%cl
 804e922:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804e927:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804e92c:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804e931:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804e936:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804e93b:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804e940:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804e945:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804e94a:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804e94f:	00 0a                	add    %cl,(%edx)
 804e951:	20 20                	and    %ah,(%eax)
 804e953:	20 20                	and    %ah,(%eax)
 804e955:	20 20                	and    %ah,(%eax)
 804e957:	20 20                	and    %ah,(%eax)
 804e959:	20 20                	and    %ah,(%eax)
 804e95b:	20 20                	and    %ah,(%eax)
 804e95d:	20 49 4e             	and    %cl,0x4e(%ecx)
 804e960:	49                   	dec    %ecx
 804e961:	54                   	push   %esp
 804e962:	49                   	dec    %ecx
 804e963:	41                   	inc    %ecx
 804e964:	4c                   	dec    %esp
 804e965:	20 52 45             	and    %dl,0x45(%edx)
 804e968:	50                   	push   %eax
 804e969:	4f                   	dec    %edi
 804e96a:	52                   	push   %edx
 804e96b:	54                   	push   %esp
 804e96c:	20 20                	and    %ah,(%eax)
 804e96e:	20 20                	and    %ah,(%eax)
 804e970:	20 20                	and    %ah,(%eax)
 804e972:	20 20                	and    %ah,(%eax)
 804e974:	20 20                	and    %ah,(%eax)
 804e976:	20 20                	and    %ah,(%eax)
 804e978:	20 20                	and    %ah,(%eax)
 804e97a:	20 20                	and    %ah,(%eax)
 804e97c:	20 20                	and    %ah,(%eax)
 804e97e:	00 00                	add    %al,(%eax)
 804e980:	0a 3d 3d 3d 3d 3d    	or     0x3d3d3d3d,%bh
 804e986:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804e98b:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804e990:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804e995:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804e99a:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804e99f:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804e9a4:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804e9a9:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804e9ae:	00 0a                	add    %cl,(%edx)
 804e9b0:	20 42 49             	and    %al,0x49(%edx)
 804e9b3:	4e                   	dec    %esi
 804e9b4:	41                   	inc    %ecx
 804e9b5:	52                   	push   %edx
 804e9b6:	59                   	pop    %ecx
 804e9b7:	2d 43 4f 44 45       	sub    $0x45444f43,%eax
 804e9bc:	44                   	inc    %esp
 804e9bd:	20 47 41             	and    %al,0x41(%edi)
 804e9c0:	20 00                	and    %al,(%eax)
 804e9c2:	0a 20                	or     (%eax),%ah
 804e9c4:	52                   	push   %edx
 804e9c5:	45                   	inc    %ebp
 804e9c6:	41                   	inc    %ecx
 804e9c7:	4c                   	dec    %esp
 804e9c8:	2d 43 4f 44 45       	sub    $0x45444f43,%eax
 804e9cd:	44                   	inc    %esp
 804e9ce:	20 47 41             	and    %al,0x41(%edi)
 804e9d1:	20 28                	and    %ch,(%eax)
 804e9d3:	53                   	push   %ebx
 804e9d4:	42                   	inc    %edx
 804e9d5:	58                   	pop    %eax
 804e9d6:	29 00                	sub    %eax,(%eax)
 804e9d8:	0a 20                	or     (%eax),%ah
 804e9da:	52                   	push   %edx
 804e9db:	45                   	inc    %ebp
 804e9dc:	41                   	inc    %ecx
 804e9dd:	4c                   	dec    %esp
 804e9de:	2d 43 4f 44 45       	sub    $0x45444f43,%eax
 804e9e3:	44                   	inc    %esp
 804e9e4:	20 47 41             	and    %al,0x41(%edi)
 804e9e7:	20 28                	and    %ch,(%eax)
 804e9e9:	42                   	inc    %edx
 804e9ea:	4c                   	dec    %esp
 804e9eb:	58                   	pop    %eax
 804e9ec:	29 00                	sub    %eax,(%eax)
 804e9ee:	00 00                	add    %al,(%eax)
 804e9f0:	0a 20                	or     (%eax),%ah
 804e9f2:	54                   	push   %esp
 804e9f3:	6f                   	outsl  %ds:(%esi),(%dx)
 804e9f4:	75 72                	jne    804ea68 <_IO_stdin_used+0x23c>
 804e9f6:	6e                   	outsb  %ds:(%esi),(%dx)
 804e9f7:	61                   	popa   
 804e9f8:	6d                   	insl   (%dx),%es:(%edi)
 804e9f9:	65 6e                	outsb  %gs:(%esi),(%dx)
 804e9fb:	74 20                	je     804ea1d <_IO_stdin_used+0x1f1>
 804e9fd:	53                   	push   %ebx
 804e9fe:	65                   	gs
 804e9ff:	6c                   	insb   (%dx),%es:(%edi)
 804ea00:	65 63 74 69 6f       	arpl   %si,%gs:0x6f(%ecx,%ebp,2)
 804ea05:	6e                   	outsb  %ds:(%esi),(%dx)
 804ea06:	20 55 73             	and    %dl,0x73(%ebp)
 804ea09:	65 64 20 28          	and    %ch,%fs:%gs:(%eax)
 804ea0d:	53                   	push   %ebx
 804ea0e:	69 7a 65 20 3d 20 25 	imul   $0x25203d20,0x65(%edx),%edi
 804ea15:	64 29 00             	sub    %eax,%fs:(%eax)
 804ea18:	0a 20                	or     (%eax),%ah
 804ea1a:	52                   	push   %edx
 804ea1b:	6f                   	outsl  %ds:(%esi),(%dx)
 804ea1c:	75 6c                	jne    804ea8a <_IO_stdin_used+0x25e>
 804ea1e:	65                   	gs
 804ea1f:	74 74                	je     804ea95 <_IO_stdin_used+0x269>
 804ea21:	65 20 57 68          	and    %dl,%gs:0x68(%edi)
 804ea25:	65                   	gs
 804ea26:	65                   	gs
 804ea27:	6c                   	insb   (%dx),%es:(%edi)
 804ea28:	20 53 65             	and    %dl,0x65(%ebx)
 804ea2b:	6c                   	insb   (%dx),%es:(%edi)
 804ea2c:	65 63 74 69 6f       	arpl   %si,%gs:0x6f(%ecx,%ebp,2)
 804ea31:	6e                   	outsb  %ds:(%esi),(%dx)
 804ea32:	20 55 73             	and    %dl,0x73(%ebp)
 804ea35:	65 64 00 0a          	add    %cl,%fs:%gs:(%edx)
 804ea39:	20 53 74             	and    %dl,0x74(%ebx)
 804ea3c:	6f                   	outsl  %ds:(%esi),(%dx)
 804ea3d:	63 68 61             	arpl   %bp,0x61(%eax)
 804ea40:	73 74                	jae    804eab6 <_IO_stdin_used+0x28a>
 804ea42:	69 63 20 52 65 6d 61 	imul   $0x616d6552,0x20(%ebx),%esp
 804ea49:	69 6e 64 65 72 20 52 	imul   $0x52207265,0x64(%esi),%ebp
 804ea50:	57                   	push   %edi
 804ea51:	20 53 65             	and    %dl,0x65(%ebx)
 804ea54:	6c                   	insb   (%dx),%es:(%edi)
 804ea55:	65 63 74 69 6f       	arpl   %si,%gs:0x6f(%ecx,%ebp,2)
 804ea5a:	6e                   	outsb  %ds:(%esi),(%dx)
 804ea5b:	20 55 73             	and    %dl,0x73(%ebp)
 804ea5e:	65 64 00 00          	add    %al,%fs:%gs:(%eax)
 804ea62:	00 00                	add    %al,(%eax)
 804ea64:	0a 20                	or     (%eax),%ah
 804ea66:	43                   	inc    %ebx
 804ea67:	72 6f                	jb     804ead8 <_IO_stdin_used+0x2ac>
 804ea69:	73 73                	jae    804eade <_IO_stdin_used+0x2b2>
 804ea6b:	6f                   	outsl  %ds:(%esi),(%dx)
 804ea6c:	76 65                	jbe    804ead3 <_IO_stdin_used+0x2a7>
 804ea6e:	72 20                	jb     804ea90 <_IO_stdin_used+0x264>
 804ea70:	53                   	push   %ebx
 804ea71:	74 72                	je     804eae5 <_IO_stdin_used+0x2b9>
 804ea73:	61                   	popa   
 804ea74:	74 65                	je     804eadb <_IO_stdin_used+0x2af>
 804ea76:	67 79 20             	addr16 jns 804ea99 <_IO_stdin_used+0x26d>
 804ea79:	3a 20                	cmp    (%eax),%ah
 804ea7b:	31 20                	xor    %esp,(%eax)
 804ea7d:	78 73                	js     804eaf2 <_IO_stdin_used+0x2c6>
 804ea7f:	69 74 65 20 77 69 74 	imul   $0x68746977,0x20(%ebp),%esi
 804ea86:	68 
 804ea87:	20 73 77             	and    %dh,0x77(%ebx)
 804ea8a:	61                   	popa   
 804ea8b:	70 70                	jo     804eafd <_IO_stdin_used+0x2d1>
 804ea8d:	69 6e 67 00 00 00 00 	imul   $0x0,0x67(%esi),%ebp
 804ea94:	0a 20                	or     (%eax),%ah
 804ea96:	43                   	inc    %ebx
 804ea97:	72 6f                	jb     804eb08 <_IO_stdin_used+0x2dc>
 804ea99:	73 73                	jae    804eb0e <_IO_stdin_used+0x2e2>
 804ea9b:	6f                   	outsl  %ds:(%esi),(%dx)
 804ea9c:	76 65                	jbe    804eb03 <_IO_stdin_used+0x2d7>
 804ea9e:	72 20                	jb     804eac0 <_IO_stdin_used+0x294>
 804eaa0:	53                   	push   %ebx
 804eaa1:	74 72                	je     804eb15 <_IO_stdin_used+0x2e9>
 804eaa3:	61                   	popa   
 804eaa4:	74 65                	je     804eb0b <_IO_stdin_used+0x2df>
 804eaa6:	67 79 20             	addr16 jns 804eac9 <_IO_stdin_used+0x29d>
 804eaa9:	3a 20                	cmp    (%eax),%ah
 804eaab:	55                   	push   %ebp
 804eaac:	6e                   	outsb  %ds:(%esi),(%dx)
 804eaad:	69 66 6f 72 6d 6c 79 	imul   $0x796c6d72,0x6f(%esi),%esp
 804eab4:	20 61 6c             	and    %ah,0x6c(%ecx)
 804eab7:	6c                   	insb   (%dx),%es:(%edi)
 804eab8:	20 76 61             	and    %dh,0x61(%esi)
 804eabb:	72 69                	jb     804eb26 <_IO_stdin_used+0x2fa>
 804eabd:	61                   	popa   
 804eabe:	62 6c 65 73          	bound  %ebp,0x73(%ebp)
 804eac2:	20 35 30 20 25 20    	and    %dh,0x20252030
 804eac8:	00 00                	add    %al,(%eax)
 804eaca:	00 00                	add    %al,(%eax)
 804eacc:	0a 20                	or     (%eax),%ah
 804eace:	43                   	inc    %ebx
 804eacf:	72 6f                	jb     804eb40 <_IO_stdin_used+0x314>
 804ead1:	73 73                	jae    804eb46 <_IO_stdin_used+0x31a>
 804ead3:	6f                   	outsl  %ds:(%esi),(%dx)
 804ead4:	76 65                	jbe    804eb3b <_IO_stdin_used+0x30f>
 804ead6:	72 20                	jb     804eaf8 <_IO_stdin_used+0x2cc>
 804ead8:	53                   	push   %ebx
 804ead9:	74 72                	je     804eb4d <_IO_stdin_used+0x321>
 804eadb:	61                   	popa   
 804eadc:	74 65                	je     804eb43 <_IO_stdin_used+0x317>
 804eade:	67 79 20             	addr16 jns 804eb01 <_IO_stdin_used+0x2d5>
 804eae1:	3a 20                	cmp    (%eax),%ah
 804eae3:	4f                   	dec    %edi
 804eae4:	6e                   	outsb  %ds:(%esi),(%dx)
 804eae5:	20 61 20             	and    %ah,0x20(%ecx)
 804eae8:	73 74                	jae    804eb5e <_IO_stdin_used+0x332>
 804eaea:	72 61                	jb     804eb4d <_IO_stdin_used+0x321>
 804eaec:	69 67 68 74 20 6c 69 	imul   $0x696c2074,0x68(%edi),%esp
 804eaf3:	6e                   	outsb  %ds:(%esi),(%dx)
 804eaf4:	65 00 00             	add    %al,%gs:(%eax)
 804eaf7:	00 0a                	add    %cl,(%edx)
 804eaf9:	20 43 52             	and    %al,0x52(%ebx)
 804eafc:	4f                   	dec    %edi
 804eafd:	53                   	push   %ebx
 804eafe:	53                   	push   %ebx
 804eaff:	4f                   	dec    %edi
 804eb00:	56                   	push   %esi
 804eb01:	45                   	inc    %ebp
 804eb02:	52                   	push   %edx
 804eb03:	20 4e 4f             	and    %cl,0x4f(%esi)
 804eb06:	54                   	push   %esp
 804eb07:	20 53 45             	and    %dl,0x45(%ebx)
 804eb0a:	54                   	push   %esp
 804eb0b:	20 43 4f             	and    %al,0x4f(%ebx)
 804eb0e:	52                   	push   %edx
 804eb0f:	52                   	push   %edx
 804eb10:	45                   	inc    %ebp
 804eb11:	43                   	inc    %ebx
 804eb12:	54                   	push   %esp
 804eb13:	4c                   	dec    %esp
 804eb14:	59                   	pop    %ecx
 804eb15:	20 00                	and    %al,(%eax)
 804eb17:	00 0a                	add    %cl,(%edx)
 804eb19:	20 4d 75             	and    %cl,0x75(%ebp)
 804eb1c:	74 61                	je     804eb7f <_IO_stdin_used+0x353>
 804eb1e:	74 69                	je     804eb89 <_IO_stdin_used+0x35d>
 804eb20:	6f                   	outsl  %ds:(%esi),(%dx)
 804eb21:	6e                   	outsb  %ds:(%esi),(%dx)
 804eb22:	20 53 74             	and    %dl,0x74(%ebx)
 804eb25:	72 61                	jb     804eb88 <_IO_stdin_used+0x35c>
 804eb27:	74 65                	je     804eb8e <_IO_stdin_used+0x362>
 804eb29:	67 79 3a             	addr16 jns 804eb66 <_IO_stdin_used+0x33a>
 804eb2c:	20 42 69             	and    %al,0x69(%edx)
 804eb2f:	74 2d                	je     804eb5e <_IO_stdin_used+0x332>
 804eb31:	77 69                	ja     804eb9c <_IO_stdin_used+0x370>
 804eb33:	73 65                	jae    804eb9a <_IO_stdin_used+0x36e>
 804eb35:	20 4d 75             	and    %cl,0x75(%ebp)
 804eb38:	74 61                	je     804eb9b <_IO_stdin_used+0x36f>
 804eb3a:	74 69                	je     804eba5 <_IO_stdin_used+0x379>
 804eb3c:	6f                   	outsl  %ds:(%esi),(%dx)
 804eb3d:	6e                   	outsb  %ds:(%esi),(%dx)
 804eb3e:	00 00                	add    %al,(%eax)
 804eb40:	0a 20                	or     (%eax),%ah
 804eb42:	4d                   	dec    %ebp
 804eb43:	75 74                	jne    804ebb9 <_IO_stdin_used+0x38d>
 804eb45:	61                   	popa   
 804eb46:	74 69                	je     804ebb1 <_IO_stdin_used+0x385>
 804eb48:	6f                   	outsl  %ds:(%esi),(%dx)
 804eb49:	6e                   	outsb  %ds:(%esi),(%dx)
 804eb4a:	20 53 74             	and    %dl,0x74(%ebx)
 804eb4d:	72 61                	jb     804ebb0 <_IO_stdin_used+0x384>
 804eb4f:	74 65                	je     804ebb6 <_IO_stdin_used+0x38a>
 804eb51:	67 79 3a             	addr16 jns 804eb8e <_IO_stdin_used+0x362>
 804eb54:	20 50 6f             	and    %dl,0x6f(%eax)
 804eb57:	6c                   	insb   (%dx),%es:(%edi)
 804eb58:	79 6e                	jns    804ebc8 <_IO_stdin_used+0x39c>
 804eb5a:	6f                   	outsl  %ds:(%esi),(%dx)
 804eb5b:	6d                   	insl   (%dx),%es:(%edi)
 804eb5c:	69 61 6c 20 4d 75 74 	imul   $0x74754d20,0x6c(%ecx),%esp
 804eb63:	61                   	popa   
 804eb64:	74 69                	je     804ebcf <_IO_stdin_used+0x3a3>
 804eb66:	6f                   	outsl  %ds:(%esi),(%dx)
 804eb67:	6e                   	outsb  %ds:(%esi),(%dx)
 804eb68:	00 0a                	add    %cl,(%edx)
 804eb6a:	20 56 61             	and    %dl,0x61(%esi)
 804eb6d:	72 69                	jb     804ebd8 <_IO_stdin_used+0x3ac>
 804eb6f:	61                   	popa   
 804eb70:	62 6c 65 20          	bound  %ebp,0x20(%ebp)
 804eb74:	42                   	inc    %edx
 804eb75:	6f                   	outsl  %ds:(%esi),(%dx)
 804eb76:	75 6e                	jne    804ebe6 <_IO_stdin_used+0x3ba>
 804eb78:	64                   	fs
 804eb79:	61                   	popa   
 804eb7a:	72 69                	jb     804ebe5 <_IO_stdin_used+0x3b9>
 804eb7c:	65                   	gs
 804eb7d:	73 20                	jae    804eb9f <_IO_stdin_used+0x373>
 804eb7f:	3a 20                	cmp    (%eax),%ah
 804eb81:	00 20                	add    %ah,(%eax)
 804eb83:	52                   	push   %edx
 804eb84:	69 67 69 64 00 20 46 	imul   $0x46200064,0x69(%edi),%esp
 804eb8b:	6c                   	insb   (%dx),%es:(%edi)
 804eb8c:	65                   	gs
 804eb8d:	78 69                	js     804ebf8 <_IO_stdin_used+0x3cc>
 804eb8f:	62 6c 65 00          	bound  %ebp,0x0(%ebp)
 804eb93:	00 0a                	add    %cl,(%edx)
 804eb95:	20 50 6f             	and    %dl,0x6f(%eax)
 804eb98:	70 75                	jo     804ec0f <_IO_stdin_used+0x3e3>
 804eb9a:	6c                   	insb   (%dx),%es:(%edi)
 804eb9b:	61                   	popa   
 804eb9c:	74 69                	je     804ec07 <_IO_stdin_used+0x3db>
 804eb9e:	6f                   	outsl  %ds:(%esi),(%dx)
 804eb9f:	6e                   	outsb  %ds:(%esi),(%dx)
 804eba0:	20 73 69             	and    %dh,0x69(%ebx)
 804eba3:	7a 65                	jp     804ec0a <_IO_stdin_used+0x3de>
 804eba5:	20 20                	and    %ah,(%eax)
 804eba7:	20 20                	and    %ah,(%eax)
 804eba9:	20 20                	and    %ah,(%eax)
 804ebab:	20 20                	and    %ah,(%eax)
 804ebad:	20 20                	and    %ah,(%eax)
 804ebaf:	20 20                	and    %ah,(%eax)
 804ebb1:	3a 20                	cmp    (%eax),%ah
 804ebb3:	25 64 00 00 00       	and    $0x64,%eax
 804ebb8:	0a 20                	or     (%eax),%ah
 804ebba:	54                   	push   %esp
 804ebbb:	6f                   	outsl  %ds:(%esi),(%dx)
 804ebbc:	74 61                	je     804ec1f <_IO_stdin_used+0x3f3>
 804ebbe:	6c                   	insb   (%dx),%es:(%edi)
 804ebbf:	20 6e 6f             	and    %ch,0x6f(%esi)
 804ebc2:	2e 20 6f 66          	and    %ch,%cs:0x66(%edi)
 804ebc6:	20 67 65             	and    %ah,0x65(%edi)
 804ebc9:	6e                   	outsb  %ds:(%esi),(%dx)
 804ebca:	65                   	gs
 804ebcb:	72 61                	jb     804ec2e <_IO_stdin_used+0x402>
 804ebcd:	74 69                	je     804ec38 <_IO_stdin_used+0x40c>
 804ebcf:	6f                   	outsl  %ds:(%esi),(%dx)
 804ebd0:	6e                   	outsb  %ds:(%esi),(%dx)
 804ebd1:	73 20                	jae    804ebf3 <_IO_stdin_used+0x3c7>
 804ebd3:	20 20                	and    %ah,(%eax)
 804ebd5:	3a 20                	cmp    (%eax),%ah
 804ebd7:	25 64 00 00 00       	and    $0x64,%eax
 804ebdc:	0a 20                	or     (%eax),%ah
 804ebde:	43                   	inc    %ebx
 804ebdf:	72 6f                	jb     804ec50 <_IO_stdin_used+0x424>
 804ebe1:	73 73                	jae    804ec56 <_IO_stdin_used+0x42a>
 804ebe3:	20 6f 76             	and    %ch,0x76(%edi)
 804ebe6:	65                   	gs
 804ebe7:	72 20                	jb     804ec09 <_IO_stdin_used+0x3dd>
 804ebe9:	70 72                	jo     804ec5d <_IO_stdin_used+0x431>
 804ebeb:	6f                   	outsl  %ds:(%esi),(%dx)
 804ebec:	62 61 62             	bound  %esp,0x62(%ecx)
 804ebef:	69 6c 69 74 79 20 20 	imul   $0x20202079,0x74(%ecx,%ebp,2),%ebp
 804ebf6:	20 
 804ebf7:	20 20                	and    %ah,(%eax)
 804ebf9:	3a 20                	cmp    (%eax),%ah
 804ebfb:	25 36 2e 34 66       	and    $0x66342e36,%eax
 804ec00:	00 00                	add    %al,(%eax)
 804ec02:	00 00                	add    %al,(%eax)
 804ec04:	0a 20                	or     (%eax),%ah
 804ec06:	4d                   	dec    %ebp
 804ec07:	75 74                	jne    804ec7d <_IO_stdin_used+0x451>
 804ec09:	61                   	popa   
 804ec0a:	74 69                	je     804ec75 <_IO_stdin_used+0x449>
 804ec0c:	6f                   	outsl  %ds:(%esi),(%dx)
 804ec0d:	6e                   	outsb  %ds:(%esi),(%dx)
 804ec0e:	20 70 72             	and    %dh,0x72(%eax)
 804ec11:	6f                   	outsl  %ds:(%esi),(%dx)
 804ec12:	62 61 62             	bound  %esp,0x62(%ecx)
 804ec15:	69 6c 69 74 79 20 20 	imul   $0x20202079,0x74(%ecx,%ebp,2),%ebp
 804ec1c:	20 
 804ec1d:	20 20                	and    %ah,(%eax)
 804ec1f:	20 20                	and    %ah,(%eax)
 804ec21:	3a 20                	cmp    (%eax),%ah
 804ec23:	25 36 2e 34 66       	and    $0x66342e36,%eax
 804ec28:	00 0a                	add    %cl,(%edx)
 804ec2a:	20 53 68             	and    %dl,0x68(%ebx)
 804ec2d:	61                   	popa   
 804ec2e:	72 69                	jb     804ec99 <_IO_stdin_used+0x46d>
 804ec30:	6e                   	outsb  %ds:(%esi),(%dx)
 804ec31:	67 20 74 6f          	addr16 and %dh,0x6f(%si)
 804ec35:	20 62 65             	and    %ah,0x65(%edx)
 804ec38:	20 64 6f 6e          	and    %ah,0x6e(%edi,%ebp,2)
 804ec3c:	65 20 3a             	and    %bh,%gs:(%edx)
 804ec3f:	00 0a                	add    %cl,(%edx)
 804ec41:	20 53 69             	and    %dl,0x69(%ebx)
 804ec44:	67 6d                	addr16 insl (%dx),%es:(%di)
 804ec46:	61                   	popa   
 804ec47:	2d 73 68 61 72       	sub    $0x72616873,%eax
 804ec4c:	65 20 76 61          	and    %dh,%gs:0x61(%esi)
 804ec50:	6c                   	insb   (%dx),%es:(%edi)
 804ec51:	75 65                	jne    804ecb8 <_IO_stdin_used+0x48c>
 804ec53:	20 20                	and    %ah,(%eax)
 804ec55:	20 20                	and    %ah,(%eax)
 804ec57:	20 20                	and    %ah,(%eax)
 804ec59:	20 20                	and    %ah,(%eax)
 804ec5b:	20 20                	and    %ah,(%eax)
 804ec5d:	3a 20                	cmp    (%eax),%ah
 804ec5f:	25 36 2e 34 66       	and    $0x66342e36,%eax
 804ec64:	00 00                	add    %al,(%eax)
 804ec66:	00 00                	add    %al,(%eax)
 804ec68:	0a 20                	or     (%eax),%ah
 804ec6a:	53                   	push   %ebx
 804ec6b:	74 72                	je     804ecdf <_IO_stdin_used+0x4b3>
 804ec6d:	69 6e 67 20 6c 65 6e 	imul   $0x6e656c20,0x67(%esi),%ebp
 804ec74:	67 74 68             	addr16 je 804ecdf <_IO_stdin_used+0x4b3>
 804ec77:	20 20                	and    %ah,(%eax)
 804ec79:	20 20                	and    %ah,(%eax)
 804ec7b:	20 20                	and    %ah,(%eax)
 804ec7d:	20 20                	and    %ah,(%eax)
 804ec7f:	20 20                	and    %ah,(%eax)
 804ec81:	20 20                	and    %ah,(%eax)
 804ec83:	20 20                	and    %ah,(%eax)
 804ec85:	3a 20                	cmp    (%eax),%ah
 804ec87:	25 64 00 00 00       	and    $0x64,%eax
 804ec8c:	0a 20                	or     (%eax),%ah
 804ec8e:	4e                   	dec    %esi
 804ec8f:	75 6d                	jne    804ecfe <_IO_stdin_used+0x4d2>
 804ec91:	62 65 72             	bound  %esp,0x72(%ebp)
 804ec94:	20 6f 66             	and    %ch,0x66(%edi)
 804ec97:	20 76 61             	and    %dh,0x61(%esi)
 804ec9a:	72 69                	jb     804ed05 <_IO_stdin_used+0x4d9>
 804ec9c:	61                   	popa   
 804ec9d:	62 6c 65 73          	bound  %ebp,0x73(%ebp)
 804eca1:	20 20                	and    %ah,(%eax)
 804eca3:	20 20                	and    %ah,(%eax)
 804eca5:	20 20                	and    %ah,(%eax)
 804eca7:	20 20                	and    %ah,(%eax)
 804eca9:	3a 20                	cmp    (%eax),%ah
 804ecab:	25 64 00 00 00       	and    $0x64,%eax
 804ecb0:	0a 20                	or     (%eax),%ah
 804ecb2:	54                   	push   %esp
 804ecb3:	6f                   	outsl  %ds:(%esi),(%dx)
 804ecb4:	74 61                	je     804ed17 <_IO_stdin_used+0x4eb>
 804ecb6:	6c                   	insb   (%dx),%es:(%edi)
 804ecb7:	20 52 75             	and    %dl,0x75(%edx)
 804ecba:	6e                   	outsb  %ds:(%esi),(%dx)
 804ecbb:	73 20                	jae    804ecdd <_IO_stdin_used+0x4b1>
 804ecbd:	74 6f                	je     804ed2e <_IO_stdin_used+0x502>
 804ecbf:	20 62 65             	and    %ah,0x65(%edx)
 804ecc2:	20 70 65             	and    %dh,0x65(%eax)
 804ecc5:	72 66                	jb     804ed2d <_IO_stdin_used+0x501>
 804ecc7:	6f                   	outsl  %ds:(%esi),(%dx)
 804ecc8:	72 6d                	jb     804ed37 <_IO_stdin_used+0x50b>
 804ecca:	65 64 20 3a          	and    %bh,%fs:%gs:(%edx)
 804ecce:	20 25 64 00 00 00    	and    %ah,0x64
 804ecd4:	0a 20                	or     (%eax),%ah
 804ecd6:	45                   	inc    %ebp
 804ecd7:	78 70                	js     804ed49 <_IO_stdin_used+0x51d>
 804ecd9:	6f                   	outsl  %ds:(%esi),(%dx)
 804ecda:	6e                   	outsb  %ds:(%esi),(%dx)
 804ecdb:	65 6e                	outsb  %gs:(%esi),(%dx)
 804ecdd:	74 20                	je     804ecff <_IO_stdin_used+0x4d3>
 804ecdf:	28 6e 20             	sub    %ch,0x20(%esi)
 804ece2:	66 6f                	outsw  %ds:(%esi),(%dx)
 804ece4:	72 20                	jb     804ed06 <_IO_stdin_used+0x4da>
 804ece6:	53                   	push   %ebx
 804ece7:	42                   	inc    %edx
 804ece8:	58                   	pop    %eax
 804ece9:	29 20                	sub    %esp,(%eax)
 804eceb:	20 20                	and    %ah,(%eax)
 804eced:	20 20                	and    %ah,(%eax)
 804ecef:	20 20                	and    %ah,(%eax)
 804ecf1:	3a 20                	cmp    (%eax),%ah
 804ecf3:	25 37 2e 32 66       	and    $0x66322e37,%eax
 804ecf8:	00 00                	add    %al,(%eax)
 804ecfa:	00 00                	add    %al,(%eax)
 804ecfc:	0a 20                	or     (%eax),%ah
 804ecfe:	45                   	inc    %ebp
 804ecff:	78 70                	js     804ed71 <_IO_stdin_used+0x545>
 804ed01:	6f                   	outsl  %ds:(%esi),(%dx)
 804ed02:	6e                   	outsb  %ds:(%esi),(%dx)
 804ed03:	65 6e                	outsb  %gs:(%esi),(%dx)
 804ed05:	74 20                	je     804ed27 <_IO_stdin_used+0x4fb>
 804ed07:	28 6e 20             	sub    %ch,0x20(%esi)
 804ed0a:	66 6f                	outsw  %ds:(%esi),(%dx)
 804ed0c:	72 20                	jb     804ed2e <_IO_stdin_used+0x502>
 804ed0e:	4d                   	dec    %ebp
 804ed0f:	75 74                	jne    804ed85 <_IO_stdin_used+0x559>
 804ed11:	61                   	popa   
 804ed12:	74 69                	je     804ed7d <_IO_stdin_used+0x551>
 804ed14:	6f                   	outsl  %ds:(%esi),(%dx)
 804ed15:	6e                   	outsb  %ds:(%esi),(%dx)
 804ed16:	29 20                	sub    %esp,(%eax)
 804ed18:	20 3a                	and    %bh,(%edx)
 804ed1a:	20 25 37 2e 32 66    	and    %ah,0x66322e37
 804ed20:	00 00                	add    %al,(%eax)
 804ed22:	00 00                	add    %al,(%eax)
 804ed24:	0a 20                	or     (%eax),%ah
 804ed26:	4c                   	dec    %esp
 804ed27:	6f                   	outsl  %ds:(%esi),(%dx)
 804ed28:	77 65                	ja     804ed8f <_IO_stdin_used+0x563>
 804ed2a:	72 20                	jb     804ed4c <_IO_stdin_used+0x520>
 804ed2c:	61                   	popa   
 804ed2d:	6e                   	outsb  %ds:(%esi),(%dx)
 804ed2e:	64 20 55 70          	and    %dl,%fs:0x70(%ebp)
 804ed32:	70 65                	jo     804ed99 <_IO_stdin_used+0x56d>
 804ed34:	72 20                	jb     804ed56 <_IO_stdin_used+0x52a>
 804ed36:	62 6f 75             	bound  %ebp,0x75(%edi)
 804ed39:	6e                   	outsb  %ds:(%esi),(%dx)
 804ed3a:	64                   	fs
 804ed3b:	73 20                	jae    804ed5d <_IO_stdin_used+0x531>
 804ed3d:	20 20                	and    %ah,(%eax)
 804ed3f:	20 20                	and    %ah,(%eax)
 804ed41:	3a 00                	cmp    (%eax),%al
 804ed43:	00 0a                	add    %cl,(%edx)
 804ed45:	20 20                	and    %ah,(%eax)
 804ed47:	20 25 38 2e 34 66    	and    %ah,0x66342e38
 804ed4d:	20 20                	and    %ah,(%eax)
 804ed4f:	20 3c 3d 20 20 20 78 	and    %bh,0x78202020(,%edi,1)
 804ed56:	25 64 20 20 20       	and    $0x20202064,%eax
 804ed5b:	3c 3d                	cmp    $0x3d,%al
 804ed5d:	20 25 38 2e 34 66    	and    %ah,0x66342e38
 804ed63:	00 0a                	add    %cl,(%edx)
 804ed65:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804ed6a:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804ed6f:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804ed74:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804ed79:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804ed7e:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804ed83:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804ed88:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804ed8d:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804ed92:	3d 3d 3d 3d 0a       	cmp    $0xa3d3d3d,%eax
 804ed97:	00 63 68             	add    %ah,0x68(%ebx)
 804ed9a:	72 6f                	jb     804ee0b <_IO_stdin_used+0x5df>
 804ed9c:	6d                   	insl   (%dx),%es:(%edi)
 804ed9d:	20 69 6e             	and    %ch,0x6e(%ecx)
 804eda0:	20 77 72             	and    %dh,0x72(%edi)
 804eda3:	69 74 65 63 68 72 6f 	imul   $0x6d6f7268,0x63(%ebp),%esi
 804edaa:	6d 
 804edab:	00 4c 69 66          	add    %cl,0x66(%ecx,%ebp,2)
 804edaf:	65 63 79 63          	arpl   %di,%gs:0x63(%ecx)
 804edb3:	6c                   	insb   (%dx),%es:(%edi)
 804edb4:	65 20 00             	and    %al,%gs:(%eax)
 804edb7:	20 00                	and    %al,(%eax)
 804edb9:	0a 0a                	or     (%edx),%cl
 804edbb:	00 31                	add    %dh,(%ecx)
 804edbd:	31 00                	xor    %eax,(%eax)
 804edbf:	31 30                	xor    %esi,(%eax)
 804edc1:	00 30                	add    %dh,(%eax)
 804edc3:	31 00                	xor    %eax,(%eax)
 804edc5:	30 30                	xor    %dh,(%eax)
 804edc7:	00 70 6f             	add    %dh,0x6f(%eax)
 804edca:	6f                   	outsl  %ds:(%esi),(%dx)
 804edcb:	6c                   	insb   (%dx),%es:(%edi)
 804edcc:	20 63 68             	and    %ah,0x68(%ebx)
 804edcf:	72 6f                	jb     804ee40 <_IO_stdin_used+0x614>
 804edd1:	6d                   	insl   (%dx),%es:(%edi)
 804edd2:	6f                   	outsl  %ds:(%esi),(%dx)
 804edd3:	73 6f                	jae    804ee44 <_IO_stdin_used+0x618>
 804edd5:	6d                   	insl   (%dx),%es:(%edi)
 804edd6:	65                   	gs
 804edd7:	73 00                	jae    804edd9 <_IO_stdin_used+0x5ad>
 804edd9:	62 65 73             	bound  %esp,0x73(%ebp)
 804eddc:	74 5f                	je     804ee3d <_IO_stdin_used+0x611>
 804edde:	65                   	gs
 804eddf:	76 65                	jbe    804ee46 <_IO_stdin_used+0x61a>
 804ede1:	72 20                	jb     804ee03 <_IO_stdin_used+0x5d7>
 804ede3:	63 68 72             	arpl   %bp,0x72(%eax)
 804ede6:	6f                   	outsl  %ds:(%esi),(%dx)
 804ede7:	6d                   	insl   (%dx),%es:(%edi)
 804ede8:	6f                   	outsl  %ds:(%esi),(%dx)
 804ede9:	73 6f                	jae    804ee5a <_IO_stdin_used+0x62e>
 804edeb:	6d                   	insl   (%dx),%es:(%edi)
 804edec:	65                   	gs
 804eded:	73 00                	jae    804edef <_IO_stdin_used+0x5c3>
 804edef:	70 6f                	jo     804ee60 <_IO_stdin_used+0x634>
 804edf1:	6f                   	outsl  %ds:(%esi),(%dx)
 804edf2:	6c                   	insb   (%dx),%es:(%edi)
 804edf3:	20 6c 61 73          	and    %ch,0x73(%ecx)
 804edf7:	74 62                	je     804ee5b <_IO_stdin_used+0x62f>
 804edf9:	69 74 00 70 61 72 65 	imul   $0x6e657261,0x70(%eax,%eax,1),%esi
 804ee00:	6e 
 804ee01:	74 31                	je     804ee34 <_IO_stdin_used+0x608>
 804ee03:	20 69 6e             	and    %ch,0x6e(%ecx)
 804ee06:	20 62 69             	and    %ah,0x69(%edx)
 804ee09:	6e                   	outsb  %ds:(%esi),(%dx)
 804ee0a:	61                   	popa   
 804ee0b:	72 79                	jb     804ee86 <_IO_stdin_used+0x65a>
 804ee0d:	5f                   	pop    %edi
 804ee0e:	78 6f                	js     804ee7f <_IO_stdin_used+0x653>
 804ee10:	76 65                	jbe    804ee77 <_IO_stdin_used+0x64b>
 804ee12:	72 00                	jb     804ee14 <_IO_stdin_used+0x5e8>
 804ee14:	70 61                	jo     804ee77 <_IO_stdin_used+0x64b>
 804ee16:	72 65                	jb     804ee7d <_IO_stdin_used+0x651>
 804ee18:	6e                   	outsb  %ds:(%esi),(%dx)
 804ee19:	74 32                	je     804ee4d <_IO_stdin_used+0x621>
 804ee1b:	20 69 6e             	and    %ch,0x6e(%ecx)
 804ee1e:	20 62 69             	and    %ah,0x69(%edx)
 804ee21:	6e                   	outsb  %ds:(%esi),(%dx)
 804ee22:	61                   	popa   
 804ee23:	72 79                	jb     804ee9e <_IO_stdin_used+0x672>
 804ee25:	5f                   	pop    %edi
 804ee26:	78 6f                	js     804ee97 <_IO_stdin_used+0x66b>
 804ee28:	76 65                	jbe    804ee8f <_IO_stdin_used+0x663>
 804ee2a:	72 00                	jb     804ee2c <_IO_stdin_used+0x600>
 804ee2c:	63 68 69             	arpl   %bp,0x69(%eax)
 804ee2f:	6c                   	insb   (%dx),%es:(%edi)
 804ee30:	64 31 20             	xor    %esp,%fs:(%eax)
 804ee33:	69 6e 20 62 69 6e 61 	imul   $0x616e6962,0x20(%esi),%ebp
 804ee3a:	72 79                	jb     804eeb5 <_IO_stdin_used+0x689>
 804ee3c:	5f                   	pop    %edi
 804ee3d:	78 6f                	js     804eeae <_IO_stdin_used+0x682>
 804ee3f:	76 65                	jbe    804eea6 <_IO_stdin_used+0x67a>
 804ee41:	72 00                	jb     804ee43 <_IO_stdin_used+0x617>
 804ee43:	63 68 69             	arpl   %bp,0x69(%eax)
 804ee46:	6c                   	insb   (%dx),%es:(%edi)
 804ee47:	64 32 20             	xor    %fs:(%eax),%ah
 804ee4a:	69 6e 20 62 69 6e 61 	imul   $0x616e6962,0x20(%esi),%ebp
 804ee51:	72 79                	jb     804eecc <_IO_stdin_used+0x6a0>
 804ee53:	5f                   	pop    %edi
 804ee54:	78 6f                	js     804eec5 <_IO_stdin_used+0x699>
 804ee56:	76 65                	jbe    804eebd <_IO_stdin_used+0x691>
 804ee58:	72 00                	jb     804ee5a <_IO_stdin_used+0x62e>
 804ee5a:	0a 20                	or     (%eax),%ah
 804ee5c:	57                   	push   %edi
 804ee5d:	61                   	popa   
 804ee5e:	72 6e                	jb     804eece <_IO_stdin_used+0x6a2>
 804ee60:	69 6e 67 20 21 21 20 	imul   $0x20212120,0x67(%esi),%ebp
 804ee67:	45                   	inc    %ebp
 804ee68:	52                   	push   %edx
 804ee69:	52                   	push   %edx
 804ee6a:	4f                   	dec    %edi
 804ee6b:	52                   	push   %edx
 804ee6c:	31 00                	xor    %eax,(%eax)
 804ee6e:	20 74 6f 75          	and    %dh,0x75(%edi,%ebp,2)
 804ee72:	72 70                	jb     804eee4 <_IO_stdin_used+0x6b8>
 804ee74:	6f                   	outsl  %ds:(%esi),(%dx)
 804ee75:	73 20                	jae    804ee97 <_IO_stdin_used+0x66b>
 804ee77:	3d 20 25 64 00       	cmp    $0x642520,%eax
 804ee7c:	20 77 69             	and    %dh,0x69(%edi)
 804ee7f:	6e                   	outsb  %ds:(%esi),(%dx)
 804ee80:	6e                   	outsb  %ds:(%esi),(%dx)
 804ee81:	65                   	gs
 804ee82:	72 20                	jb     804eea4 <_IO_stdin_used+0x678>
 804ee84:	3d 20 25 64 00       	cmp    $0x642520,%eax
 804ee89:	0a 20                	or     (%eax),%ah
 804ee8b:	57                   	push   %edi
 804ee8c:	61                   	popa   
 804ee8d:	72 6e                	jb     804eefd <_IO_stdin_used+0x6d1>
 804ee8f:	69 6e 67 20 21 21 20 	imul   $0x20212120,0x67(%esi),%ebp
 804ee96:	45                   	inc    %ebp
 804ee97:	52                   	push   %edx
 804ee98:	52                   	push   %edx
 804ee99:	4f                   	dec    %edi
 804ee9a:	52                   	push   %edx
 804ee9b:	32 00                	xor    (%eax),%al
 804ee9d:	20 63 68             	and    %ah,0x68(%ebx)
 804eea0:	69 6c 64 20 69 6e 20 	imul   $0x62206e69,0x20(%esp),%ebp
 804eea7:	62 
 804eea8:	69 6e 6d 75 74 61 74 	imul   $0x74617475,0x6d(%esi),%ebp
 804eeaf:	69 6f 6e 00 69 6e 64 	imul   $0x646e6900,0x6e(%edi),%ebp
 804eeb6:	69 76 20 69 6e 20 6d 	imul   $0x6d206e69,0x20(%esi),%esi
 804eebd:	75 74                	jne    804ef33 <_IO_stdin_used+0x707>
 804eebf:	61                   	popa   
 804eec0:	74 69                	je     804ef2b <_IO_stdin_used+0x6ff>
 804eec2:	6f                   	outsl  %ds:(%esi),(%dx)
 804eec3:	6e                   	outsb  %ds:(%esi),(%dx)
 804eec4:	00 63 31             	add    %ah,0x31(%ebx)
 804eec7:	20 69 6e             	and    %ch,0x6e(%ecx)
 804eeca:	20 63 72             	and    %ah,0x72(%ebx)
 804eecd:	65                   	gs
 804eece:	61                   	popa   
 804eecf:	74 65                	je     804ef36 <_IO_stdin_used+0x70a>
 804eed1:	5f                   	pop    %edi
 804eed2:	63 68 69             	arpl   %bp,0x69(%eax)
 804eed5:	6c                   	insb   (%dx),%es:(%edi)
 804eed6:	64                   	fs
 804eed7:	72 65                	jb     804ef3e <_IO_stdin_used+0x712>
 804eed9:	6e                   	outsb  %ds:(%esi),(%dx)
 804eeda:	00 63 32             	add    %ah,0x32(%ebx)
 804eedd:	20 69 6e             	and    %ch,0x6e(%ecx)
 804eee0:	20 63 72             	and    %ah,0x72(%ebx)
 804eee3:	65                   	gs
 804eee4:	61                   	popa   
 804eee5:	74 65                	je     804ef4c <_IO_stdin_used+0x720>
 804eee7:	5f                   	pop    %edi
 804eee8:	63 68 69             	arpl   %bp,0x69(%eax)
 804eeeb:	6c                   	insb   (%dx),%es:(%edi)
 804eeec:	64                   	fs
 804eeed:	72 65                	jb     804ef54 <_IO_stdin_used+0x728>
 804eeef:	6e                   	outsb  %ds:(%esi),(%dx)
 804eef0:	00 72 61             	add    %dh,0x61(%edx)
 804eef3:	6e                   	outsb  %ds:(%esi),(%dx)
 804eef4:	64                   	fs
 804eef5:	5f                   	pop    %edi
 804eef6:	76 61                	jbe    804ef59 <_IO_stdin_used+0x72d>
 804eef8:	72 20                	jb     804ef1a <_IO_stdin_used+0x6ee>
 804eefa:	69 6e 20 63 72 65 61 	imul   $0x61657263,0x20(%esi),%ebp
 804ef01:	74 65                	je     804ef68 <_IO_stdin_used+0x73c>
 804ef03:	5f                   	pop    %edi
 804ef04:	63 68 69             	arpl   %bp,0x69(%eax)
 804ef07:	6c                   	insb   (%dx),%es:(%edi)
 804ef08:	64                   	fs
 804ef09:	72 65                	jb     804ef70 <_IO_stdin_used+0x744>
 804ef0b:	6e                   	outsb  %ds:(%esi),(%dx)
 804ef0c:	00 6f 6c             	add    %ch,0x6c(%edi)
 804ef0f:	64                   	fs
 804ef10:	70 6f                	jo     804ef81 <_IO_stdin_used+0x755>
 804ef12:	70 20                	jo     804ef34 <_IO_stdin_used+0x708>
 804ef14:	69 6e 20 61 6c 6c 6f 	imul   $0x6f6c6c61,0x20(%esi),%ebp
 804ef1b:	63 6e 65             	arpl   %bp,0x65(%esi)
 804ef1e:	77 6f                	ja     804ef8f <_IO_stdin_used+0x763>
 804ef20:	6c                   	insb   (%dx),%es:(%edi)
 804ef21:	64 28 29             	sub    %ch,%fs:(%ecx)
 804ef24:	00 6e 65             	add    %ch,0x65(%esi)
 804ef27:	77 70                	ja     804ef99 <_IO_stdin_used+0x76d>
 804ef29:	6f                   	outsl  %ds:(%esi),(%dx)
 804ef2a:	70 20                	jo     804ef4c <_IO_stdin_used+0x720>
 804ef2c:	69 6e 20 61 6c 6c 6f 	imul   $0x6f6c6c61,0x20(%esi),%ebp
 804ef33:	63 6e 65             	arpl   %bp,0x65(%esi)
 804ef36:	77 6f                	ja     804efa7 <_IO_stdin_used+0x77b>
 804ef38:	6c                   	insb   (%dx),%es:(%edi)
 804ef39:	64 28 29             	sub    %ch,%fs:(%ecx)
 804ef3c:	00 6f 6c             	add    %ch,0x6c(%edi)
 804ef3f:	64                   	fs
 804ef40:	70 6f                	jo     804efb1 <_IO_stdin_used+0x785>
 804ef42:	70 20                	jo     804ef64 <_IO_stdin_used+0x738>
 804ef44:	63 68 72             	arpl   %bp,0x72(%eax)
 804ef47:	6f                   	outsl  %ds:(%esi),(%dx)
 804ef48:	6d                   	insl   (%dx),%es:(%edi)
 804ef49:	6f                   	outsl  %ds:(%esi),(%dx)
 804ef4a:	73 6f                	jae    804efbb <_IO_stdin_used+0x78f>
 804ef4c:	6d                   	insl   (%dx),%es:(%edi)
 804ef4d:	65                   	gs
 804ef4e:	73 00                	jae    804ef50 <_IO_stdin_used+0x724>
 804ef50:	6e                   	outsb  %ds:(%esi),(%dx)
 804ef51:	65                   	gs
 804ef52:	77 70                	ja     804efc4 <_IO_stdin_used+0x798>
 804ef54:	6f                   	outsl  %ds:(%esi),(%dx)
 804ef55:	70 20                	jo     804ef77 <_IO_stdin_used+0x74b>
 804ef57:	63 68 72             	arpl   %bp,0x72(%eax)
 804ef5a:	6f                   	outsl  %ds:(%esi),(%dx)
 804ef5b:	6d                   	insl   (%dx),%es:(%edi)
 804ef5c:	6f                   	outsl  %ds:(%esi),(%dx)
 804ef5d:	73 6f                	jae    804efce <_IO_stdin_used+0x7a2>
 804ef5f:	6d                   	insl   (%dx),%es:(%edi)
 804ef60:	65                   	gs
 804ef61:	73 00                	jae    804ef63 <_IO_stdin_used+0x737>
 804ef63:	6f                   	outsl  %ds:(%esi),(%dx)
 804ef64:	6c                   	insb   (%dx),%es:(%edi)
 804ef65:	64                   	fs
 804ef66:	70 6f                	jo     804efd7 <_IO_stdin_used+0x7ab>
 804ef68:	70 20                	jo     804ef8a <_IO_stdin_used+0x75e>
 804ef6a:	6c                   	insb   (%dx),%es:(%edi)
 804ef6b:	61                   	popa   
 804ef6c:	73 74                	jae    804efe2 <_IO_stdin_used+0x7b6>
 804ef6e:	62 69 74             	bound  %ebp,0x74(%ecx)
 804ef71:	00 6e 65             	add    %ch,0x65(%esi)
 804ef74:	77 70                	ja     804efe6 <_IO_stdin_used+0x7ba>
 804ef76:	6f                   	outsl  %ds:(%esi),(%dx)
 804ef77:	70 20                	jo     804ef99 <_IO_stdin_used+0x76d>
 804ef79:	6c                   	insb   (%dx),%es:(%edi)
 804ef7a:	61                   	popa   
 804ef7b:	73 74                	jae    804eff1 <_IO_stdin_used+0x7c5>
 804ef7d:	62 69 74             	bound  %ebp,0x74(%ecx)
 804ef80:	00 62 65             	add    %ah,0x65(%edx)
 804ef83:	73 74                	jae    804eff9 <_IO_stdin_used+0x7cd>
 804ef85:	5f                   	pop    %edi
 804ef86:	65                   	gs
 804ef87:	76 65                	jbe    804efee <_IO_stdin_used+0x7c2>
 804ef89:	72 20                	jb     804efab <_IO_stdin_used+0x77f>
 804ef8b:	6c                   	insb   (%dx),%es:(%edi)
 804ef8c:	61                   	popa   
 804ef8d:	73 74                	jae    804f003 <_IO_stdin_used+0x7d7>
 804ef8f:	62 69 74             	bound  %ebp,0x74(%ecx)
 804ef92:	00 49 6e             	add    %cl,0x6e(%ecx)
 804ef95:	20 74 68 72          	and    %dh,0x72(%eax,%ebp,2)
 804ef99:	65                   	gs
 804ef9a:	61                   	popa   
 804ef9b:	64 20 00             	and    %al,%fs:(%eax)
 804ef9e:	00 00                	add    %al,(%eax)
 804efa0:	0a 3d 3d 3d 3d 3d    	or     0x3d3d3d3d,%bh
 804efa6:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804efab:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804efb0:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804efb5:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804efba:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804efbf:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804efc4:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804efc9:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804efce:	3d 3d 3d 3d 3d       	cmp    $0x3d3d3d3d,%eax
 804efd3:	3d 00 00 00 00       	cmp    $0x0,%eax
 804efd8:	0a 4d 61             	or     0x61(%ebp),%cl
 804efdb:	78 20                	js     804effd <_IO_stdin_used+0x7d1>
 804efdd:	3d 20 25 38 2e       	cmp    $0x2e382520,%eax
 804efe2:	35 66 20 20 4d       	xor    $0x4d202066,%eax
 804efe7:	69 6e 20 3d 20 25 38 	imul   $0x3825203d,0x20(%esi),%ebp
 804efee:	2e                   	cs
 804efef:	35 66 20 20 20       	xor    $0x20202066,%eax
 804eff4:	41                   	inc    %ecx
 804eff5:	76 67                	jbe    804f05e <_IO_stdin_used+0x832>
 804eff7:	20 3d 20 25 38 2e    	and    %bh,0x2e382520
 804effd:	35 66 00 0a 4e       	xor    $0x4e0a0066,%eax
 804f002:	6f                   	outsl  %ds:(%esi),(%dx)
 804f003:	2e 20 6f 66          	and    %ch,%cs:0x66(%edi)
 804f007:	20 6d 75             	and    %ch,0x75(%ebp)
 804f00a:	74 61                	je     804f06d <_IO_stdin_used+0x841>
 804f00c:	74 69                	je     804f077 <_IO_stdin_used+0x84b>
 804f00e:	6f                   	outsl  %ds:(%esi),(%dx)
 804f00f:	6e                   	outsb  %ds:(%esi),(%dx)
 804f010:	73 20                	jae    804f032 <_IO_stdin_used+0x806>
 804f012:	3d 20 25 64 20       	cmp    $0x20642520,%eax
 804f017:	3b 20                	cmp    (%eax),%esp
 804f019:	20 4e 6f             	and    %cl,0x6f(%esi)
 804f01c:	2e 20 6f 66          	and    %ch,%cs:0x66(%edi)
 804f020:	20 78 2d             	and    %bh,0x2d(%eax)
 804f023:	6f                   	outsl  %ds:(%esi),(%dx)
 804f024:	76 65                	jbe    804f08b <_IO_stdin_used+0x85f>
 804f026:	72 73                	jb     804f09b <_IO_stdin_used+0x86f>
 804f028:	20 3d 20 25 64 00    	and    %bh,0x642520
 804f02e:	0a 4e 75             	or     0x75(%esi),%cl
 804f031:	6d                   	insl   (%dx),%es:(%edi)
 804f032:	62 65 72             	bound  %esp,0x72(%ebp)
 804f035:	20 6f 66             	and    %ch,0x66(%edi)
 804f038:	20 4c 69 66          	and    %cl,0x66(%ecx,%ebp,2)
 804f03c:	65 63 79 6c          	arpl   %di,%gs:0x6c(%ecx)
 804f040:	65                   	gs
 804f041:	73 20                	jae    804f063 <_IO_stdin_used+0x837>
 804f043:	25 64 20 0a 00       	and    $0xa2064,%eax
 804f048:	0a 53 74             	or     0x74(%ebx),%dl
 804f04b:	72 69                	jb     804f0b6 <_IO_stdin_used+0x88a>
 804f04d:	6e                   	outsb  %ds:(%esi),(%dx)
 804f04e:	67 20 3d             	addr16 and %bh,(%di)
 804f051:	00 00                	add    %al,(%eax)
 804f053:	00 0a                	add    %cl,(%edx)
 804f055:	20 42 65             	and    %al,0x65(%edx)
 804f058:	73 74                	jae    804f0ce <_IO_stdin_used+0x8a2>
 804f05a:	20 65 76             	and    %ah,0x76(%ebp)
 804f05d:	65                   	gs
 804f05e:	72 20                	jb     804f080 <_IO_stdin_used+0x854>
 804f060:	66 69 74 6e 65 73 73 	imul   $0x7373,0x65(%esi,%ebp,2),%si
 804f067:	20 3d 20 25 66 20    	and    %bh,0x20662520
 804f06d:	66                   	data16
 804f06e:	72 6f                	jb     804f0df <_IO_stdin_used+0x8b3>
 804f070:	6d                   	insl   (%dx),%es:(%edi)
 804f071:	20 67 65             	and    %ah,0x65(%edi)
 804f074:	6e                   	outsb  %ds:(%esi),(%dx)
 804f075:	65                   	gs
 804f076:	72 61                	jb     804f0d9 <_IO_stdin_used+0x8ad>
 804f078:	74 69                	je     804f0e3 <_IO_stdin_used+0x8b7>
 804f07a:	6f                   	outsl  %ds:(%esi),(%dx)
 804f07b:	6e                   	outsb  %ds:(%esi),(%dx)
 804f07c:	20 3d 20 25 64 00    	and    %bh,0x642520
 804f082:	0a 20                	or     (%eax),%ah
 804f084:	42                   	inc    %edx
 804f085:	65                   	gs
 804f086:	73 74                	jae    804f0fc <_IO_stdin_used+0x8d0>
 804f088:	20 69 6e             	and    %ch,0x6e(%ecx)
 804f08b:	20 65 61             	and    %ah,0x61(%ebp)
 804f08e:	63 68 20             	arpl   %bp,0x20(%eax)
 804f091:	67 65 6e             	addr16 outsb %gs:(%si),(%dx)
 804f094:	20 3d 20 25 64 20    	and    %bh,0x20642520
 804f09a:	00 20                	add    %ah,(%eax)
 804f09c:	25 66 20 00 0a       	and    $0xa002066,%eax
 804f0a1:	00 00                	add    %al,(%eax)
 804f0a3:	00 0a                	add    %cl,(%edx)
 804f0a5:	20 52 65             	and    %dl,0x65(%edx)
 804f0a8:	61                   	popa   
 804f0a9:	64 69 6e 67 20 64 61 	imul   $0x74616420,%fs:0x67(%esi),%ebp
 804f0b0:	74 
 804f0b1:	61                   	popa   
 804f0b2:	20 66 72             	and    %ah,0x72(%esi)
 804f0b5:	6f                   	outsl  %ds:(%esi),(%dx)
 804f0b6:	6d                   	insl   (%dx),%es:(%edi)
 804f0b7:	20 66 69             	and    %ah,0x69(%esi)
 804f0ba:	6c                   	insb   (%dx),%es:(%edi)
 804f0bb:	65 20 2e             	and    %ch,%gs:(%esi)
 804f0be:	2e 2e 2e 2e 2e 2e 2e 	add    %al,%cs:(%eax)
 804f0c5:	2e 2e 2e 2e 00 00 
 804f0cb:	00 0a                	add    %cl,(%edx)
 804f0cd:	48                   	dec    %eax
 804f0ce:	6f                   	outsl  %ds:(%esi),(%dx)
 804f0cf:	77 20                	ja     804f0f1 <_IO_stdin_used+0x8c5>
 804f0d1:	6d                   	insl   (%dx),%es:(%edi)
 804f0d2:	61                   	popa   
 804f0d3:	6e                   	outsb  %ds:(%esi),(%dx)
 804f0d4:	79 20                	jns    804f0f6 <_IO_stdin_used+0x8ca>
 804f0d6:	67 65 6e             	addr16 outsb %gs:(%si),(%dx)
 804f0d9:	65                   	gs
 804f0da:	72 61                	jb     804f13d <_IO_stdin_used+0x911>
 804f0dc:	74 69                	je     804f147 <_IO_stdin_used+0x91b>
 804f0de:	6f                   	outsl  %ds:(%esi),(%dx)
 804f0df:	6e                   	outsb  %ds:(%esi),(%dx)
 804f0e0:	73 20                	jae    804f102 <_IO_stdin_used+0x8d6>
 804f0e2:	3f                   	aas    
 804f0e3:	20 2d 2d 2d 2d 2d    	and    %ch,0x2d2d2d2d
 804f0e9:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
 804f0ee:	2d 2d 2d 20 3a       	sub    $0x3a202d2d,%eax
 804f0f3:	20 00                	and    %al,(%eax)
 804f0f5:	25 64 00 0a 50       	and    $0x500a0064,%eax
 804f0fa:	6f                   	outsl  %ds:(%esi),(%dx)
 804f0fb:	70 75                	jo     804f172 <_IO_stdin_used+0x946>
 804f0fd:	6c                   	insb   (%dx),%es:(%edi)
 804f0fe:	61                   	popa   
 804f0ff:	74 69                	je     804f16a <_IO_stdin_used+0x93e>
 804f101:	6f                   	outsl  %ds:(%esi),(%dx)
 804f102:	6e                   	outsb  %ds:(%esi),(%dx)
 804f103:	20 53 69             	and    %dl,0x69(%ebx)
 804f106:	7a 65                	jp     804f16d <_IO_stdin_used+0x941>
 804f108:	20 3f                	and    %bh,(%edi)
 804f10a:	20 2d 2d 2d 2d 2d    	and    %ch,0x2d2d2d2d
 804f110:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
 804f115:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
 804f11a:	2d 2d 2d 20 3a       	sub    $0x3a202d2d,%eax
 804f11f:	20 00                	and    %al,(%eax)
 804f121:	00 00                	add    %al,(%eax)
 804f123:	00 0a                	add    %cl,(%edx)
 804f125:	20 49 6e             	and    %cl,0x6e(%ecx)
 804f128:	63 72 65             	arpl   %si,0x65(%edx)
 804f12b:	61                   	popa   
 804f12c:	73 65                	jae    804f193 <_IO_stdin_used+0x967>
 804f12e:	20 74 68 65          	and    %dh,0x65(%eax,%ebp,2)
 804f132:	20 76 61             	and    %dh,0x61(%esi)
 804f135:	6c                   	insb   (%dx),%es:(%edi)
 804f136:	75 65                	jne    804f19d <_IO_stdin_used+0x971>
 804f138:	20 6f 66             	and    %ch,0x66(%edi)
 804f13b:	20 4d 41             	and    %cl,0x41(%ebp)
 804f13e:	58                   	pop    %eax
 804f13f:	50                   	push   %eax
 804f140:	4f                   	dec    %edi
 804f141:	50                   	push   %eax
 804f142:	53                   	push   %ebx
 804f143:	49                   	dec    %ecx
 804f144:	5a                   	pop    %edx
 804f145:	45                   	inc    %ebp
 804f146:	20 69 6e             	and    %ch,0x6e(%ecx)
 804f149:	20 70 72             	and    %dh,0x72(%eax)
 804f14c:	6f                   	outsl  %ds:(%esi),(%dx)
 804f14d:	67 72 61             	addr16 jb 804f1b1 <_IO_stdin_used+0x985>
 804f150:	6d                   	insl   (%dx),%es:(%edi)
 804f151:	00 20                	add    %ah,(%eax)
 804f153:	20 61 6e             	and    %ah,0x6e(%ecx)
 804f156:	64 20 72 65          	and    %dh,%fs:0x65(%edx)
 804f15a:	2d 72 75 6e 20       	sub    $0x206e7572,%eax
 804f15f:	74 68                	je     804f1c9 <_IO_stdin_used+0x99d>
 804f161:	65 20 70 72          	and    %dh,%gs:0x72(%eax)
 804f165:	6f                   	outsl  %ds:(%esi),(%dx)
 804f166:	67 72 61             	addr16 jb 804f1ca <_IO_stdin_used+0x99e>
 804f169:	6d                   	insl   (%dx),%es:(%edi)
 804f16a:	00 00                	add    %al,(%eax)
 804f16c:	0a 43 72             	or     0x72(%ebx),%al
 804f16f:	6f                   	outsl  %ds:(%esi),(%dx)
 804f170:	73 73                	jae    804f1e5 <_IO_stdin_used+0x9b9>
 804f172:	20 4f 76             	and    %cl,0x76(%edi)
 804f175:	65                   	gs
 804f176:	72 20                	jb     804f198 <_IO_stdin_used+0x96c>
 804f178:	50                   	push   %eax
 804f179:	72 6f                	jb     804f1ea <_IO_stdin_used+0x9be>
 804f17b:	62 61 62             	bound  %esp,0x62(%ecx)
 804f17e:	69 6c 69 74 79 20 3f 	imul   $0x203f2079,0x74(%ecx,%ebp,2),%ebp
 804f185:	20 
 804f186:	28 20                	sub    %ah,(%eax)
 804f188:	30 20                	xor    %ah,(%eax)
 804f18a:	74 6f                	je     804f1fb <_IO_stdin_used+0x9cf>
 804f18c:	20 31                	and    %dh,(%ecx)
 804f18e:	20 29                	and    %ch,(%ecx)
 804f190:	20 20                	and    %ah,(%eax)
 804f192:	3a 20                	cmp    (%eax),%ah
 804f194:	00 25 66 00 0a 4d    	add    %ah,0x4d0a0066
 804f19a:	75 74                	jne    804f210 <_IO_stdin_used+0x9e4>
 804f19c:	61                   	popa   
 804f19d:	74 69                	je     804f208 <_IO_stdin_used+0x9dc>
 804f19f:	6f                   	outsl  %ds:(%esi),(%dx)
 804f1a0:	6e                   	outsb  %ds:(%esi),(%dx)
 804f1a1:	20 50 72             	and    %dl,0x72(%eax)
 804f1a4:	6f                   	outsl  %ds:(%esi),(%dx)
 804f1a5:	62 61 62             	bound  %esp,0x62(%ecx)
 804f1a8:	69 6c 69 74 79 20 3f 	imul   $0x203f2079,0x74(%ecx,%ebp,2),%ebp
 804f1af:	20 
 804f1b0:	28 20                	sub    %ah,(%eax)
 804f1b2:	30 20                	xor    %ah,(%eax)
 804f1b4:	74 6f                	je     804f225 <_IO_stdin_used+0x9f9>
 804f1b6:	20 31                	and    %dh,(%ecx)
 804f1b8:	20 29                	and    %ch,(%ecx)
 804f1ba:	20 2d 2d 20 3a 20    	and    %ch,0x203a202d
 804f1c0:	00 00                	add    %al,(%eax)
 804f1c2:	00 00                	add    %al,(%eax)
 804f1c4:	0a 4e 75             	or     0x75(%esi),%cl
 804f1c7:	6d                   	insl   (%dx),%es:(%edi)
 804f1c8:	62 65 72             	bound  %esp,0x72(%ebp)
 804f1cb:	20 6f 66             	and    %ch,0x66(%edi)
 804f1ce:	20 76 61             	and    %dh,0x61(%esi)
 804f1d1:	72 69                	jb     804f23c <_IO_stdin_used+0xa10>
 804f1d3:	61                   	popa   
 804f1d4:	62 6c 65 73          	bound  %ebp,0x73(%ebp)
 804f1d8:	20 28                	and    %ch,(%eax)
 804f1da:	4d                   	dec    %ebp
 804f1db:	61                   	popa   
 804f1dc:	78 69                	js     804f247 <_IO_stdin_used+0xa1b>
 804f1de:	6d                   	insl   (%dx),%es:(%edi)
 804f1df:	75 6d                	jne    804f24e <_IO_stdin_used+0xa22>
 804f1e1:	20 25 64 29 20 2d    	and    %ah,0x2d202964
 804f1e7:	2d 2d 2d 20 3a       	sub    $0x3a202d2d,%eax
 804f1ec:	20 00                	and    %al,(%eax)
 804f1ee:	00 00                	add    %al,(%eax)
 804f1f0:	0a 20                	or     (%eax),%ah
 804f1f2:	42                   	inc    %edx
 804f1f3:	69 6e 61 72 79 20 6f 	imul   $0x6f207972,0x61(%esi),%ebp
 804f1fa:	72 20                	jb     804f21c <_IO_stdin_used+0x9f0>
 804f1fc:	52                   	push   %edx
 804f1fd:	65                   	gs
 804f1fe:	61                   	popa   
 804f1ff:	6c                   	insb   (%dx),%es:(%edi)
 804f200:	2d 63 6f 64 65       	sub    $0x65646f63,%eax
 804f205:	64 20 70 61          	and    %dh,%fs:0x61(%eax)
 804f209:	72 61                	jb     804f26c <_IO_stdin_used+0xa40>
 804f20b:	6d                   	insl   (%dx),%es:(%edi)
 804f20c:	65                   	gs
 804f20d:	74 65                	je     804f274 <_IO_stdin_used+0xa48>
 804f20f:	72 73                	jb     804f284 <_IO_stdin_used+0xa58>
 804f211:	3f                   	aas    
 804f212:	20 28                	and    %ch,(%eax)
 804f214:	62 20                	bound  %esp,(%eax)
 804f216:	66 6f                	outsw  %ds:(%esi),(%dx)
 804f218:	72 20                	jb     804f23a <_IO_stdin_used+0xa0e>
 804f21a:	62 69 6e             	bound  %ebp,0x6e(%ecx)
 804f21d:	61                   	popa   
 804f21e:	72 79                	jb     804f299 <_IO_stdin_used+0xa6d>
 804f220:	2c 20                	sub    $0x20,%al
 804f222:	72 20                	jb     804f244 <_IO_stdin_used+0xa18>
 804f224:	66 6f                	outsw  %ds:(%esi),(%dx)
 804f226:	72 20                	jb     804f248 <_IO_stdin_used+0xa1c>
 804f228:	72 65                	jb     804f28f <_IO_stdin_used+0xa63>
 804f22a:	61                   	popa   
 804f22b:	6c                   	insb   (%dx),%es:(%edi)
 804f22c:	2d 63 6f 64 65       	sub    $0x65646f63,%eax
 804f231:	64 29 20             	sub    %esp,%fs:(%eax)
 804f234:	00 00                	add    %al,(%eax)
 804f236:	00 00                	add    %al,(%eax)
 804f238:	0a 4c 6f 77          	or     0x77(%edi,%ebp,2),%cl
 804f23c:	65                   	gs
 804f23d:	72 20                	jb     804f25f <_IO_stdin_used+0xa33>
 804f23f:	61                   	popa   
 804f240:	6e                   	outsb  %ds:(%esi),(%dx)
 804f241:	64 20 55 70          	and    %dl,%fs:0x70(%ebp)
 804f245:	70 65                	jo     804f2ac <_IO_stdin_used+0xa80>
 804f247:	72 20                	jb     804f269 <_IO_stdin_used+0xa3d>
 804f249:	62 6f 75             	bound  %ebp,0x75(%edi)
 804f24c:	6e                   	outsb  %ds:(%esi),(%dx)
 804f24d:	64                   	fs
 804f24e:	73 20                	jae    804f270 <_IO_stdin_used+0xa44>
 804f250:	6f                   	outsl  %ds:(%esi),(%dx)
 804f251:	66                   	data16
 804f252:	20 78 5b             	and    %bh,0x5b(%eax)
 804f255:	25 64 5d 20 2d       	and    $0x2d205d64,%eax
 804f25a:	2d 2d 2d 2d 20       	sub    $0x202d2d2d,%eax
 804f25f:	3a 20                	cmp    (%eax),%ah
 804f261:	00 25 66 20 25 66    	add    %ah,0x66252066
 804f267:	00 0a                	add    %cl,(%edx)
 804f269:	20 41 72             	and    %al,0x72(%ecx)
 804f26c:	65 20 74 68 65       	and    %dh,%gs:0x65(%eax,%ebp,2)
 804f271:	73 65                	jae    804f2d8 <_IO_stdin_used+0xaac>
 804f273:	20 62 6f             	and    %ah,0x6f(%edx)
 804f276:	75 6e                	jne    804f2e6 <_IO_stdin_used+0xaba>
 804f278:	64                   	fs
 804f279:	73 20                	jae    804f29b <_IO_stdin_used+0xa6f>
 804f27b:	72 69                	jb     804f2e6 <_IO_stdin_used+0xaba>
 804f27d:	67 69 64 20 3f 20 28 	addr16 imul $0x7928203f,0x20(%si),%esp
 804f284:	79 
 804f285:	2f                   	das    
 804f286:	6e                   	outsb  %ds:(%esi),(%dx)
 804f287:	29 00                	sub    %eax,(%eax)
 804f289:	00 00                	add    %al,(%eax)
 804f28b:	00 0a                	add    %cl,(%edx)
 804f28d:	20 54 6f 74          	and    %dl,0x74(%edi,%ebp,2)
 804f291:	61                   	popa   
 804f292:	6c                   	insb   (%dx),%es:(%edi)
 804f293:	20 73 74             	and    %dh,0x74(%ebx)
 804f296:	72 69                	jb     804f301 <_IO_stdin_used+0xad5>
 804f298:	6e                   	outsb  %ds:(%esi),(%dx)
 804f299:	67 20 6c 65          	addr16 and %ch,0x65(%si)
 804f29d:	6e                   	outsb  %ds:(%esi),(%dx)
 804f29e:	67 74 68             	addr16 je 804f309 <_IO_stdin_used+0xadd>
 804f2a1:	20 28                	and    %ch,(%eax)
 804f2a3:	65                   	gs
 804f2a4:	61                   	popa   
 804f2a5:	63 68 20             	arpl   %bp,0x20(%eax)
 804f2a8:	76 61                	jbe    804f30b <_IO_stdin_used+0xadf>
 804f2aa:	72 69                	jb     804f315 <_IO_stdin_used+0xae9>
 804f2ac:	61                   	popa   
 804f2ad:	62 6c 65 20          	bound  %ebp,0x20(%ebp)
 804f2b1:	68 61 73 20 65       	push   $0x65207361
 804f2b6:	71 75                	jno    804f32d <_IO_stdin_used+0xb01>
 804f2b8:	61                   	popa   
 804f2b9:	6c                   	insb   (%dx),%es:(%edi)
 804f2ba:	20 73 74             	and    %dh,0x74(%ebx)
 804f2bd:	72 69                	jb     804f328 <_IO_stdin_used+0xafc>
 804f2bf:	6e                   	outsb  %ds:(%esi),(%dx)
 804f2c0:	67 20 6c 65          	addr16 and %ch,0x65(%si)
 804f2c4:	6e                   	outsb  %ds:(%esi),(%dx)
 804f2c5:	67 74 68             	addr16 je 804f330 <_IO_stdin_used+0xb04>
 804f2c8:	29 3f                	sub    %edi,(%edi)
 804f2ca:	00 00                	add    %al,(%eax)
 804f2cc:	0a 53 68             	or     0x68(%ebx),%dl
 804f2cf:	61                   	popa   
 804f2d0:	72 69                	jb     804f33b <_IO_stdin_used+0xb0f>
 804f2d2:	6e                   	outsb  %ds:(%esi),(%dx)
 804f2d3:	67 20 74 6f          	addr16 and %dh,0x6f(%si)
 804f2d7:	20 62 65             	and    %ah,0x65(%edx)
 804f2da:	20 64 6f 6e          	and    %ah,0x6e(%edi,%ebp,2)
 804f2de:	65 20 3f             	and    %bh,%gs:(%edi)
 804f2e1:	20 28                	and    %ch,(%eax)
 804f2e3:	79 2f                	jns    804f314 <_IO_stdin_used+0xae8>
 804f2e5:	6e                   	outsb  %ds:(%esi),(%dx)
 804f2e6:	29 20                	sub    %esp,(%eax)
 804f2e8:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
 804f2ed:	2d 2d 2d 2d 20       	sub    $0x202d2d2d,%eax
 804f2f2:	3a 00                	cmp    (%eax),%al
 804f2f4:	0a 53 69             	or     0x69(%ebx),%dl
 804f2f7:	67 6d                	addr16 insl (%dx),%es:(%di)
 804f2f9:	61                   	popa   
 804f2fa:	20 73 68             	and    %dh,0x68(%ebx)
 804f2fd:	61                   	popa   
 804f2fe:	72 65                	jb     804f365 <_IO_stdin_used+0xb39>
 804f300:	20 76 61             	and    %dh,0x61(%esi)
 804f303:	6c                   	insb   (%dx),%es:(%edi)
 804f304:	75 65                	jne    804f36b <_IO_stdin_used+0xb3f>
 804f306:	20 20                	and    %ah,(%eax)
 804f308:	3f                   	aas    
 804f309:	20 2d 2d 2d 2d 2d    	and    %ch,0x2d2d2d2d
 804f30f:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
 804f314:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
 804f319:	20 3a                	and    %bh,(%edx)
 804f31b:	00 0a                	add    %cl,(%edx)
 804f31d:	20 52 65             	and    %dl,0x65(%edx)
 804f320:	70 6f                	jo     804f391 <_IO_stdin_used+0xb65>
 804f322:	72 74                	jb     804f398 <_IO_stdin_used+0xb6c>
 804f324:	73 20                	jae    804f346 <_IO_stdin_used+0xb1a>
 804f326:	74 6f                	je     804f397 <_IO_stdin_used+0xb6b>
 804f328:	20 62 65             	and    %ah,0x65(%edx)
 804f32b:	20 70 72             	and    %dh,0x72(%eax)
 804f32e:	69 6e 74 65 64 20 3f 	imul   $0x3f206465,0x74(%esi),%ebp
 804f335:	20 28                	and    %ch,(%eax)
 804f337:	79 2f                	jns    804f368 <_IO_stdin_used+0xb3c>
 804f339:	6e                   	outsb  %ds:(%esi),(%dx)
 804f33a:	29 20                	sub    %esp,(%eax)
 804f33c:	00 0a                	add    %cl,(%edx)
 804f33e:	20 48 6f             	and    %cl,0x6f(%eax)
 804f341:	77 20                	ja     804f363 <_IO_stdin_used+0xb37>
 804f343:	6d                   	insl   (%dx),%es:(%edi)
 804f344:	61                   	popa   
 804f345:	6e                   	outsb  %ds:(%esi),(%dx)
 804f346:	79 20                	jns    804f368 <_IO_stdin_used+0xb3c>
 804f348:	72 75                	jb     804f3bf <_IO_stdin_used+0xb93>
 804f34a:	6e                   	outsb  %ds:(%esi),(%dx)
 804f34b:	73 20                	jae    804f36d <_IO_stdin_used+0xb41>
 804f34d:	3f                   	aas    
 804f34e:	00 00                	add    %al,(%eax)
 804f350:	0a 20                	or     (%eax),%ah
 804f352:	45                   	inc    %ebp
 804f353:	6e                   	outsb  %ds:(%esi),(%dx)
 804f354:	74 65                	je     804f3bb <_IO_stdin_used+0xb8f>
 804f356:	72 20                	jb     804f378 <_IO_stdin_used+0xb4c>
 804f358:	73 65                	jae    804f3bf <_IO_stdin_used+0xb93>
 804f35a:	6c                   	insb   (%dx),%es:(%edi)
 804f35b:	65 63 74 69 6f       	arpl   %si,%gs:0x6f(%ecx,%ebp,2)
 804f360:	6e                   	outsb  %ds:(%esi),(%dx)
 804f361:	20 6f 70             	and    %ch,0x70(%edi)
 804f364:	65                   	gs
 804f365:	72 61                	jb     804f3c8 <_IO_stdin_used+0xb9c>
 804f367:	74 6f                	je     804f3d8 <_IO_stdin_used+0xbac>
 804f369:	72 20                	jb     804f38b <_IO_stdin_used+0xb5f>
 804f36b:	2d 2d 3e 20 00       	sub    $0x203e2d,%eax
 804f370:	0a 20                	or     (%eax),%ah
 804f372:	20 31                	and    %dh,(%ecx)
 804f374:	20 3a                	and    %bh,(%edx)
 804f376:	20 54 6f 75          	and    %dl,0x75(%edi,%ebp,2)
 804f37a:	72 6e                	jb     804f3ea <_IO_stdin_used+0xbbe>
 804f37c:	61                   	popa   
 804f37d:	6d                   	insl   (%dx),%es:(%edi)
 804f37e:	65 6e                	outsb  %gs:(%esi),(%dx)
 804f380:	74 20                	je     804f3a2 <_IO_stdin_used+0xb76>
 804f382:	73 65                	jae    804f3e9 <_IO_stdin_used+0xbbd>
 804f384:	6c                   	insb   (%dx),%es:(%edi)
 804f385:	65 63 74 69 6f       	arpl   %si,%gs:0x6f(%ecx,%ebp,2)
 804f38a:	6e                   	outsb  %ds:(%esi),(%dx)
 804f38b:	20 28                	and    %ch,(%eax)
 804f38d:	6d                   	insl   (%dx),%es:(%edi)
 804f38e:	69 6e 20 6f 72 20 6d 	imul   $0x6d20726f,0x20(%esi),%ebp
 804f395:	61                   	popa   
 804f396:	78 20                	js     804f3b8 <_IO_stdin_used+0xb8c>
 804f398:	73 65                	jae    804f3ff <_IO_stdin_used+0xbd3>
 804f39a:	74 20                	je     804f3bc <_IO_stdin_used+0xb90>
 804f39c:	62 79 20             	bound  %edi,0x20(%ecx)
 804f39f:	4d                   	dec    %ebp
 804f3a0:	49                   	dec    %ecx
 804f3a1:	4e                   	dec    %esi
 804f3a2:	4d                   	dec    %ebp
 804f3a3:	20 69 6e             	and    %ch,0x6e(%ecx)
 804f3a6:	20 74 68 65          	and    %dh,0x65(%eax,%ebp,2)
 804f3aa:	20 63 6f             	and    %ah,0x6f(%ebx)
 804f3ad:	64 65 29 00          	sub    %eax,%fs:%gs:(%eax)
 804f3b1:	00 00                	add    %al,(%eax)
 804f3b3:	00 0a                	add    %cl,(%edx)
 804f3b5:	20 20                	and    %ah,(%eax)
 804f3b7:	32 20                	xor    (%eax),%ah
 804f3b9:	3a 20                	cmp    (%eax),%ah
 804f3bb:	52                   	push   %edx
 804f3bc:	6f                   	outsl  %ds:(%esi),(%dx)
 804f3bd:	75 6c                	jne    804f42b <_IO_stdin_used+0xbff>
 804f3bf:	65                   	gs
 804f3c0:	74 74                	je     804f436 <_IO_stdin_used+0xc0a>
 804f3c2:	65 20 77 68          	and    %dh,%gs:0x68(%edi)
 804f3c6:	65                   	gs
 804f3c7:	65                   	gs
 804f3c8:	6c                   	insb   (%dx),%es:(%edi)
 804f3c9:	20 73 65             	and    %dh,0x65(%ebx)
 804f3cc:	6c                   	insb   (%dx),%es:(%edi)
 804f3cd:	65 63 74 69 6f       	arpl   %si,%gs:0x6f(%ecx,%ebp,2)
 804f3d2:	6e                   	outsb  %ds:(%esi),(%dx)
 804f3d3:	20 28                	and    %ch,(%eax)
 804f3d5:	61                   	popa   
 804f3d6:	6c                   	insb   (%dx),%es:(%edi)
 804f3d7:	77 61                	ja     804f43a <_IO_stdin_used+0xc0e>
 804f3d9:	79 73                	jns    804f44e <_IO_stdin_used+0xc22>
 804f3db:	20 6d 61             	and    %ch,0x61(%ebp)
 804f3de:	78 29                	js     804f409 <_IO_stdin_used+0xbdd>
 804f3e0:	00 00                	add    %al,(%eax)
 804f3e2:	00 00                	add    %al,(%eax)
 804f3e4:	0a 20                	or     (%eax),%ah
 804f3e6:	20 33                	and    %dh,(%ebx)
 804f3e8:	20 3a                	and    %bh,(%edx)
 804f3ea:	20 53 74             	and    %dl,0x74(%ebx)
 804f3ed:	6f                   	outsl  %ds:(%esi),(%dx)
 804f3ee:	63 68 61             	arpl   %bp,0x61(%eax)
 804f3f1:	73 74                	jae    804f467 <_IO_stdin_used+0xc3b>
 804f3f3:	69 63 20 72 65 6d 61 	imul   $0x616d6572,0x20(%ebx),%esp
 804f3fa:	69 6e 64 65 72 20 72 	imul   $0x72207265,0x64(%esi),%ebp
 804f401:	6f                   	outsl  %ds:(%esi),(%dx)
 804f402:	75 6c                	jne    804f470 <_IO_stdin_used+0xc44>
 804f404:	65                   	gs
 804f405:	74 74                	je     804f47b <_IO_stdin_used+0xc4f>
 804f407:	65 20 77 68          	and    %dh,%gs:0x68(%edi)
 804f40b:	65                   	gs
 804f40c:	65                   	gs
 804f40d:	6c                   	insb   (%dx),%es:(%edi)
 804f40e:	20 73 65             	and    %dh,0x65(%ebx)
 804f411:	6c                   	insb   (%dx),%es:(%edi)
 804f412:	65 63 74 69 6f       	arpl   %si,%gs:0x6f(%ecx,%ebp,2)
 804f417:	6e                   	outsb  %ds:(%esi),(%dx)
 804f418:	20 28                	and    %ch,(%eax)
 804f41a:	61                   	popa   
 804f41b:	6c                   	insb   (%dx),%es:(%edi)
 804f41c:	77 61                	ja     804f47f <_IO_stdin_used+0xc53>
 804f41e:	79 73                	jns    804f493 <_IO_stdin_used+0xc67>
 804f420:	20 6d 61             	and    %ch,0x61(%ebp)
 804f423:	78 29                	js     804f44e <_IO_stdin_used+0xc22>
 804f425:	00 0a                	add    %cl,(%edx)
 804f427:	20 20                	and    %ah,(%eax)
 804f429:	47                   	inc    %edi
 804f42a:	69 76 65 20 79 6f 75 	imul   $0x756f7920,0x65(%esi),%esi
 804f431:	72 20                	jb     804f453 <_IO_stdin_used+0xc27>
 804f433:	63 68 6f             	arpl   %bp,0x6f(%eax)
 804f436:	69 63 65 20 3a 00 0a 	imul   $0xa003a20,0x65(%ebx),%esp
 804f43d:	20 45 6e             	and    %al,0x6e(%ebp)
 804f440:	74 65                	je     804f4a7 <_IO_stdin_used+0xc7b>
 804f442:	72 20                	jb     804f464 <_IO_stdin_used+0xc38>
 804f444:	74 6f                	je     804f4b5 <_IO_stdin_used+0xc89>
 804f446:	75 72                	jne    804f4ba <_IO_stdin_used+0xc8e>
 804f448:	6e                   	outsb  %ds:(%esi),(%dx)
 804f449:	61                   	popa   
 804f44a:	6d                   	insl   (%dx),%es:(%edi)
 804f44b:	65 6e                	outsb  %gs:(%esi),(%dx)
 804f44d:	74 20                	je     804f46f <_IO_stdin_used+0xc43>
 804f44f:	73 69                	jae    804f4ba <_IO_stdin_used+0xc8e>
 804f451:	7a 65                	jp     804f4b8 <_IO_stdin_used+0xc8c>
 804f453:	20 00                	and    %al,(%eax)
 804f455:	54                   	push   %esp
 804f456:	54                   	push   %esp
 804f457:	54                   	push   %esp
 804f458:	54                   	push   %esp
 804f459:	54                   	push   %esp
 804f45a:	20 20                	and    %ah,(%eax)
 804f45c:	25 64 20 0a 00       	and    $0xa2064,%eax
 804f461:	00 00                	add    %al,(%eax)
 804f463:	00 0a                	add    %cl,(%edx)
 804f465:	20 20                	and    %ah,(%eax)
 804f467:	47                   	inc    %edi
 804f468:	69 76 65 20 74 68 65 	imul   $0x65687420,0x65(%esi),%esi
 804f46f:	20 73 74             	and    %dh,0x74(%ebx)
 804f472:	72 61                	jb     804f4d5 <_IO_stdin_used+0xca9>
 804f474:	74 65                	je     804f4db <_IO_stdin_used+0xcaf>
 804f476:	67 79 20             	addr16 jns 804f499 <_IO_stdin_used+0xc6d>
 804f479:	66 6f                	outsw  %ds:(%esi),(%dx)
 804f47b:	72 20                	jb     804f49d <_IO_stdin_used+0xc71>
 804f47d:	58                   	pop    %eax
 804f47e:	2d 6f 76 65 72       	sub    $0x7265766f,%eax
 804f483:	00 0a                	add    %cl,(%edx)
 804f485:	20 20                	and    %ah,(%eax)
 804f487:	31 20                	xor    %esp,(%eax)
 804f489:	3a 20                	cmp    (%eax),%ah
 804f48b:	50                   	push   %eax
 804f48c:	6f                   	outsl  %ds:(%esi),(%dx)
 804f48d:	6c                   	insb   (%dx),%es:(%edi)
 804f48e:	79 6e                	jns    804f4fe <_IO_stdin_used+0xcd2>
 804f490:	6f                   	outsl  %ds:(%esi),(%dx)
 804f491:	6d                   	insl   (%dx),%es:(%edi)
 804f492:	69 61 6c 20 64 69 73 	imul   $0x73696420,0x6c(%ecx),%esp
 804f499:	74 72                	je     804f50d <_IO_stdin_used+0xce1>
 804f49b:	69 62 75 74 69 6f 6e 	imul   $0x6e6f6974,0x75(%edx),%esp
 804f4a2:	20 69 6e             	and    %ch,0x6e(%ecx)
 804f4a5:	20 6f 6e             	and    %ch,0x6e(%edi)
 804f4a8:	65 20 76 61          	and    %dh,%gs:0x61(%esi)
 804f4ac:	72 69                	jb     804f517 <_IO_stdin_used+0xceb>
 804f4ae:	61                   	popa   
 804f4af:	62 6c 65 00          	bound  %ebp,0x0(%ebp)
 804f4b3:	00 0a                	add    %cl,(%edx)
 804f4b5:	20 20                	and    %ah,(%eax)
 804f4b7:	32 20                	xor    (%eax),%ah
 804f4b9:	3a 20                	cmp    (%eax),%ah
 804f4bb:	50                   	push   %eax
 804f4bc:	6f                   	outsl  %ds:(%esi),(%dx)
 804f4bd:	6c                   	insb   (%dx),%es:(%edi)
 804f4be:	79 6e                	jns    804f52e <_IO_stdin_used+0xd02>
 804f4c0:	6f                   	outsl  %ds:(%esi),(%dx)
 804f4c1:	6d                   	insl   (%dx),%es:(%edi)
 804f4c2:	69 61 6c 20 64 69 73 	imul   $0x73696420,0x6c(%ecx),%esp
 804f4c9:	74 72                	je     804f53d <_IO_stdin_used+0xd11>
 804f4cb:	69 62 75 74 69 6f 6e 	imul   $0x6e6f6974,0x75(%edx),%esp
 804f4d2:	20 69 6e             	and    %ch,0x6e(%ecx)
 804f4d5:	20 61 6c             	and    %ah,0x6c(%ecx)
 804f4d8:	6c                   	insb   (%dx),%es:(%edi)
 804f4d9:	20 76 61             	and    %dh,0x61(%esi)
 804f4dc:	72 69                	jb     804f547 <_IO_stdin_used+0xd1b>
 804f4de:	61                   	popa   
 804f4df:	62 6c 65 73          	bound  %ebp,0x73(%ebp)
 804f4e3:	00 0a                	add    %cl,(%edx)
 804f4e5:	20 20                	and    %ah,(%eax)
 804f4e7:	33 20                	xor    (%eax),%esp
 804f4e9:	3a 20                	cmp    (%eax),%ah
 804f4eb:	50                   	push   %eax
 804f4ec:	6f                   	outsl  %ds:(%esi),(%dx)
 804f4ed:	6c                   	insb   (%dx),%es:(%edi)
 804f4ee:	79 6e                	jns    804f55e <_IO_stdin_used+0xd32>
 804f4f0:	6f                   	outsl  %ds:(%esi),(%dx)
 804f4f1:	6d                   	insl   (%dx),%es:(%edi)
 804f4f2:	69 61 6c 20 64 69 73 	imul   $0x73696420,0x6c(%ecx),%esp
 804f4f9:	74 72                	je     804f56d <_IO_stdin_used+0xd41>
 804f4fb:	69 62 75 74 69 6f 6e 	imul   $0x6e6f6974,0x75(%edx),%esp
 804f502:	20 6f 6e             	and    %ch,0x6e(%edi)
 804f505:	20 61 20             	and    %ah,0x20(%ecx)
 804f508:	73 74                	jae    804f57e <_IO_stdin_used+0xd52>
 804f50a:	72 61                	jb     804f56d <_IO_stdin_used+0xd41>
 804f50c:	69 67 68 74 20 6c 69 	imul   $0x696c2074,0x68(%edi),%esp
 804f513:	6e                   	outsb  %ds:(%esi),(%dx)
 804f514:	65 00 00             	add    %al,%gs:(%eax)
 804f517:	00 0a                	add    %cl,(%edx)
 804f519:	20 54 79 70          	and    %dl,0x70(%ecx,%edi,2)
 804f51d:	65 20 6f 66          	and    %ch,%gs:0x66(%edi)
 804f521:	20 63 72             	and    %ah,0x72(%ebx)
 804f524:	6f                   	outsl  %ds:(%esi),(%dx)
 804f525:	73 73                	jae    804f59a <_IO_stdin_used+0xd6e>
 804f527:	20 6f 76             	and    %ch,0x76(%edi)
 804f52a:	65                   	gs
 804f52b:	72 20                	jb     804f54d <_IO_stdin_used+0xd21>
 804f52d:	3f                   	aas    
 804f52e:	20 28                	and    %ch,(%eax)
 804f530:	20 73 20             	and    %dh,0x20(%ebx)
 804f533:	66 6f                	outsw  %ds:(%esi),(%dx)
 804f535:	72 20                	jb     804f557 <_IO_stdin_used+0xd2b>
 804f537:	53                   	push   %ebx
 804f538:	42                   	inc    %edx
 804f539:	58                   	pop    %eax
 804f53a:	2c 20                	sub    $0x20,%al
 804f53c:	62 20                	bound  %esp,(%eax)
 804f53e:	66 6f                	outsw  %ds:(%esi),(%dx)
 804f540:	72 20                	jb     804f562 <_IO_stdin_used+0xd36>
 804f542:	42                   	inc    %edx
 804f543:	4c                   	dec    %esp
 804f544:	58                   	pop    %eax
 804f545:	29 20                	sub    %esp,(%eax)
 804f547:	00 0a                	add    %cl,(%edx)
 804f549:	20 47 69             	and    %al,0x69(%edi)
 804f54c:	76 65                	jbe    804f5b3 <_IO_stdin_used+0xd87>
 804f54e:	20 65 74             	and    %ah,0x74(%ebp)
 804f551:	61                   	popa   
 804f552:	20 66 6f             	and    %ah,0x6f(%esi)
 804f555:	72 20                	jb     804f577 <_IO_stdin_used+0xd4b>
 804f557:	53                   	push   %ebx
 804f558:	42                   	inc    %edx
 804f559:	58                   	pop    %eax
 804f55a:	20 61 6e             	and    %ah,0x6e(%ecx)
 804f55d:	64 20 6d 75          	and    %ch,%fs:0x75(%ebp)
 804f561:	74 61                	je     804f5c4 <_IO_stdin_used+0xd98>
 804f563:	74 69                	je     804f5ce <_IO_stdin_used+0xda2>
 804f565:	6f                   	outsl  %ds:(%esi),(%dx)
 804f566:	6e                   	outsb  %ds:(%esi),(%dx)
 804f567:	3f                   	aas    
 804f568:	00 0a                	add    %cl,(%edx)
 804f56a:	20 47 69             	and    %al,0x69(%edi)
 804f56d:	76 65                	jbe    804f5d4 <_IO_stdin_used+0xda8>
 804f56f:	20 72 61             	and    %dh,0x61(%edx)
 804f572:	6e                   	outsb  %ds:(%esi),(%dx)
 804f573:	64 6f                	outsl  %fs:(%esi),(%dx)
 804f575:	6d                   	insl   (%dx),%es:(%edi)
 804f576:	20 73 65             	and    %dh,0x65(%ebx)
 804f579:	65 64 20 28          	and    %ch,%fs:%gs:(%eax)
 804f57d:	30 20                	xor    %ah,(%eax)
 804f57f:	74 6f                	je     804f5f0 <_IO_stdin_used+0xdc4>
 804f581:	20 31                	and    %dh,(%ecx)
 804f583:	2e 30 29             	xor    %ch,%cs:(%ecx)
 804f586:	00 0a                	add    %cl,(%edx)
 804f588:	67 62 61 73          	addr16 bound %esp,0x73(%bx,%di)
 804f58c:	69 63 5f 73 65 65 64 	imul   $0x64656573,0x5f(%ebx),%esp
 804f593:	20 3d 20 20 25 66    	and    %bh,0x66252020
 804f599:	0a 00                	or     (%eax),%al
 804f59b:	00 55 73             	add    %dl,0x73(%ebp)
 804f59e:	61                   	popa   
 804f59f:	67 65 20 2e 2f 70    	addr16 and %ch,%gs:0x702f
 804f5a5:	6f                   	outsl  %ds:(%esi),(%dx)
 804f5a6:	6f                   	outsl  %ds:(%esi),(%dx)
 804f5a7:	6c                   	insb   (%dx),%es:(%edi)
 804f5a8:	20 4e 55             	and    %cl,0x55(%esi)
 804f5ab:	4d                   	dec    %ebp
 804f5ac:	5f                   	pop    %edi
 804f5ad:	54                   	push   %esp
 804f5ae:	48                   	dec    %eax
 804f5af:	52                   	push   %edx
 804f5b0:	45                   	inc    %ebp
 804f5b1:	41                   	inc    %ecx
 804f5b2:	44                   	inc    %esp
 804f5b3:	53                   	push   %ebx
 804f5b4:	20 3c 20             	and    %bh,(%eax)
 804f5b7:	69 6e 70 75 74 66 69 	imul   $0x69667475,0x70(%esi),%ebp
 804f5be:	6c                   	insb   (%dx),%es:(%edi)
 804f5bf:	65 0a 00             	or     %gs:(%eax),%al
 804f5c2:	4e                   	dec    %esi
 804f5c3:	75 6d                	jne    804f632 <_IO_stdin_used+0xe06>
 804f5c5:	62 65 72             	bound  %esp,0x72(%ebp)
 804f5c8:	20 6f 66             	and    %ch,0x66(%edi)
 804f5cb:	20 54 68 72          	and    %dl,0x72(%eax,%ebp,2)
 804f5cf:	65                   	gs
 804f5d0:	61                   	popa   
 804f5d1:	64                   	fs
 804f5d2:	73 20                	jae    804f5f4 <_IO_stdin_used+0xdc8>
 804f5d4:	3d 20 00 00 0a       	cmp    $0xa000020,%eax
 804f5d9:	20 57 61             	and    %dl,0x61(%edi)
 804f5dc:	72 6e                	jb     804f64c <_IO_stdin_used+0xe20>
 804f5de:	69 6e 67 20 21 21 21 	imul   $0x21212120,0x67(%esi),%ebp
 804f5e5:	20 73 65             	and    %dh,0x65(%ebx)
 804f5e8:	65 64 20 6e 75       	and    %ch,%fs:%gs:0x75(%esi)
 804f5ed:	6d                   	insl   (%dx),%es:(%edi)
 804f5ee:	62 65 72             	bound  %esp,0x72(%ebp)
 804f5f1:	20 65 78             	and    %ah,0x78(%ebp)
 804f5f4:	63 65 65             	arpl   %sp,0x65(%ebp)
 804f5f7:	64                   	fs
 804f5f8:	73 20                	jae    804f61a <_IO_stdin_used+0xdee>
 804f5fa:	31 2e                	xor    %ebp,(%esi)
 804f5fc:	30 00                	xor    %al,(%eax)
 804f5fe:	00 00                	add    %al,(%eax)
 804f600:	45                   	inc    %ebp
 804f601:	52                   	push   %edx
 804f602:	52                   	push   %edx
 804f603:	4f                   	dec    %edi
 804f604:	52                   	push   %edx
 804f605:	3b 20                	cmp    (%eax),%esp
 804f607:	72 65                	jb     804f66e <_IO_stdin_used+0xe42>
 804f609:	74 75                	je     804f680 <_IO_stdin_used+0xe54>
 804f60b:	72 6e                	jb     804f67b <_IO_stdin_used+0xe4f>
 804f60d:	20 63 6f             	and    %ah,0x6f(%ebx)
 804f610:	64 65 20 66 72       	and    %ah,%fs:%gs:0x72(%esi)
 804f615:	6f                   	outsl  %ds:(%esi),(%dx)
 804f616:	6d                   	insl   (%dx),%es:(%edi)
 804f617:	20 70 74             	and    %dh,0x74(%eax)
 804f61a:	68 72 65 61 64       	push   $0x64616572
 804f61f:	5f                   	pop    %edi
 804f620:	63 72 65             	arpl   %si,0x65(%edx)
 804f623:	61                   	popa   
 804f624:	74 65                	je     804f68b <_IO_stdin_used+0xe5f>
 804f626:	28 29                	sub    %ch,(%ecx)
 804f628:	20 69 73             	and    %ch,0x73(%ecx)
 804f62b:	20 25 64 0a 00 45    	and    %ah,0x45000a64
 804f631:	52                   	push   %edx
 804f632:	52                   	push   %edx
 804f633:	4f                   	dec    %edi
 804f634:	52                   	push   %edx
 804f635:	3b 20                	cmp    (%eax),%esp
 804f637:	72 65                	jb     804f69e <_IO_stdin_used+0xe72>
 804f639:	74 75                	je     804f6b0 <_IO_stdin_used+0xe84>
 804f63b:	72 6e                	jb     804f6ab <_IO_stdin_used+0xe7f>
 804f63d:	20 63 6f             	and    %ah,0x6f(%ebx)
 804f640:	64 65 20 66 72       	and    %ah,%fs:%gs:0x72(%esi)
 804f645:	6f                   	outsl  %ds:(%esi),(%dx)
 804f646:	6d                   	insl   (%dx),%es:(%edi)
 804f647:	20 70 74             	and    %dh,0x74(%eax)
 804f64a:	68 72 65 61 64       	push   $0x64616572
 804f64f:	5f                   	pop    %edi
 804f650:	6a 6f                	push   $0x6f
 804f652:	69 6e 28 29 20 69 73 	imul   $0x73692029,0x28(%esi),%ebp
 804f659:	20 25 64 0a 00 20    	and    %ah,0x20000a64
 804f65f:	4f                   	dec    %edi
 804f660:	2e                   	cs
 804f661:	4b                   	dec    %ebx
 804f662:	20 47 6f             	and    %al,0x6f(%edi)
 804f665:	6f                   	outsl  %ds:(%esi),(%dx)
 804f666:	64 20 62 79          	and    %ah,%fs:0x79(%edx)
 804f66a:	65 20 21             	and    %ah,%gs:(%ecx)
 804f66d:	21 21                	and    %esp,(%ecx)
 804f66f:	00 00                	add    %al,(%eax)
 804f671:	00 80 bf 00 00 00    	add    %al,0xbf(%eax)
 804f677:	00 8d ed b5 a0 f7    	add    %cl,-0x85f4a13(%ebp)
 804f67d:	c6                   	(bad)  
 804f67e:	b0 3e                	mov    $0x3e,%al
 804f680:	00 00                	add    %al,(%eax)
 804f682:	00 3f                	add    %bh,(%edi)
	...
 804f68c:	00 00                	add    %al,(%eax)
 804f68e:	e0 3f                	loopne 804f6cf <_IO_stdin_used+0xea3>
 804f690:	00 00                	add    %al,(%eax)
 804f692:	00 00                	add    %al,(%eax)
 804f694:	00 00                	add    %al,(%eax)
 804f696:	00 40 00             	add    %al,0x0(%eax)
 804f699:	00 c0                	add    %al,%al
 804f69b:	ff                   	(bad)  
 804f69c:	ff                   	(bad)  
 804f69d:	ff df                	lcall  *<internal disassembler error>
 804f69f:	41                   	inc    %ecx
 804f6a0:	00 00                	add    %al,(%eax)
 804f6a2:	00 00                	add    %al,(%eax)
 804f6a4:	00 00                	add    %al,(%eax)
 804f6a6:	e0 bf                	loopne 804f667 <_IO_stdin_used+0xe3b>
 804f6a8:	80 96 18 4b 00 00 00 	adcb   $0x0,0x4b18(%esi)
 804f6af:	00 95 d6 26 e8 0b    	add    %dl,0xbe826d6(%ebp)
 804f6b5:	2e 11 3e             	adc    %edi,%cs:(%esi)
 804f6b8:	00 00                	add    %al,(%eax)
 804f6ba:	c0 ff ff             	sar    $0xff,%bh
 804f6bd:	ff df                	lcall  *<internal disassembler error>
 804f6bf:	41                   	inc    %ecx
 804f6c0:	00 00                	add    %al,(%eax)
 804f6c2:	00 00                	add    %al,(%eax)
 804f6c4:	00 00                	add    %al,(%eax)
 804f6c6:	00 c0                	add    %al,%al
 804f6c8:	e0 86                	loopne 804f650 <_IO_stdin_used+0xe24>
 804f6ca:	44                   	inc    %esp
 804f6cb:	54                   	push   %esp
 804f6cc:	fb                   	sti    
 804f6cd:	21 19                	and    %ebx,(%ecx)
 804f6cf:	40                   	inc    %eax
 804f6d0:	ec                   	in     (%dx),%al
 804f6d1:	51                   	push   %ecx
 804f6d2:	b8 1e 85 ab 50       	mov    $0x50ab851e,%eax
 804f6d7:	40                   	inc    %eax
 804f6d8:	33 33                	xor    (%ebx),%esi
 804f6da:	33 33                	xor    (%ebx),%esi
 804f6dc:	33 f3                	xor    %ebx,%esi
 804f6de:	39 40 b8             	cmp    %eax,-0x48(%eax)
 804f6e1:	1e                   	push   %ds
 804f6e2:	85 eb                	test   %ebp,%ebx
 804f6e4:	51                   	push   %ecx
 804f6e5:	40                   	inc    %eax
 804f6e6:	60                   	pusha  
 804f6e7:	40                   	inc    %eax
 804f6e8:	85 eb                	test   %ebp,%ebx
 804f6ea:	51                   	push   %ecx
 804f6eb:	b8 1e c5 41 40       	mov    $0x4041c51e,%eax
 804f6f0:	52                   	push   %edx
 804f6f1:	b8 1e 85 eb 51       	mov    $0x51eb851e,%eax
 804f6f6:	4c                   	dec    %esp
 804f6f7:	40                   	inc    %eax
 804f6f8:	0a d7                	or     %bh,%dl
 804f6fa:	a3 70 3d ca 4a       	mov    %eax,0x4aca3d70
 804f6ff:	40                   	inc    %eax
 804f700:	c3                   	ret    
 804f701:	f5                   	cmc    
 804f702:	28 5c 8f 22          	sub    %bl,0x22(%edi,%ecx,4)
 804f706:	4a                   	dec    %edx
 804f707:	40                   	inc    %eax
 804f708:	1f                   	pop    %ds
 804f709:	85 eb                	test   %ebp,%ebx
 804f70b:	51                   	push   %ecx
 804f70c:	b8 3e 49 40 00       	mov    $0x40493e,%eax
 804f711:	00 00                	add    %al,(%eax)
 804f713:	00 00                	add    %al,(%eax)
 804f715:	00 59 40             	add    %bl,0x40(%ecx)
 804f718:	48                   	dec    %eax
 804f719:	e1 7a                	loope  804f795 <_IO_stdin_used+0xf69>
 804f71b:	14 ae                	adc    $0xae,%al
 804f71d:	0f 60 40 69          	punpcklbw 0x69(%eax),%mm0
 804f721:	57                   	push   %edi
 804f722:	14 8b                	adc    $0x8b,%al
 804f724:	0a bf 05 40 00 40    	or     0x40004005(%edi),%bh
 804f72a:	1c 46                	sbb    $0x46,%al
 804f72c:	00 00                	add    %al,(%eax)
 804f72e:	80                   	.byte 0x80
 804f72f:	c0                   	.byte 0xc0
Disassembly of section .eh_frame_hdr:

0804f730 <.eh_frame_hdr>:
 804f730:	01 1b                	add    %ebx,(%ebx)
 804f732:	03 3b                	add    (%ebx),%edi
 804f734:	30 01                	xor    %al,(%ecx)
 804f736:	00 00                	add    %al,(%eax)
 804f738:	25 00 00 00 2a       	and    $0x2a000000,%eax
 804f73d:	9a ff ff 50 01 00 00 	lcall  $0x0,$0x150ffff
 804f744:	36                   	ss
 804f745:	9b                   	fwait
 804f746:	ff                   	(bad)  
 804f747:	ff                   	(bad)  
 804f748:	78 01                	js     804f74b <_IO_stdin_used+0xf1f>
 804f74a:	00 00                	add    %al,(%eax)
 804f74c:	76 9b                	jbe    804f6e9 <_IO_stdin_used+0xebd>
 804f74e:	ff                   	(bad)  
 804f74f:	ff 9c 01 00 00 92 9b 	lcall  *-0x646e0000(%ecx,%eax,1)
 804f756:	ff                   	(bad)  
 804f757:	ff c0                	inc    %eax
 804f759:	01 00                	add    %eax,(%eax)
 804f75b:	00 9c 9e ff ff e4 01 	add    %bl,0x1e4ffff(%esi,%ebx,4)
 804f762:	00 00                	add    %al,(%eax)
 804f764:	ce                   	into   
 804f765:	9e                   	sahf   
 804f766:	ff                   	(bad)  
 804f767:	ff 08                	decl   (%eax)
 804f769:	02 00                	add    (%eax),%al
 804f76b:	00 22                	add    %ah,(%edx)
 804f76d:	9f                   	lahf   
 804f76e:	ff                   	(bad)  
 804f76f:	ff 2c 02             	ljmp   *(%edx,%eax,1)
 804f772:	00 00                	add    %al,(%eax)
 804f774:	58                   	pop    %eax
 804f775:	a0 ff ff 50 02       	mov    0x250ffff,%al
 804f77a:	00 00                	add    %al,(%eax)
 804f77c:	9c                   	pushf  
 804f77d:	a1 ff ff 74 02       	mov    0x274ffff,%eax
 804f782:	00 00                	add    %al,(%eax)
 804f784:	b4 a2                	mov    $0xa2,%ah
 804f786:	ff                   	(bad)  
 804f787:	ff 98 02 00 00 e6    	lcall  *-0x19fffffe(%eax)
 804f78d:	a2 ff ff bc 02       	mov    %al,0x2bcffff
 804f792:	00 00                	add    %al,(%eax)
 804f794:	e0 a7                	loopne 804f73d <_IO_stdin_used+0xf11>
 804f796:	ff                   	(bad)  
 804f797:	ff e0                	jmp    *%eax
 804f799:	02 00                	add    (%eax),%al
 804f79b:	00 4a a9             	add    %cl,-0x57(%edx)
 804f79e:	ff                   	(bad)  
 804f79f:	ff 08                	decl   (%eax)
 804f7a1:	03 00                	add    (%eax),%eax
 804f7a3:	00 8a aa ff ff 2c    	add    %cl,0x2cffffaa(%edx)
 804f7a9:	03 00                	add    (%eax),%eax
 804f7ab:	00 82 ae ff ff 54    	add    %al,0x54ffffae(%edx)
 804f7b1:	03 00                	add    (%eax),%eax
 804f7b3:	00 88 b3 ff ff 7c    	add    %cl,0x7cffffb3(%eax)
 804f7b9:	03 00                	add    (%eax),%eax
 804f7bb:	00 be b6 ff ff a4    	add    %bh,-0x5b00004a(%esi)
 804f7c1:	03 00                	add    (%eax),%eax
 804f7c3:	00 74 b7 ff          	add    %dh,-0x1(%edi,%esi,4)
 804f7c7:	ff c8                	dec    %eax
 804f7c9:	03 00                	add    (%eax),%eax
 804f7cb:	00 94 b7 ff ff ec 03 	add    %dl,0x3ecffff(%edi,%esi,4)
 804f7d2:	00 00                	add    %al,(%eax)
 804f7d4:	2e                   	cs
 804f7d5:	b9 ff ff 10 04       	mov    $0x410ffff,%ecx
 804f7da:	00 00                	add    %al,(%eax)
 804f7dc:	a2 ba ff ff 38       	mov    %al,0x38ffffba
 804f7e1:	04 00                	add    $0x0,%al
 804f7e3:	00 24 bd ff ff 5c 04 	add    %ah,0x45cffff(,%edi,4)
 804f7ea:	00 00                	add    %al,(%eax)
 804f7ec:	1a bf ff ff 80 04    	sbb    0x480ffff(%edi),%bh
 804f7f2:	00 00                	add    %al,(%eax)
 804f7f4:	52                   	push   %edx
 804f7f5:	c4                   	les    (bad),%edi
 804f7f6:	ff                   	(bad)  
 804f7f7:	ff ac 04 00 00 aa c5 	ljmp   *-0x3a560000(%esp,%eax,1)
 804f7fe:	ff                   	(bad)  
 804f7ff:	ff d0                	call   *%eax
 804f801:	04 00                	add    $0x0,%al
 804f803:	00 ec                	add    %ch,%ah
 804f805:	c7                   	(bad)  
 804f806:	ff                   	(bad)  
 804f807:	ff                   	(bad)  
 804f808:	f8                   	clc    
 804f809:	04 00                	add    $0x0,%al
 804f80b:	00 9c cc ff ff 20 05 	add    %bl,0x520ffff(%esp,%ecx,8)
 804f812:	00 00                	add    %al,(%eax)
 804f814:	bc cc ff ff 44       	mov    $0x44ffffcc,%esp
 804f819:	05 00 00 f8 d3       	add    $0xd3f80000,%eax
 804f81e:	ff                   	(bad)  
 804f81f:	ff 6c 05 00          	ljmp   *0x0(%ebp,%eax,1)
 804f823:	00 72 db             	add    %dh,-0x25(%edx)
 804f826:	ff                   	(bad)  
 804f827:	ff ac 05 00 00 7e dc 	ljmp   *-0x23820000(%ebp,%eax,1)
 804f82e:	ff                   	(bad)  
 804f82f:	ff d4                	call   *%esp
 804f831:	05 00 00 be dc       	add    $0xdcbe0000,%eax
 804f836:	ff                   	(bad)  
 804f837:	ff                   	(bad)  
 804f838:	f8                   	clc    
 804f839:	05 00 00 da dc       	add    $0xdcda0000,%eax
 804f83e:	ff                   	(bad)  
 804f83f:	ff 1c 06             	lcall  *(%esi,%eax,1)
 804f842:	00 00                	add    %al,(%eax)
 804f844:	48                   	dec    %eax
 804f845:	de ff                	fdivrp %st,%st(7)
 804f847:	ff 40 06             	incl   0x6(%eax)
 804f84a:	00 00                	add    %al,(%eax)
 804f84c:	54                   	push   %esp
 804f84d:	df ff                	(bad)  
 804f84f:	ff 68 06             	ljmp   *0x6(%eax)
 804f852:	00 00                	add    %al,(%eax)
 804f854:	94                   	xchg   %eax,%esp
 804f855:	df ff                	(bad)  
 804f857:	ff 8c 06 00 00 b0 df 	decl   -0x20500000(%esi,%eax,1)
 804f85e:	ff                   	(bad)  
 804f85f:	ff                   	.byte 0xff
 804f860:	b0 06                	mov    $0x6,%al
	...
Disassembly of section .eh_frame:

0804f864 <__FRAME_END__-0x5a0>:
 804f864:	18 00                	sbb    %al,(%eax)
 804f866:	00 00                	add    %al,(%eax)
 804f868:	00 00                	add    %al,(%eax)
 804f86a:	00 00                	add    %al,(%eax)
 804f86c:	01 7a 50             	add    %edi,0x50(%edx)
 804f86f:	00 01                	add    %al,(%ecx)
 804f871:	7c 08                	jl     804f87b <_IO_stdin_used+0x104f>
 804f873:	05 00 80 8e 04       	add    $0x48e8000,%eax
 804f878:	08 0c 04             	or     %cl,(%esp,%eax,1)
 804f87b:	04 88                	add    $0x88,%al
 804f87d:	01 00                	add    %eax,(%eax)
 804f87f:	00 24 00             	add    %ah,(%eax,%eax,1)
 804f882:	00 00                	add    %al,(%eax)
 804f884:	20 00                	and    %al,(%eax)
 804f886:	00 00                	add    %al,(%eax)
 804f888:	5a                   	pop    %edx
 804f889:	91                   	xchg   %eax,%ecx
 804f88a:	04 08                	add    $0x8,%al
 804f88c:	0b 01                	or     (%ecx),%eax
 804f88e:	00 00                	add    %al,(%eax)
 804f890:	00 04 01             	add    %al,(%ecx,%eax,1)
 804f893:	00 00                	add    %al,(%eax)
 804f895:	00 0e                	add    %cl,(%esi)
 804f897:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804f89d:	00 00                	add    %al,(%eax)
 804f89f:	0d 05 04 04 00       	or     $0x40405,%eax
 804f8a4:	00 00                	add    %al,(%eax)
 804f8a6:	83 03 20             	addl   $0x20,(%ebx)
 804f8a9:	00 00                	add    %al,(%eax)
 804f8ab:	00 48 00             	add    %cl,0x0(%eax)
 804f8ae:	00 00                	add    %al,(%eax)
 804f8b0:	66 92                	xchg   %ax,%dx
 804f8b2:	04 08                	add    $0x8,%al
 804f8b4:	3f                   	aas    
 804f8b5:	00 00                	add    %al,(%eax)
 804f8b7:	00 00                	add    %al,(%eax)
 804f8b9:	04 01                	add    $0x1,%al
 804f8bb:	00 00                	add    %al,(%eax)
 804f8bd:	00 0e                	add    %cl,(%esi)
 804f8bf:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804f8c5:	00 00                	add    %al,(%eax)
 804f8c7:	0d 05 00 00 00       	or     $0x5,%eax
 804f8cc:	20 00                	and    %al,(%eax)
 804f8ce:	00 00                	add    %al,(%eax)
 804f8d0:	6c                   	insb   (%dx),%es:(%edi)
 804f8d1:	00 00                	add    %al,(%eax)
 804f8d3:	00 a6 92 04 08 1c    	add    %ah,0x1c080492(%esi)
 804f8d9:	00 00                	add    %al,(%eax)
 804f8db:	00 00                	add    %al,(%eax)
 804f8dd:	04 01                	add    $0x1,%al
 804f8df:	00 00                	add    %al,(%eax)
 804f8e1:	00 0e                	add    %cl,(%esi)
 804f8e3:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804f8e9:	00 00                	add    %al,(%eax)
 804f8eb:	0d 05 00 00 00       	or     $0x5,%eax
 804f8f0:	20 00                	and    %al,(%eax)
 804f8f2:	00 00                	add    %al,(%eax)
 804f8f4:	90                   	nop    
 804f8f5:	00 00                	add    %al,(%eax)
 804f8f7:	00 c2                	add    %al,%dl
 804f8f9:	92                   	xchg   %eax,%edx
 804f8fa:	04 08                	add    $0x8,%al
 804f8fc:	14 00                	adc    $0x0,%al
 804f8fe:	00 00                	add    %al,(%eax)
 804f900:	00 04 01             	add    %al,(%ecx,%eax,1)
 804f903:	00 00                	add    %al,(%eax)
 804f905:	00 0e                	add    %cl,(%esi)
 804f907:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804f90d:	00 00                	add    %al,(%eax)
 804f90f:	0d 05 00 00 00       	or     $0x5,%eax
 804f914:	20 00                	and    %al,(%eax)
 804f916:	00 00                	add    %al,(%eax)
 804f918:	b4 00                	mov    $0x0,%ah
 804f91a:	00 00                	add    %al,(%eax)
 804f91c:	cc                   	int3   
 804f91d:	95                   	xchg   %eax,%ebp
 804f91e:	04 08                	add    $0x8,%al
 804f920:	31 00                	xor    %eax,(%eax)
 804f922:	00 00                	add    %al,(%eax)
 804f924:	00 04 01             	add    %al,(%ecx,%eax,1)
 804f927:	00 00                	add    %al,(%eax)
 804f929:	00 0e                	add    %cl,(%esi)
 804f92b:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804f931:	00 00                	add    %al,(%eax)
 804f933:	0d 05 00 00 00       	or     $0x5,%eax
 804f938:	20 00                	and    %al,(%eax)
 804f93a:	00 00                	add    %al,(%eax)
 804f93c:	d8 00                	fadds  (%eax)
 804f93e:	00 00                	add    %al,(%eax)
 804f940:	fe                   	(bad)  
 804f941:	95                   	xchg   %eax,%ebp
 804f942:	04 08                	add    $0x8,%al
 804f944:	54                   	push   %esp
 804f945:	00 00                	add    %al,(%eax)
 804f947:	00 00                	add    %al,(%eax)
 804f949:	04 01                	add    $0x1,%al
 804f94b:	00 00                	add    %al,(%eax)
 804f94d:	00 0e                	add    %cl,(%esi)
 804f94f:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804f955:	00 00                	add    %al,(%eax)
 804f957:	0d 05 00 00 00       	or     $0x5,%eax
 804f95c:	20 00                	and    %al,(%eax)
 804f95e:	00 00                	add    %al,(%eax)
 804f960:	fc                   	cld    
 804f961:	00 00                	add    %al,(%eax)
 804f963:	00 52 96             	add    %dl,-0x6a(%edx)
 804f966:	04 08                	add    $0x8,%al
 804f968:	35 01 00 00 00       	xor    $0x1,%eax
 804f96d:	04 01                	add    $0x1,%al
 804f96f:	00 00                	add    %al,(%eax)
 804f971:	00 0e                	add    %cl,(%esi)
 804f973:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804f979:	00 00                	add    %al,(%eax)
 804f97b:	0d 05 00 00 00       	or     $0x5,%eax
 804f980:	20 00                	and    %al,(%eax)
 804f982:	00 00                	add    %al,(%eax)
 804f984:	20 01                	and    %al,(%ecx)
 804f986:	00 00                	add    %al,(%eax)
 804f988:	88 97 04 08 43 01    	mov    %dl,0x1430804(%edi)
 804f98e:	00 00                	add    %al,(%eax)
 804f990:	00 04 01             	add    %al,(%ecx,%eax,1)
 804f993:	00 00                	add    %al,(%eax)
 804f995:	00 0e                	add    %cl,(%esi)
 804f997:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804f99d:	00 00                	add    %al,(%eax)
 804f99f:	0d 05 00 00 00       	or     $0x5,%eax
 804f9a4:	20 00                	and    %al,(%eax)
 804f9a6:	00 00                	add    %al,(%eax)
 804f9a8:	44                   	inc    %esp
 804f9a9:	01 00                	add    %eax,(%eax)
 804f9ab:	00 cc                	add    %cl,%ah
 804f9ad:	98                   	cwtl   
 804f9ae:	04 08                	add    $0x8,%al
 804f9b0:	17                   	pop    %ss
 804f9b1:	01 00                	add    %eax,(%eax)
 804f9b3:	00 00                	add    %al,(%eax)
 804f9b5:	04 01                	add    $0x1,%al
 804f9b7:	00 00                	add    %al,(%eax)
 804f9b9:	00 0e                	add    %cl,(%esi)
 804f9bb:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804f9c1:	00 00                	add    %al,(%eax)
 804f9c3:	0d 05 00 00 00       	or     $0x5,%eax
 804f9c8:	20 00                	and    %al,(%eax)
 804f9ca:	00 00                	add    %al,(%eax)
 804f9cc:	68 01 00 00 e4       	push   $0xe4000001
 804f9d1:	99                   	cltd   
 804f9d2:	04 08                	add    $0x8,%al
 804f9d4:	31 00                	xor    %eax,(%eax)
 804f9d6:	00 00                	add    %al,(%eax)
 804f9d8:	00 04 01             	add    %al,(%ecx,%eax,1)
 804f9db:	00 00                	add    %al,(%eax)
 804f9dd:	00 0e                	add    %cl,(%esi)
 804f9df:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804f9e5:	00 00                	add    %al,(%eax)
 804f9e7:	0d 05 00 00 00       	or     $0x5,%eax
 804f9ec:	20 00                	and    %al,(%eax)
 804f9ee:	00 00                	add    %al,(%eax)
 804f9f0:	8c 01                	mov    %es,(%ecx)
 804f9f2:	00 00                	add    %al,(%eax)
 804f9f4:	16                   	push   %ss
 804f9f5:	9a 04 08 f9 04 00 00 	lcall  $0x0,$0x4f90804
 804f9fc:	00 04 01             	add    %al,(%ecx,%eax,1)
 804f9ff:	00 00                	add    %al,(%eax)
 804fa01:	00 0e                	add    %cl,(%esi)
 804fa03:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fa09:	00 00                	add    %al,(%eax)
 804fa0b:	0d 05 00 00 00       	or     $0x5,%eax
 804fa10:	24 00                	and    $0x0,%al
 804fa12:	00 00                	add    %al,(%eax)
 804fa14:	b0 01                	mov    $0x1,%al
 804fa16:	00 00                	add    %al,(%eax)
 804fa18:	10 9f 04 08 6a 01    	adc    %bl,0x16a0804(%edi)
 804fa1e:	00 00                	add    %al,(%eax)
 804fa20:	00 04 01             	add    %al,(%ecx,%eax,1)
 804fa23:	00 00                	add    %al,(%eax)
 804fa25:	00 0e                	add    %cl,(%esi)
 804fa27:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fa2d:	00 00                	add    %al,(%eax)
 804fa2f:	0d 05 04 04 00       	or     $0x40405,%eax
 804fa34:	00 00                	add    %al,(%eax)
 804fa36:	83 03 20             	addl   $0x20,(%ebx)
 804fa39:	00 00                	add    %al,(%eax)
 804fa3b:	00 d8                	add    %bl,%al
 804fa3d:	01 00                	add    %eax,(%eax)
 804fa3f:	00 7a a0             	add    %bh,-0x60(%edx)
 804fa42:	04 08                	add    $0x8,%al
 804fa44:	40                   	inc    %eax
 804fa45:	01 00                	add    %eax,(%eax)
 804fa47:	00 00                	add    %al,(%eax)
 804fa49:	04 01                	add    $0x1,%al
 804fa4b:	00 00                	add    %al,(%eax)
 804fa4d:	00 0e                	add    %cl,(%esi)
 804fa4f:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fa55:	00 00                	add    %al,(%eax)
 804fa57:	0d 05 00 00 00       	or     $0x5,%eax
 804fa5c:	24 00                	and    $0x0,%al
 804fa5e:	00 00                	add    %al,(%eax)
 804fa60:	fc                   	cld    
 804fa61:	01 00                	add    %eax,(%eax)
 804fa63:	00 ba a1 04 08 f7    	add    %bh,-0x8f7fb5f(%edx)
 804fa69:	03 00                	add    (%eax),%eax
 804fa6b:	00 00                	add    %al,(%eax)
 804fa6d:	04 01                	add    $0x1,%al
 804fa6f:	00 00                	add    %al,(%eax)
 804fa71:	00 0e                	add    %cl,(%esi)
 804fa73:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fa79:	00 00                	add    %al,(%eax)
 804fa7b:	0d 05 04 04 00       	or     $0x40405,%eax
 804fa80:	00 00                	add    %al,(%eax)
 804fa82:	83 03 24             	addl   $0x24,(%ebx)
 804fa85:	00 00                	add    %al,(%eax)
 804fa87:	00 24 02             	add    %ah,(%edx,%eax,1)
 804fa8a:	00 00                	add    %al,(%eax)
 804fa8c:	b2 a5                	mov    $0xa5,%dl
 804fa8e:	04 08                	add    $0x8,%al
 804fa90:	06                   	push   %es
 804fa91:	05 00 00 00 04       	add    $0x4000000,%eax
 804fa96:	01 00                	add    %eax,(%eax)
 804fa98:	00 00                	add    %al,(%eax)
 804fa9a:	0e                   	push   %cs
 804fa9b:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804faa1:	00 00                	add    %al,(%eax)
 804faa3:	0d 05 04 07 00       	or     $0x70405,%eax
 804faa8:	00 00                	add    %al,(%eax)
 804faaa:	83 03 24             	addl   $0x24,(%ebx)
 804faad:	00 00                	add    %al,(%eax)
 804faaf:	00 4c 02 00          	add    %cl,0x0(%edx,%eax,1)
 804fab3:	00 b8 aa 04 08 36    	add    %bh,0x360804aa(%eax)
 804fab9:	03 00                	add    (%eax),%eax
 804fabb:	00 00                	add    %al,(%eax)
 804fabd:	04 01                	add    $0x1,%al
 804fabf:	00 00                	add    %al,(%eax)
 804fac1:	00 0e                	add    %cl,(%esi)
 804fac3:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fac9:	00 00                	add    %al,(%eax)
 804facb:	0d 05 04 04 00       	or     $0x40405,%eax
 804fad0:	00 00                	add    %al,(%eax)
 804fad2:	83 03 20             	addl   $0x20,(%ebx)
 804fad5:	00 00                	add    %al,(%eax)
 804fad7:	00 74 02 00          	add    %dh,0x0(%edx,%eax,1)
 804fadb:	00 ee                	add    %ch,%dh
 804fadd:	ad                   	lods   %ds:(%esi),%eax
 804fade:	04 08                	add    $0x8,%al
 804fae0:	b5 00                	mov    $0x0,%ch
 804fae2:	00 00                	add    %al,(%eax)
 804fae4:	00 04 01             	add    %al,(%ecx,%eax,1)
 804fae7:	00 00                	add    %al,(%eax)
 804fae9:	00 0e                	add    %cl,(%esi)
 804faeb:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804faf1:	00 00                	add    %al,(%eax)
 804faf3:	0d 05 00 00 00       	or     $0x5,%eax
 804faf8:	20 00                	and    %al,(%eax)
 804fafa:	00 00                	add    %al,(%eax)
 804fafc:	98                   	cwtl   
 804fafd:	02 00                	add    (%eax),%al
 804faff:	00 a4 ae 04 08 20 00 	add    %ah,0x200804(%esi,%ebp,4)
 804fb06:	00 00                	add    %al,(%eax)
 804fb08:	00 04 01             	add    %al,(%ecx,%eax,1)
 804fb0b:	00 00                	add    %al,(%eax)
 804fb0d:	00 0e                	add    %cl,(%esi)
 804fb0f:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fb15:	00 00                	add    %al,(%eax)
 804fb17:	0d 05 00 00 00       	or     $0x5,%eax
 804fb1c:	20 00                	and    %al,(%eax)
 804fb1e:	00 00                	add    %al,(%eax)
 804fb20:	bc 02 00 00 c4       	mov    $0xc4000002,%esp
 804fb25:	ae                   	scas   %es:(%edi),%al
 804fb26:	04 08                	add    $0x8,%al
 804fb28:	99                   	cltd   
 804fb29:	01 00                	add    %eax,(%eax)
 804fb2b:	00 00                	add    %al,(%eax)
 804fb2d:	04 01                	add    $0x1,%al
 804fb2f:	00 00                	add    %al,(%eax)
 804fb31:	00 0e                	add    %cl,(%esi)
 804fb33:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fb39:	00 00                	add    %al,(%eax)
 804fb3b:	0d 05 00 00 00       	or     $0x5,%eax
 804fb40:	24 00                	and    $0x0,%al
 804fb42:	00 00                	add    %al,(%eax)
 804fb44:	e0 02                	loopne 804fb48 <_IO_stdin_used+0x131c>
 804fb46:	00 00                	add    %al,(%eax)
 804fb48:	5e                   	pop    %esi
 804fb49:	b0 04                	mov    $0x4,%al
 804fb4b:	08 73 01             	or     %dh,0x1(%ebx)
 804fb4e:	00 00                	add    %al,(%eax)
 804fb50:	00 04 01             	add    %al,(%ecx,%eax,1)
 804fb53:	00 00                	add    %al,(%eax)
 804fb55:	00 0e                	add    %cl,(%esi)
 804fb57:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fb5d:	00 00                	add    %al,(%eax)
 804fb5f:	0d 05 04 04 00       	or     $0x40405,%eax
 804fb64:	00 00                	add    %al,(%eax)
 804fb66:	83 03 20             	addl   $0x20,(%ebx)
 804fb69:	00 00                	add    %al,(%eax)
 804fb6b:	00 08                	add    %cl,(%eax)
 804fb6d:	03 00                	add    (%eax),%eax
 804fb6f:	00 d2                	add    %dl,%dl
 804fb71:	b1 04                	mov    $0x4,%cl
 804fb73:	08 82 02 00 00 00    	or     %al,0x2(%edx)
 804fb79:	04 01                	add    $0x1,%al
 804fb7b:	00 00                	add    %al,(%eax)
 804fb7d:	00 0e                	add    %cl,(%esi)
 804fb7f:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fb85:	00 00                	add    %al,(%eax)
 804fb87:	0d 05 00 00 00       	or     $0x5,%eax
 804fb8c:	20 00                	and    %al,(%eax)
 804fb8e:	00 00                	add    %al,(%eax)
 804fb90:	2c 03                	sub    $0x3,%al
 804fb92:	00 00                	add    %al,(%eax)
 804fb94:	54                   	push   %esp
 804fb95:	b4 04                	mov    $0x4,%ah
 804fb97:	08 f6                	or     %dh,%dh
 804fb99:	01 00                	add    %eax,(%eax)
 804fb9b:	00 00                	add    %al,(%eax)
 804fb9d:	04 01                	add    $0x1,%al
 804fb9f:	00 00                	add    %al,(%eax)
 804fba1:	00 0e                	add    %cl,(%esi)
 804fba3:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fba9:	00 00                	add    %al,(%eax)
 804fbab:	0d 05 00 00 00       	or     $0x5,%eax
 804fbb0:	28 00                	sub    %al,(%eax)
 804fbb2:	00 00                	add    %al,(%eax)
 804fbb4:	50                   	push   %eax
 804fbb5:	03 00                	add    (%eax),%eax
 804fbb7:	00 4a b6             	add    %cl,-0x4a(%edx)
 804fbba:	04 08                	add    $0x8,%al
 804fbbc:	38 05 00 00 00 04    	cmp    %al,0x4000000
 804fbc2:	01 00                	add    %eax,(%eax)
 804fbc4:	00 00                	add    %al,(%eax)
 804fbc6:	0e                   	push   %cs
 804fbc7:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fbcd:	00 00                	add    %al,(%eax)
 804fbcf:	0d 05 04 06 00       	or     $0x60405,%eax
 804fbd4:	00 00                	add    %al,(%eax)
 804fbd6:	83 05 86 04 87 03 20 	addl   $0x20,0x3870486
 804fbdd:	00 00                	add    %al,(%eax)
 804fbdf:	00 7c 03 00          	add    %bh,0x0(%ebx,%eax,1)
 804fbe3:	00 82 bb 04 08 57    	add    %al,0x570804bb(%edx)
 804fbe9:	01 00                	add    %eax,(%eax)
 804fbeb:	00 00                	add    %al,(%eax)
 804fbed:	04 01                	add    $0x1,%al
 804fbef:	00 00                	add    %al,(%eax)
 804fbf1:	00 0e                	add    %cl,(%esi)
 804fbf3:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fbf9:	00 00                	add    %al,(%eax)
 804fbfb:	0d 05 00 00 00       	or     $0x5,%eax
 804fc00:	24 00                	and    $0x0,%al
 804fc02:	00 00                	add    %al,(%eax)
 804fc04:	a0 03 00 00 da       	mov    0xda000003,%al
 804fc09:	bc 04 08 42 02       	mov    $0x2420804,%esp
 804fc0e:	00 00                	add    %al,(%eax)
 804fc10:	00 04 01             	add    %al,(%ecx,%eax,1)
 804fc13:	00 00                	add    %al,(%eax)
 804fc15:	00 0e                	add    %cl,(%esi)
 804fc17:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fc1d:	00 00                	add    %al,(%eax)
 804fc1f:	0d 05 04 07 00       	or     $0x70405,%eax
 804fc24:	00 00                	add    %al,(%eax)
 804fc26:	83 03 24             	addl   $0x24,(%ebx)
 804fc29:	00 00                	add    %al,(%eax)
 804fc2b:	00 c8                	add    %cl,%al
 804fc2d:	03 00                	add    (%eax),%eax
 804fc2f:	00 1c bf             	add    %bl,(%edi,%edi,4)
 804fc32:	04 08                	add    $0x8,%al
 804fc34:	b0 04                	mov    $0x4,%al
 804fc36:	00 00                	add    %al,(%eax)
 804fc38:	00 04 01             	add    %al,(%ecx,%eax,1)
 804fc3b:	00 00                	add    %al,(%eax)
 804fc3d:	00 0e                	add    %cl,(%esi)
 804fc3f:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fc45:	00 00                	add    %al,(%eax)
 804fc47:	0d 05 04 04 00       	or     $0x40405,%eax
 804fc4c:	00 00                	add    %al,(%eax)
 804fc4e:	83 03 20             	addl   $0x20,(%ebx)
 804fc51:	00 00                	add    %al,(%eax)
 804fc53:	00 f0                	add    %dh,%al
 804fc55:	03 00                	add    (%eax),%eax
 804fc57:	00 cc                	add    %cl,%ah
 804fc59:	c3                   	ret    
 804fc5a:	04 08                	add    $0x8,%al
 804fc5c:	20 00                	and    %al,(%eax)
 804fc5e:	00 00                	add    %al,(%eax)
 804fc60:	00 04 01             	add    %al,(%ecx,%eax,1)
 804fc63:	00 00                	add    %al,(%eax)
 804fc65:	00 0e                	add    %cl,(%esi)
 804fc67:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fc6d:	00 00                	add    %al,(%eax)
 804fc6f:	0d 05 00 00 00       	or     $0x5,%eax
 804fc74:	24 00                	and    $0x0,%al
 804fc76:	00 00                	add    %al,(%eax)
 804fc78:	14 04                	adc    $0x4,%al
 804fc7a:	00 00                	add    %al,(%eax)
 804fc7c:	ec                   	in     (%dx),%al
 804fc7d:	c3                   	ret    
 804fc7e:	04 08                	add    $0x8,%al
 804fc80:	3c 07                	cmp    $0x7,%al
 804fc82:	00 00                	add    %al,(%eax)
 804fc84:	00 04 01             	add    %al,(%ecx,%eax,1)
 804fc87:	00 00                	add    %al,(%eax)
 804fc89:	00 0e                	add    %cl,(%esi)
 804fc8b:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fc91:	00 00                	add    %al,(%eax)
 804fc93:	0d 05 04 04 00       	or     $0x40405,%eax
 804fc98:	00 00                	add    %al,(%eax)
 804fc9a:	83 03 3c             	addl   $0x3c,(%ebx)
 804fc9d:	00 00                	add    %al,(%eax)
 804fc9f:	00 3c 04             	add    %bh,(%esp,%eax,1)
 804fca2:	00 00                	add    %al,(%eax)
 804fca4:	28 cb                	sub    %cl,%bl
 804fca6:	04 08                	add    $0x8,%al
 804fca8:	16                   	push   %ss
 804fca9:	04 00                	add    $0x0,%al
 804fcab:	00 00                	add    %al,(%eax)
 804fcad:	04 04                	add    $0x4,%al
 804fcaf:	00 00                	add    %al,(%eax)
 804fcb1:	00 0c 01             	add    %cl,(%ecx,%eax,1)
 804fcb4:	00 09                	add    %cl,(%ecx)
 804fcb6:	04 01                	add    $0x1,%al
 804fcb8:	04 06                	add    $0x6,%al
 804fcba:	00 00                	add    %al,(%eax)
 804fcbc:	00 0c 04             	add    %cl,(%esp,%eax,1)
 804fcbf:	04 04                	add    $0x4,%al
 804fcc1:	01 00                	add    %eax,(%eax)
 804fcc3:	00 00                	add    %al,(%eax)
 804fcc5:	0e                   	push   %cs
 804fcc6:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fccc:	00 00                	add    %al,(%eax)
 804fcce:	0d 05 04 02 00       	or     $0x20405,%eax
 804fcd3:	00 00                	add    %al,(%eax)
 804fcd5:	84 04 83             	test   %al,(%ebx,%eax,4)
 804fcd8:	03 00                	add    (%eax),%eax
 804fcda:	00 00                	add    %al,(%eax)
 804fcdc:	24 00                	and    $0x0,%al
 804fcde:	00 00                	add    %al,(%eax)
 804fce0:	7c 04                	jl     804fce6 <_IO_stdin_used+0x14ba>
 804fce2:	00 00                	add    %al,(%eax)
 804fce4:	a2 d2 04 08 0b       	mov    %al,0xb0804d2
 804fce9:	01 00                	add    %eax,(%eax)
 804fceb:	00 00                	add    %al,(%eax)
 804fced:	04 01                	add    $0x1,%al
 804fcef:	00 00                	add    %al,(%eax)
 804fcf1:	00 0e                	add    %cl,(%esi)
 804fcf3:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fcf9:	00 00                	add    %al,(%eax)
 804fcfb:	0d 05 04 04 00       	or     $0x40405,%eax
 804fd00:	00 00                	add    %al,(%eax)
 804fd02:	83 03 20             	addl   $0x20,(%ebx)
 804fd05:	00 00                	add    %al,(%eax)
 804fd07:	00 a4 04 00 00 ae d3 	add    %ah,-0x2c520000(%esp,%eax,1)
 804fd0e:	04 08                	add    $0x8,%al
 804fd10:	3f                   	aas    
 804fd11:	00 00                	add    %al,(%eax)
 804fd13:	00 00                	add    %al,(%eax)
 804fd15:	04 01                	add    $0x1,%al
 804fd17:	00 00                	add    %al,(%eax)
 804fd19:	00 0e                	add    %cl,(%esi)
 804fd1b:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fd21:	00 00                	add    %al,(%eax)
 804fd23:	0d 05 00 00 00       	or     $0x5,%eax
 804fd28:	20 00                	and    %al,(%eax)
 804fd2a:	00 00                	add    %al,(%eax)
 804fd2c:	c8 04 00 00          	enter  $0x4,$0x0
 804fd30:	ee                   	out    %al,(%dx)
 804fd31:	d3 04 08             	roll   %cl,(%eax,%ecx,1)
 804fd34:	1c 00                	sbb    $0x0,%al
 804fd36:	00 00                	add    %al,(%eax)
 804fd38:	00 04 01             	add    %al,(%ecx,%eax,1)
 804fd3b:	00 00                	add    %al,(%eax)
 804fd3d:	00 0e                	add    %cl,(%esi)
 804fd3f:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fd45:	00 00                	add    %al,(%eax)
 804fd47:	0d 05 00 00 00       	or     $0x5,%eax
 804fd4c:	20 00                	and    %al,(%eax)
 804fd4e:	00 00                	add    %al,(%eax)
 804fd50:	ec                   	in     (%dx),%al
 804fd51:	04 00                	add    $0x0,%al
 804fd53:	00 0a                	add    %cl,(%edx)
 804fd55:	d4 04                	aam    $0x4
 804fd57:	08 14 00             	or     %dl,(%eax,%eax,1)
 804fd5a:	00 00                	add    %al,(%eax)
 804fd5c:	00 04 01             	add    %al,(%ecx,%eax,1)
 804fd5f:	00 00                	add    %al,(%eax)
 804fd61:	00 0e                	add    %cl,(%esi)
 804fd63:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fd69:	00 00                	add    %al,(%eax)
 804fd6b:	0d 05 00 00 00       	or     $0x5,%eax
 804fd70:	24 00                	and    $0x0,%al
 804fd72:	00 00                	add    %al,(%eax)
 804fd74:	10 05 00 00 78 d5    	adc    %al,0xd5780000
 804fd7a:	04 08                	add    $0x8,%al
 804fd7c:	0b 01                	or     (%ecx),%eax
 804fd7e:	00 00                	add    %al,(%eax)
 804fd80:	00 04 01             	add    %al,(%ecx,%eax,1)
 804fd83:	00 00                	add    %al,(%eax)
 804fd85:	00 0e                	add    %cl,(%esi)
 804fd87:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fd8d:	00 00                	add    %al,(%eax)
 804fd8f:	0d 05 04 04 00       	or     $0x40405,%eax
 804fd94:	00 00                	add    %al,(%eax)
 804fd96:	83 03 20             	addl   $0x20,(%ebx)
 804fd99:	00 00                	add    %al,(%eax)
 804fd9b:	00 38                	add    %bh,(%eax)
 804fd9d:	05 00 00 84 d6       	add    $0xd6840000,%eax
 804fda2:	04 08                	add    $0x8,%al
 804fda4:	3f                   	aas    
 804fda5:	00 00                	add    %al,(%eax)
 804fda7:	00 00                	add    %al,(%eax)
 804fda9:	04 01                	add    $0x1,%al
 804fdab:	00 00                	add    %al,(%eax)
 804fdad:	00 0e                	add    %cl,(%esi)
 804fdaf:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fdb5:	00 00                	add    %al,(%eax)
 804fdb7:	0d 05 00 00 00       	or     $0x5,%eax
 804fdbc:	20 00                	and    %al,(%eax)
 804fdbe:	00 00                	add    %al,(%eax)
 804fdc0:	5c                   	pop    %esp
 804fdc1:	05 00 00 c4 d6       	add    $0xd6c40000,%eax
 804fdc6:	04 08                	add    $0x8,%al
 804fdc8:	1c 00                	sbb    $0x0,%al
 804fdca:	00 00                	add    %al,(%eax)
 804fdcc:	00 04 01             	add    %al,(%ecx,%eax,1)
 804fdcf:	00 00                	add    %al,(%eax)
 804fdd1:	00 0e                	add    %cl,(%esi)
 804fdd3:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fdd9:	00 00                	add    %al,(%eax)
 804fddb:	0d 05 00 00 00       	or     $0x5,%eax
 804fde0:	20 00                	and    %al,(%eax)
 804fde2:	00 00                	add    %al,(%eax)
 804fde4:	80 05 00 00 e0 d6 04 	addb   $0x4,0xd6e00000
 804fdeb:	08 14 00             	or     %dl,(%eax,%eax,1)
 804fdee:	00 00                	add    %al,(%eax)
 804fdf0:	00 04 01             	add    %al,(%ecx,%eax,1)
 804fdf3:	00 00                	add    %al,(%eax)
 804fdf5:	00 0e                	add    %cl,(%esi)
 804fdf7:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 804fdfd:	00 00                	add    %al,(%eax)
 804fdff:	0d 05 00 00 00       	or     $0x5,%eax

0804fe04 <__FRAME_END__>:
 804fe04:	00 00                	add    %al,(%eax)
	...
Disassembly of section .ctors:

08050000 <__CTOR_LIST__>:
 8050000:	ff                   	(bad)  
 8050001:	ff                   	(bad)  
 8050002:	ff                   	(bad)  
 8050003:	ff a6 92 04 08 ee    	jmp    *-0x11f7fb6e(%esi)
 8050009:	d3 04 08             	roll   %cl,(%eax,%ecx,1)
 805000c:	c4                   	les    (bad),%edx
 805000d:	d6                   	(bad)  
 805000e:	04 08                	add    $0x8,%al

08050010 <__CTOR_END__>:
 8050010:	00 00                	add    %al,(%eax)
	...
Disassembly of section .dtors:

08050014 <__DTOR_LIST__>:
 8050014:	ff                   	(bad)  
 8050015:	ff                   	(bad)  
 8050016:	ff                   	(bad)  
 8050017:	ff 00                	incl   (%eax)

08050018 <__DTOR_END__>:
 8050018:	00 00                	add    %al,(%eax)
	...
Disassembly of section .jcr:

0805001c <__JCR_END__>:
 805001c:	00 00                	add    %al,(%eax)
	...
Disassembly of section .dynamic:

08050020 <_DYNAMIC>:
 8050020:	01 00                	add    %eax,(%eax)
 8050022:	00 00                	add    %al,(%eax)
 8050024:	01 00                	add    %eax,(%eax)
 8050026:	00 00                	add    %al,(%eax)
 8050028:	01 00                	add    %eax,(%eax)
 805002a:	00 00                	add    %al,(%eax)
 805002c:	2a 01                	sub    (%ecx),%al
 805002e:	00 00                	add    %al,(%eax)
 8050030:	01 00                	add    %eax,(%eax)
 8050032:	00 00                	add    %al,(%eax)
 8050034:	4f                   	dec    %edi
 8050035:	01 00                	add    %eax,(%eax)
 8050037:	00 01                	add    %al,(%ecx)
 8050039:	00 00                	add    %al,(%eax)
 805003b:	00 5d 01             	add    %bl,0x1(%ebp)
 805003e:	00 00                	add    %al,(%eax)
 8050040:	01 00                	add    %eax,(%eax)
 8050042:	00 00                	add    %al,(%eax)
 8050044:	2a 02                	sub    (%edx),%al
 8050046:	00 00                	add    %al,(%eax)
 8050048:	0c 00                	or     $0x0,%al
 805004a:	00 00                	add    %al,(%eax)
 805004c:	a0 8b 04 08 0d       	mov    0xd08048b,%al
 8050051:	00 00                	add    %al,(%eax)
 8050053:	00 0c e8             	add    %cl,(%eax,%ebp,8)
 8050056:	04 08                	add    $0x8,%al
 8050058:	04 00                	add    $0x0,%al
 805005a:	00 00                	add    %al,(%eax)
 805005c:	68 81 04 08 f5       	push   $0xf5080481
 8050061:	fe                   	(bad)  
 8050062:	ff 6f c8             	ljmp   *-0x38(%edi)
 8050065:	82                   	(bad)  
 8050066:	04 08                	add    $0x8,%al
 8050068:	05 00 00 00 04       	add    $0x4000000,%eax
 805006d:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 8050070:	06                   	push   %es
 8050071:	00 00                	add    %al,(%eax)
 8050073:	00 f4                	add    %dh,%ah
 8050075:	82                   	(bad)  
 8050076:	04 08                	add    $0x8,%al
 8050078:	0a 00                	or     (%eax),%al
 805007a:	00 00                	add    %al,(%eax)
 805007c:	00 03                	add    %al,(%ebx)
 805007e:	00 00                	add    %al,(%eax)
 8050080:	0b 00                	or     (%eax),%eax
 8050082:	00 00                	add    %al,(%eax)
 8050084:	10 00                	adc    %al,(%eax)
 8050086:	00 00                	add    %al,(%eax)
 8050088:	15 00 00 00 00       	adc    $0x0,%eax
 805008d:	00 00                	add    %al,(%eax)
 805008f:	00 03                	add    %al,(%ebx)
 8050091:	00 00                	add    %al,(%eax)
 8050093:	00 14 01             	add    %dl,(%ecx,%eax,1)
 8050096:	05 08 02 00 00       	add    $0x208,%eax
 805009b:	00 68 01             	add    %ch,0x1(%eax)
 805009e:	00 00                	add    %al,(%eax)
 80500a0:	14 00                	adc    $0x0,%al
 80500a2:	00 00                	add    %al,(%eax)
 80500a4:	11 00                	adc    %eax,(%eax)
 80500a6:	00 00                	add    %al,(%eax)
 80500a8:	17                   	pop    %ss
 80500a9:	00 00                	add    %al,(%eax)
 80500ab:	00 38                	add    %bh,(%eax)
 80500ad:	8a 04 08             	mov    (%eax,%ecx,1),%al
 80500b0:	11 00                	adc    %eax,(%eax)
 80500b2:	00 00                	add    %al,(%eax)
 80500b4:	28 8a 04 08 12 00    	sub    %cl,0x120804(%edx)
 80500ba:	00 00                	add    %al,(%eax)
 80500bc:	10 00                	adc    %al,(%eax)
 80500be:	00 00                	add    %al,(%eax)
 80500c0:	13 00                	adc    (%eax),%eax
 80500c2:	00 00                	add    %al,(%eax)
 80500c4:	08 00                	or     %al,(%eax)
 80500c6:	00 00                	add    %al,(%eax)
 80500c8:	fe                   	(bad)  
 80500c9:	ff                   	(bad)  
 80500ca:	ff 6f 68             	ljmp   *0x68(%edi)
 80500cd:	89 04 08             	mov    %eax,(%eax,%ecx,1)
 80500d0:	ff                   	(bad)  
 80500d1:	ff                   	(bad)  
 80500d2:	ff 6f 04             	ljmp   *0x4(%edi)
 80500d5:	00 00                	add    %al,(%eax)
 80500d7:	00 f0                	add    %dh,%al
 80500d9:	ff                   	(bad)  
 80500da:	ff 6f 04             	ljmp   *0x4(%edi)
 80500dd:	89 04 08             	mov    %eax,(%eax,%ecx,1)
	...
Disassembly of section .got:

08050110 <.got>:
 8050110:	00 00                	add    %al,(%eax)
	...
Disassembly of section .got.plt:

08050114 <_GLOBAL_OFFSET_TABLE_>:
 8050114:	20 00                	and    %al,(%eax)
 8050116:	05 08 00 00 00       	add    $0x8,%eax
 805011b:	00 00                	add    %al,(%eax)
 805011d:	00 00                	add    %al,(%eax)
 805011f:	00 e6                	add    %ah,%dh
 8050121:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 8050124:	f6 8b 04 08 06 8c    	(bad)  -0x73f9f7fc(%ebx)
 805012a:	04 08                	add    $0x8,%al
 805012c:	16                   	push   %ss
 805012d:	8c 04 08             	mov    %es,(%eax,%ecx,1)
 8050130:	26 8c 04 08          	mov    %es,%es:(%eax,%ecx,1)
 8050134:	36 8c 04 08          	mov    %es,%ss:(%eax,%ecx,1)
 8050138:	46                   	inc    %esi
 8050139:	8c 04 08             	mov    %es,(%eax,%ecx,1)
 805013c:	56                   	push   %esi
 805013d:	8c 04 08             	mov    %es,(%eax,%ecx,1)
 8050140:	66                   	data16
 8050141:	8c 04 08             	mov    %es,(%eax,%ecx,1)
 8050144:	76 8c                	jbe    80500d2 <_DYNAMIC+0xb2>
 8050146:	04 08                	add    $0x8,%al
 8050148:	86 8c 04 08 96 8c 04 	xchg   %cl,0x48c9608(%esp,%eax,1)
 805014f:	08 a6 8c 04 08 b6    	or     %ah,-0x49f7fb74(%esi)
 8050155:	8c 04 08             	mov    %es,(%eax,%ecx,1)
 8050158:	c6                   	(bad)  
 8050159:	8c 04 08             	mov    %es,(%eax,%ecx,1)
 805015c:	d6                   	(bad)  
 805015d:	8c 04 08             	mov    %es,(%eax,%ecx,1)
 8050160:	e6 8c                	out    %al,$0x8c
 8050162:	04 08                	add    $0x8,%al
 8050164:	f6 8c 04 08 06 8d 04 	(bad)  0x48d0608(%esp,%eax,1)
 805016b:	08 16                	or     %dl,(%esi)
 805016d:	8d 04 08             	lea    (%eax,%ecx,1),%eax
 8050170:	26 8d 04 08          	lea    %es:(%eax,%ecx,1),%eax
 8050174:	36 8d 04 08          	lea    %ss:(%eax,%ecx,1),%eax
 8050178:	46                   	inc    %esi
 8050179:	8d 04 08             	lea    (%eax,%ecx,1),%eax
 805017c:	56                   	push   %esi
 805017d:	8d 04 08             	lea    (%eax,%ecx,1),%eax
 8050180:	66 8d 04 08          	lea    (%eax,%ecx,1),%ax
 8050184:	76 8d                	jbe    8050113 <_DYNAMIC+0xf3>
 8050186:	04 08                	add    $0x8,%al
 8050188:	86 8d 04 08 96 8d    	xchg   %cl,-0x7269f7fc(%ebp)
 805018e:	04 08                	add    $0x8,%al
 8050190:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
 8050191:	8d 04 08             	lea    (%eax,%ecx,1),%eax
 8050194:	b6 8d                	mov    $0x8d,%dh
 8050196:	04 08                	add    $0x8,%al
 8050198:	c6                   	(bad)  
 8050199:	8d 04 08             	lea    (%eax,%ecx,1),%eax
 805019c:	d6                   	(bad)  
 805019d:	8d 04 08             	lea    (%eax,%ecx,1),%eax
 80501a0:	e6 8d                	out    %al,$0x8d
 80501a2:	04 08                	add    $0x8,%al
 80501a4:	f6 8d 04 08 06 8e    	(bad)  -0x71f9f7fc(%ebp)
 80501aa:	04 08                	add    $0x8,%al
 80501ac:	16                   	push   %ss
 80501ad:	8e 04 08             	mov    (%eax,%ecx,1),%es
 80501b0:	26 8e 04 08          	mov    %es:(%eax,%ecx,1),%es
 80501b4:	36 8e 04 08          	mov    %ss:(%eax,%ecx,1),%es
 80501b8:	46                   	inc    %esi
 80501b9:	8e 04 08             	mov    (%eax,%ecx,1),%es
 80501bc:	56                   	push   %esi
 80501bd:	8e 04 08             	mov    (%eax,%ecx,1),%es
 80501c0:	66                   	data16
 80501c1:	8e 04 08             	mov    (%eax,%ecx,1),%es
 80501c4:	76 8e                	jbe    8050154 <_GLOBAL_OFFSET_TABLE_+0x40>
 80501c6:	04 08                	add    $0x8,%al
 80501c8:	86 8e 04 08 96 8e    	xchg   %cl,-0x7169f7fc(%esi)
 80501ce:	04 08                	add    $0x8,%al
 80501d0:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
 80501d1:	8e 04 08             	mov    (%eax,%ecx,1),%es
Disassembly of section .data:

080501e0 <__data_start>:
 80501e0:	00 00                	add    %al,(%eax)
	...

080501e4 <__dso_handle>:
 80501e4:	00 00                	add    %al,(%eax)
	...

080501e8 <p.5841>:
 80501e8:	18 00                	sbb    %al,(%eax)
 80501ea:	05 08 00 00 00       	add    $0x8,%eax
	...

08050200 <planhorizon>:
 8050200:	0a 00                	or     (%eax),%al
	...

08050204 <agecoefficient>:
 8050204:	00 00                	add    %al,(%eax)
 8050206:	00 00                	add    %al,(%eax)
 8050208:	00 00                	add    %al,(%eax)
 805020a:	80 3f 00             	cmpb   $0x0,(%edi)
 805020d:	00 00                	add    %al,(%eax)
 805020f:	3f                   	aas    
 8050210:	cd cc                	int    $0xcc
 8050212:	cc                   	int3   
 8050213:	3d 00 00 00 00       	cmp    $0x0,%eax
	...

08050220 <customer_info>:
 8050220:	00 80 bb 45 00 40    	add    %al,0x400045bb(%eax)
 8050226:	1c 46                	sbb    $0x46,%al
 8050228:	00 40 83             	add    %al,-0x7d(%eax)
 805022b:	45                   	inc    %ebp
 805022c:	00 00                	add    %al,(%eax)
 805022e:	48                   	dec    %eax
 805022f:	46                   	inc    %esi
 8050230:	3d 0a 57 3f 00       	cmp    $0x3f570a,%eax
 8050235:	00 80 3f 9a 99 99    	add    %al,-0x666665c1(%eax)
 805023b:	3e                   	ds
 805023c:	cd cc                	int    $0xcc
 805023e:	cc                   	int3   
 805023f:	3d cd cc 4c 3f       	cmp    $0x3f4ccccd,%eax
	...

08050260 <costdatamatrix>:
 8050260:	00 41 1c             	add    %al,0x1c(%ecx)
 8050263:	43                   	inc    %ebx
 8050264:	87 a7 d6 41 00 02    	xchg   %esp,0x20041d6(%edi)
 805026a:	ba 42 0b b4 d1       	mov    $0xd1b40b42,%edx
 805026f:	42                   	inc    %edx
 8050270:	83 af 14 42 55 9e a4 	subl   $0xffffffa4,-0x61aabdec(%edi)
 8050277:	40                   	inc    %eax
 8050278:	47                   	inc    %edi
 8050279:	5f                   	pop    %edi
 805027a:	e0 41                	loopne 80502bd <costdatamatrix+0x5d>
 805027c:	8e c7                	mov    %edi,%es
 805027e:	ee                   	out    %al,(%dx)
 805027f:	41                   	inc    %ecx
 8050280:	fe                   	(bad)  
 8050281:	d4 9f                	aam    $0xffffff9f
 8050283:	41                   	inc    %ecx
 8050284:	19 ca                	sbb    %ecx,%edx
 8050286:	17                   	pop    %ss
 8050287:	40                   	inc    %eax
 8050288:	6f                   	outsl  %ds:(%esi),(%dx)
 8050289:	1c 5b                	sbb    $0x5b,%al
 805028b:	41                   	inc    %ecx
 805028c:	a1 80 6e 41 2c       	mov    0x2c416e80,%eax
 8050291:	74 b0                	je     8050243 <customer_info+0x23>
 8050293:	42                   	inc    %edx
 8050294:	f9                   	stc    
 8050295:	53                   	push   %ebx
 8050296:	04 41                	add    $0x41,%al
 8050298:	32 bb 6a 42 9d 9e    	xor    -0x6162bd96(%ebx),%bh
 805029e:	80 42 e9 a6          	addb   $0xa6,-0x17(%edx)
 80502a2:	d8 41 82             	fadds  -0x7e(%ecx)
 80502a5:	c2 e4 3f             	ret    $0x3fe4
 80502a8:	dd 5a 86             	fstpl  -0x7a(%edx)
 80502ab:	41                   	inc    %ecx
 80502ac:	d2 d1                	rcl    %cl,%cl
 80502ae:	95                   	xchg   %eax,%ebp
 80502af:	41                   	inc    %ecx
 80502b0:	9f                   	lahf   
 80502b1:	7b 82                	jnp    8050235 <customer_info+0x15>
 80502b3:	43                   	inc    %ebx
 80502b4:	c0 e8 8f             	shr    $0x8f,%al
 80502b7:	40                   	inc    %eax
 80502b8:	c1                   	(bad)  
 80502b9:	76 0b                	jbe    80502c6 <costdatamatrix+0x66>
 80502bb:	43                   	inc    %ebx
 80502bc:	cd e3                	int    $0xe3
 80502be:	21 43 8e             	and    %eax,-0x72(%ebx)
 80502c1:	46                   	inc    %esi
 80502c2:	34 42                	xor    $0x42,%al
 80502c4:	48                   	dec    %eax
 80502c5:	92                   	xchg   %eax,%edx
 80502c6:	a3 40 b5 7e f1       	mov    %eax,0xf17eb540
 80502cb:	41                   	inc    %ecx
 80502cc:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
 80502cd:	2d 04 42 75 13       	sub    $0x13754204,%eax
 80502d2:	0e                   	push   %cs
 80502d3:	42                   	inc    %edx
 80502d4:	68 95 0e 3f 0e       	push   $0xe3f0e95
 80502d9:	07                   	pop    %es
 80502da:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 80502db:	41                   	inc    %ecx
 80502dc:	86 31                	xchg   %dh,(%ecx)
 80502de:	ba 41 ba 09 e3       	mov    $0xe309ba41,%edx
 80502e3:	42                   	inc    %edx
 80502e4:	63 d9                	arpl   %bx,%cx
 80502e6:	e3 3f                	jecxz  8050327 <envdatamatrix+0x7>
 80502e8:	ef                   	out    %eax,(%dx)
 80502e9:	0e                   	push   %cs
 80502ea:	83 42 d8 c4          	addl   $0xffffffc4,-0x28(%edx)
 80502ee:	94                   	xchg   %eax,%esp
 80502ef:	42                   	inc    %edx
 80502f0:	75 13                	jne    8050305 <costdatamatrix+0xa5>
 80502f2:	2a 42 04             	sub    0x4(%edx),%al
 80502f5:	af                   	scas   %es:(%edi),%eax
 80502f6:	2a 3f                	sub    (%edi),%bh
 80502f8:	8d 5a c4             	lea    -0x3c(%edx),%ebx
 80502fb:	41                   	inc    %ecx
 80502fc:	54                   	push   %esp
 80502fd:	e3 de                	jecxz  80502dd <costdatamatrix+0x7d>
 80502ff:	41                   	inc    %ecx
 8050300:	9f                   	lahf   
 8050301:	ab                   	stos   %eax,%es:(%edi)
 8050302:	73 41                	jae    8050345 <envdatamatrix+0x25>
 8050304:	43                   	inc    %ebx
 8050305:	e4 05                	in     $0x5,%al
 8050307:	40                   	inc    %eax
 8050308:	42                   	inc    %edx
 8050309:	63 2d 41 f7 1b 3b    	arpl   %bp,0x3b1bf741
 805030f:	41                   	inc    %ecx
 8050310:	33 c4                	xor    %esp,%eax
 8050312:	bb 41 cf 66 6d       	mov    $0x6d66cf41,%ebx
 8050317:	40                   	inc    %eax
 8050318:	b4 48                	mov    $0x48,%ah
 805031a:	89 41 11             	mov    %eax,0x11(%ecx)
 805031d:	47                   	inc    %edi
 805031e:	93                   	xchg   %eax,%ebx
 805031f:	41                   	inc    %ecx

08050320 <envdatamatrix>:
 8050320:	f6 78 8f             	idivb  -0x71(%eax)
 8050323:	43                   	inc    %ebx
 8050324:	31 c8                	xor    %ecx,%eax
 8050326:	99                   	cltd   
 8050327:	42                   	inc    %edx
 8050328:	9e                   	sahf   
 8050329:	6f                   	outsl  %ds:(%esi),(%dx)
 805032a:	a5                   	movsl  %ds:(%esi),%es:(%edi)
 805032b:	42                   	inc    %edx
 805032c:	08 4c 21 43          	or     %cl,0x43(%ecx)
 8050330:	0a 17                	or     (%edi),%dl
 8050332:	a3 42 33 33 53       	mov    %eax,0x53333342
 8050337:	42                   	inc    %edx
 8050338:	7d 3f                	jge    8050379 <envdatamatrix+0x59>
 805033a:	57                   	push   %edi
 805033b:	42                   	inc    %edx
 805033c:	91                   	xchg   %eax,%ecx
 805033d:	6d                   	insl   (%dx),%es:(%edi)
 805033e:	74 42                	je     8050382 <envdatamatrix+0x62>
 8050340:	b2 1d                	mov    $0x1d,%dl
 8050342:	8c 42 dd             	mov    %es,-0x23(%edx)
 8050345:	24 37                	and    $0x37,%al
 8050347:	42                   	inc    %edx
 8050348:	8d 97 38 42 a2 45    	lea    0x45a24238(%edi),%edx
 805034e:	5c                   	pop    %esp
 805034f:	42                   	inc    %edx
 8050350:	7b 54                	jnp    80503a6 <envdatamatrix+0x86>
 8050352:	aa                   	stos   %al,%es:(%edi)
 8050353:	42                   	inc    %edx
 8050354:	64 3b 45 42          	cmp    %fs:0x42(%ebp),%eax
 8050358:	0e                   	push   %cs
 8050359:	ad                   	lods   %ds:(%esi),%eax
 805035a:	4c                   	dec    %esp
 805035b:	42                   	inc    %edx
 805035c:	62 90 75 42 f4 fd    	bound  %edx,-0x20bbd8b(%eax)
 8050362:	94                   	xchg   %eax,%esp
 8050363:	42                   	inc    %edx
 8050364:	64 3b 45 42          	cmp    %fs:0x42(%ebp),%eax
 8050368:	46                   	inc    %esi
 8050369:	b6 46                	mov    $0x46,%dh
 805036b:	42                   	inc    %edx
 805036c:	83 40 62 42          	addl   $0x42,0x62(%eax)
 8050370:	00 a0 53 43 73 68    	add    %ah,0x68734353(%eax)
 8050376:	e1 41                	loope  80503b9 <envdatamatrix+0x99>
 8050378:	23 db                	and    %ebx,%ebx
 805037a:	e8 41 23 db 58       	call   60e026c0 <_end+0x58db1ee0>
 805037f:	42                   	inc    %edx
 8050380:	b4 08                	mov    $0x8,%ah
 8050382:	67 43                	addr16 inc %ebx
 8050384:	a0 1a d9 41 37       	mov    0x3741d91a,%al
 8050389:	09 36                	or     %esi,(%esi)
 805038b:	42                   	inc    %edx
 805038c:	a8 06                	test   $0x6,%al
 805038e:	da 42 75             	fiaddl 0x75(%edx)
 8050391:	93                   	xchg   %eax,%ebx
 8050392:	1c 42                	sbb    $0x42,%al
 8050394:	73 68                	jae    80503fe <__bss_start+0x1e>
 8050396:	e1 41                	loope  80503d9 <envdatamatrix+0xb9>
 8050398:	c9                   	leave  
 8050399:	76 e1                	jbe    805037c <envdatamatrix+0x5c>
 805039b:	41                   	inc    %ecx
 805039c:	d5 78                	aad    $0x78
 805039e:	fc                   	cld    
 805039f:	41                   	inc    %ecx
 80503a0:	75 93                	jne    8050335 <envdatamatrix+0x15>
 80503a2:	1c 42                	sbb    $0x42,%al
 80503a4:	73 68                	jae    805040e <__bss_start+0x2e>
 80503a6:	e1 41                	loope  80503e9 <__bss_start+0x9>
 80503a8:	c9                   	leave  
 80503a9:	76 e1                	jbe    805038c <envdatamatrix+0x6c>
 80503ab:	41                   	inc    %ecx
 80503ac:	d5 78                	aad    $0x78
 80503ae:	fc                   	cld    
 80503af:	41                   	inc    %ecx
 80503b0:	75 93                	jne    8050345 <envdatamatrix+0x25>
 80503b2:	1c 42                	sbb    $0x42,%al
 80503b4:	73 68                	jae    805041e <__bss_start+0x3e>
 80503b6:	e1 41                	loope  80503f9 <__bss_start+0x19>
 80503b8:	c9                   	leave  
 80503b9:	76 e1                	jbe    805039c <envdatamatrix+0x7c>
 80503bb:	41                   	inc    %ecx
 80503bc:	d5 78                	aad    $0x78
 80503be:	fc                   	cld    
 80503bf:	41                   	inc    %ecx
 80503c0:	39 f4                	cmp    %esi,%esp
 80503c2:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
 80503c3:	42                   	inc    %edx
 80503c4:	0c 02                	or     $0x2,%al
 80503c6:	1b 40 ba             	sbb    -0x46(%eax),%eax
 80503c9:	49                   	dec    %ecx
 80503ca:	7c 40                	jl     805040c <__bss_start+0x2c>
 80503cc:	96                   	xchg   %eax,%esi
 80503cd:	43                   	inc    %ebx
 80503ce:	31 41 31             	xor    %eax,0x31(%ecx)
 80503d1:	88 11                	mov    %dl,(%ecx)
 80503d3:	42                   	inc    %edx
 80503d4:	6a bc                	push   $0xffffffbc
 80503d6:	90                   	nop    
 80503d7:	40                   	inc    %eax
 80503d8:	3b df                	cmp    %edi,%ebx
 80503da:	0f 41 04 56          	cmovno (%esi,%edx,2),%eax
 80503de:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
 80503df:	41                   	inc    %ecx
Disassembly of section .bss:

080503e0 <std::cout@@GLIBCXX_3.4>:
	...

0805046c <completed.5843>:
	...

08050480 <gpop_size>:
 8050480:	00 00                	add    %al,(%eax)
	...

08050484 <gmax_gen>:
 8050484:	00 00                	add    %al,(%eax)
	...

08050488 <gbest_ever_gen>:
 8050488:	00 00                	add    %al,(%eax)
	...

0805048c <gnum_var>:
 805048c:	00 00                	add    %al,(%eax)
	...

08050490 <gnum_discr_var>:
 8050490:	00 00                	add    %al,(%eax)
	...

08050494 <glchrom>:
 8050494:	00 00                	add    %al,(%eax)
	...

08050498 <gchromsize>:
 8050498:	00 00                	add    %al,(%eax)
	...

0805049c <gcross_type>:
 805049c:	00 00                	add    %al,(%eax)
	...

080504a0 <gx_strategy>:
 80504a0:	00 00                	add    %al,(%eax)
	...

080504a4 <gs_strategy>:
 80504a4:	00 00                	add    %al,(%eax)
	...

080504a8 <gmaxrun>:
 80504a8:	00 00                	add    %al,(%eax)
	...

080504ac <gSHARING>:
 80504ac:	00 00                	add    %al,(%eax)
	...

080504b0 <gREPORT>:
 80504b0:	00 00                	add    %al,(%eax)
	...

080504b4 <gRIGID>:
 80504b4:	00 00                	add    %al,(%eax)
	...

080504b8 <gBINGA>:
 80504b8:	00 00                	add    %al,(%eax)
	...

080504bc <gREALGA>:
 80504bc:	00 00                	add    %al,(%eax)
	...

080504c0 <gREADFILE>:
 80504c0:	00 00                	add    %al,(%eax)
	...

080504c4 <gtourneysize>:
 80504c4:	00 00                	add    %al,(%eax)
	...

080504c8 <gMINM>:
 80504c8:	00 00                	add    %al,(%eax)
	...

080504cc <gnum_threads>:
 80504cc:	00 00                	add    %al,(%eax)
	...

080504d0 <gseed>:
 80504d0:	00 00                	add    %al,(%eax)
	...

080504d4 <gbasic_seed>:
 80504d4:	00 00                	add    %al,(%eax)
	...

080504d8 <gn_distribution_c>:
 80504d8:	00 00                	add    %al,(%eax)
	...

080504dc <gn_distribution_m>:
 80504dc:	00 00                	add    %al,(%eax)
	...

080504e0 <gp_xover>:
 80504e0:	00 00                	add    %al,(%eax)
	...

080504e4 <gp_mutation>:
 80504e4:	00 00                	add    %al,(%eax)
	...

080504e8 <gsum_obj>:
 80504e8:	00 00                	add    %al,(%eax)
	...

080504ec <gavg_obj>:
 80504ec:	00 00                	add    %al,(%eax)
	...

080504f0 <gmax_obj>:
 80504f0:	00 00                	add    %al,(%eax)
	...

080504f4 <gmin_obj>:
	...

08050500 <gminx>:
	...

08050580 <gmaxx>:
	...

08050600 <gx_lower>:
	...

08050680 <gx_upper>:
	...

080506f8 <gsigma_share>:
 80506f8:	00 00                	add    %al,(%eax)
	...

080506fc <goldpop>:
 80506fc:	00 00                	add    %al,(%eax)
	...

08050700 <gnewpop>:
 8050700:	00 00                	add    %al,(%eax)
	...

08050704 <pool>:
	...

08050720 <gbest_ever>:
	...

080507b4 <pool_size>:
 80507b4:	00 00                	add    %al,(%eax)
	...

080507b8 <vmutex>:
 80507b8:	00 00                	add    %al,(%eax)
	...

080507bc <malloc_mutex>:
	...

080507d4 <std::__ioinit>:
 80507d4:	00 00                	add    %al,(%eax)
	...

080507d8 <std::__ioinit>:
 80507d8:	00 00                	add    %al,(%eax)
	...

080507dc <std::__ioinit>:
 80507dc:	00 00                	add    %al,(%eax)
	...
Disassembly of section .comment:

00000000 <.comment>:
   0:	00 47 43             	add    %al,0x43(%edi)
   3:	43                   	inc    %ebx
   4:	3a 20                	cmp    (%eax),%ah
   6:	28 47 4e             	sub    %al,0x4e(%edi)
   9:	55                   	push   %ebp
   a:	29 20                	sub    %esp,(%eax)
   c:	34 2e                	xor    $0x2e,%al
   e:	32 2e                	xor    (%esi),%ch
  10:	34 20                	xor    $0x20,%al
  12:	28 55 62             	sub    %dl,0x62(%ebp)
  15:	75 6e                	jne    85 <_init-0x8048b1b>
  17:	74 75                	je     8e <_init-0x8048b12>
  19:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  1c:	32 2e                	xor    (%esi),%ch
  1e:	34 2d                	xor    $0x2d,%al
  20:	31 75 62             	xor    %esi,0x62(%ebp)
  23:	75 6e                	jne    93 <_init-0x8048b0d>
  25:	74 75                	je     9c <_init-0x8048b04>
  27:	31 29                	xor    %ebp,(%ecx)
  29:	00 00                	add    %al,(%eax)
  2b:	47                   	inc    %edi
  2c:	43                   	inc    %ebx
  2d:	43                   	inc    %ebx
  2e:	3a 20                	cmp    (%eax),%ah
  30:	28 47 4e             	sub    %al,0x4e(%edi)
  33:	55                   	push   %ebp
  34:	29 20                	sub    %esp,(%eax)
  36:	34 2e                	xor    $0x2e,%al
  38:	32 2e                	xor    (%esi),%ch
  3a:	34 20                	xor    $0x20,%al
  3c:	28 55 62             	sub    %dl,0x62(%ebp)
  3f:	75 6e                	jne    af <_init-0x8048af1>
  41:	74 75                	je     b8 <_init-0x8048ae8>
  43:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  46:	32 2e                	xor    (%esi),%ch
  48:	34 2d                	xor    $0x2d,%al
  4a:	31 75 62             	xor    %esi,0x62(%ebp)
  4d:	75 6e                	jne    bd <_init-0x8048ae3>
  4f:	74 75                	je     c6 <_init-0x8048ada>
  51:	31 29                	xor    %ebp,(%ecx)
  53:	00 00                	add    %al,(%eax)
  55:	47                   	inc    %edi
  56:	43                   	inc    %ebx
  57:	43                   	inc    %ebx
  58:	3a 20                	cmp    (%eax),%ah
  5a:	28 47 4e             	sub    %al,0x4e(%edi)
  5d:	55                   	push   %ebp
  5e:	29 20                	sub    %esp,(%eax)
  60:	34 2e                	xor    $0x2e,%al
  62:	32 2e                	xor    (%esi),%ch
  64:	34 20                	xor    $0x20,%al
  66:	28 55 62             	sub    %dl,0x62(%ebp)
  69:	75 6e                	jne    d9 <_init-0x8048ac7>
  6b:	74 75                	je     e2 <_init-0x8048abe>
  6d:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  70:	32 2e                	xor    (%esi),%ch
  72:	34 2d                	xor    $0x2d,%al
  74:	31 75 62             	xor    %esi,0x62(%ebp)
  77:	75 6e                	jne    e7 <_init-0x8048ab9>
  79:	74 75                	je     f0 <_init-0x8048ab0>
  7b:	33 29                	xor    (%ecx),%ebp
  7d:	00 00                	add    %al,(%eax)
  7f:	47                   	inc    %edi
  80:	43                   	inc    %ebx
  81:	43                   	inc    %ebx
  82:	3a 20                	cmp    (%eax),%ah
  84:	28 47 4e             	sub    %al,0x4e(%edi)
  87:	55                   	push   %ebp
  88:	29 20                	sub    %esp,(%eax)
  8a:	34 2e                	xor    $0x2e,%al
  8c:	32 2e                	xor    (%esi),%ch
  8e:	34 20                	xor    $0x20,%al
  90:	28 55 62             	sub    %dl,0x62(%ebp)
  93:	75 6e                	jne    103 <_init-0x8048a9d>
  95:	74 75                	je     10c <_init-0x8048a94>
  97:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  9a:	32 2e                	xor    (%esi),%ch
  9c:	34 2d                	xor    $0x2d,%al
  9e:	31 75 62             	xor    %esi,0x62(%ebp)
  a1:	75 6e                	jne    111 <_init-0x8048a8f>
  a3:	74 75                	je     11a <_init-0x8048a86>
  a5:	33 29                	xor    (%ecx),%ebp
  a7:	00 00                	add    %al,(%eax)
  a9:	47                   	inc    %edi
  aa:	43                   	inc    %ebx
  ab:	43                   	inc    %ebx
  ac:	3a 20                	cmp    (%eax),%ah
  ae:	28 47 4e             	sub    %al,0x4e(%edi)
  b1:	55                   	push   %ebp
  b2:	29 20                	sub    %esp,(%eax)
  b4:	34 2e                	xor    $0x2e,%al
  b6:	32 2e                	xor    (%esi),%ch
  b8:	34 20                	xor    $0x20,%al
  ba:	28 55 62             	sub    %dl,0x62(%ebp)
  bd:	75 6e                	jne    12d <_init-0x8048a73>
  bf:	74 75                	je     136 <_init-0x8048a6a>
  c1:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  c4:	32 2e                	xor    (%esi),%ch
  c6:	34 2d                	xor    $0x2d,%al
  c8:	31 75 62             	xor    %esi,0x62(%ebp)
  cb:	75 6e                	jne    13b <_init-0x8048a65>
  cd:	74 75                	je     144 <_init-0x8048a5c>
  cf:	33 29                	xor    (%ecx),%ebp
  d1:	00 00                	add    %al,(%eax)
  d3:	47                   	inc    %edi
  d4:	43                   	inc    %ebx
  d5:	43                   	inc    %ebx
  d6:	3a 20                	cmp    (%eax),%ah
  d8:	28 47 4e             	sub    %al,0x4e(%edi)
  db:	55                   	push   %ebp
  dc:	29 20                	sub    %esp,(%eax)
  de:	34 2e                	xor    $0x2e,%al
  e0:	32 2e                	xor    (%esi),%ch
  e2:	34 20                	xor    $0x20,%al
  e4:	28 55 62             	sub    %dl,0x62(%ebp)
  e7:	75 6e                	jne    157 <_init-0x8048a49>
  e9:	74 75                	je     160 <_init-0x8048a40>
  eb:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  ee:	32 2e                	xor    (%esi),%ch
  f0:	34 2d                	xor    $0x2d,%al
  f2:	31 75 62             	xor    %esi,0x62(%ebp)
  f5:	75 6e                	jne    165 <_init-0x8048a3b>
  f7:	74 75                	je     16e <_init-0x8048a32>
  f9:	33 29                	xor    (%ecx),%ebp
  fb:	00 00                	add    %al,(%eax)
  fd:	47                   	inc    %edi
  fe:	43                   	inc    %ebx
  ff:	43                   	inc    %ebx
 100:	3a 20                	cmp    (%eax),%ah
 102:	28 47 4e             	sub    %al,0x4e(%edi)
 105:	55                   	push   %ebp
 106:	29 20                	sub    %esp,(%eax)
 108:	34 2e                	xor    $0x2e,%al
 10a:	32 2e                	xor    (%esi),%ch
 10c:	34 20                	xor    $0x20,%al
 10e:	28 55 62             	sub    %dl,0x62(%ebp)
 111:	75 6e                	jne    181 <_init-0x8048a1f>
 113:	74 75                	je     18a <_init-0x8048a16>
 115:	20 34 2e             	and    %dh,(%esi,%ebp,1)
 118:	32 2e                	xor    (%esi),%ch
 11a:	34 2d                	xor    $0x2d,%al
 11c:	31 75 62             	xor    %esi,0x62(%ebp)
 11f:	75 6e                	jne    18f <_init-0x8048a11>
 121:	74 75                	je     198 <_init-0x8048a08>
 123:	31 29                	xor    %ebp,(%ecx)
 125:	00 00                	add    %al,(%eax)
 127:	47                   	inc    %edi
 128:	43                   	inc    %ebx
 129:	43                   	inc    %ebx
 12a:	3a 20                	cmp    (%eax),%ah
 12c:	28 47 4e             	sub    %al,0x4e(%edi)
 12f:	55                   	push   %ebp
 130:	29 20                	sub    %esp,(%eax)
 132:	34 2e                	xor    $0x2e,%al
 134:	32 2e                	xor    (%esi),%ch
 136:	34 20                	xor    $0x20,%al
 138:	28 55 62             	sub    %dl,0x62(%ebp)
 13b:	75 6e                	jne    1ab <_init-0x80489f5>
 13d:	74 75                	je     1b4 <_init-0x80489ec>
 13f:	20 34 2e             	and    %dh,(%esi,%ebp,1)
 142:	32 2e                	xor    (%esi),%ch
 144:	34 2d                	xor    $0x2d,%al
 146:	31 75 62             	xor    %esi,0x62(%ebp)
 149:	75 6e                	jne    1b9 <_init-0x80489e7>
 14b:	74 75                	je     1c2 <_init-0x80489de>
 14d:	33 29                	xor    (%ecx),%ebp
 14f:	00 00                	add    %al,(%eax)
 151:	47                   	inc    %edi
 152:	43                   	inc    %ebx
 153:	43                   	inc    %ebx
 154:	3a 20                	cmp    (%eax),%ah
 156:	28 47 4e             	sub    %al,0x4e(%edi)
 159:	55                   	push   %ebp
 15a:	29 20                	sub    %esp,(%eax)
 15c:	34 2e                	xor    $0x2e,%al
 15e:	32 2e                	xor    (%esi),%ch
 160:	34 20                	xor    $0x20,%al
 162:	28 55 62             	sub    %dl,0x62(%ebp)
 165:	75 6e                	jne    1d5 <_init-0x80489cb>
 167:	74 75                	je     1de <_init-0x80489c2>
 169:	20 34 2e             	and    %dh,(%esi,%ebp,1)
 16c:	32 2e                	xor    (%esi),%ch
 16e:	34 2d                	xor    $0x2d,%al
 170:	31 75 62             	xor    %esi,0x62(%ebp)
 173:	75 6e                	jne    1e3 <_init-0x80489bd>
 175:	74 75                	je     1ec <_init-0x80489b4>
 177:	31 29                	xor    %ebp,(%ecx)
	...
Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	24 00                	and    $0x0,%al
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	8d 00                	lea    (%eax),%eax
   8:	00 00                	add    %al,(%eax)
   a:	04 00                	add    $0x0,%al
   c:	00 00                	add    %al,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	a0 8b 04 08 22       	mov    0x2208048b,%al
  15:	00 00                	add    %al,(%eax)
  17:	00 0c e8             	add    %cl,(%eax,%ebp,8)
  1a:	04 08                	add    $0x8,%al
  1c:	13 00                	adc    (%eax),%eax
	...
  26:	00 00                	add    %al,(%eax)
  28:	24 00                	and    $0x0,%al
  2a:	00 00                	add    %al,(%eax)
  2c:	02 00                	add    (%eax),%al
  2e:	1a 01                	sbb    (%ecx),%al
  30:	00 00                	add    %al,(%eax)
  32:	04 00                	add    $0x0,%al
  34:	00 00                	add    %al,(%eax)
  36:	00 00                	add    %al,(%eax)
  38:	cc                   	int3   
  39:	8b 04 08             	mov    (%eax,%ecx,1),%eax
  3c:	04 00                	add    $0x0,%al
  3e:	00 00                	add    %al,(%eax)
  40:	24 e8                	and    $0xe8,%al
  42:	04 08                	add    $0x8,%al
  44:	04 00                	add    $0x0,%al
	...
Disassembly of section .debug_pubnames:

00000000 <.debug_pubnames>:
   0:	21 00                	and    %eax,(%eax)
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	8d 00                	lea    (%eax),%eax
   c:	00 00                	add    %al,(%eax)
   e:	75 00                	jne    10 <_init-0x8048b90>
  10:	00 00                	add    %al,(%eax)
  12:	5f                   	pop    %edi
  13:	49                   	dec    %ecx
  14:	4f                   	dec    %edi
  15:	5f                   	pop    %edi
  16:	73 74                	jae    8c <_init-0x8048b14>
  18:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
  1f:	64 
  20:	00 00                	add    %al,(%eax)
  22:	00 00                	add    %al,(%eax)
	...
Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	89 00                	mov    %eax,(%eax)
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	04 01                	add    $0x1,%al
   c:	51                   	push   %ecx
   d:	00 00                	add    %al,(%eax)
   f:	00 01                	add    %al,(%ecx)
  11:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
  12:	00 00                	add    %al,(%eax)
  14:	00 75 00             	add    %dh,0x0(%ebp)
  17:	00 00                	add    %al,(%eax)
  19:	d4 8e                	aam    $0xffffff8e
  1b:	04 08                	add    $0x8,%al
  1d:	d4 8e                	aam    $0xffffff8e
  1f:	04 08                	add    $0x8,%al
  21:	00 00                	add    %al,(%eax)
  23:	00 00                	add    %al,(%eax)
  25:	02 01                	add    (%ecx),%al
  27:	08 43 00             	or     %al,0x0(%ebx)
  2a:	00 00                	add    %al,(%eax)
  2c:	02 02                	add    (%edx),%al
  2e:	07                   	pop    %es
  2f:	00 00                	add    %al,(%eax)
  31:	00 00                	add    %al,(%eax)
  33:	02 04 07             	add    (%edi,%eax,1),%al
  36:	36 00 00             	add    %al,%ss:(%eax)
  39:	00 02                	add    %al,(%edx)
  3b:	04 07                	add    $0x7,%al
  3d:	31 00                	xor    %eax,(%eax)
  3f:	00 00                	add    %al,(%eax)
  41:	02 01                	add    (%ecx),%al
  43:	06                   	push   %es
  44:	45                   	inc    %ebp
  45:	00 00                	add    %al,(%eax)
  47:	00 02                	add    %al,(%edx)
  49:	02 05 13 00 00 00    	add    0x13,%al
  4f:	03 04 05 69 6e 74 00 	add    0x746e69(,%eax,1),%eax
  56:	02 08                	add    (%eax),%cl
  58:	05 ad 00 00 00       	add    $0xad,%eax
  5d:	02 08                	add    (%eax),%cl
  5f:	07                   	pop    %es
  60:	2c 00                	sub    $0x0,%al
  62:	00 00                	add    %al,(%eax)
  64:	02 04 05 b2 00 00 00 	add    0xb2(,%eax,1),%al
  6b:	04 04                	add    $0x4,%al
  6d:	07                   	pop    %es
  6e:	02 01                	add    (%ecx),%al
  70:	06                   	push   %es
  71:	4c                   	dec    %esp
  72:	00 00                	add    %al,(%eax)
  74:	00 05 1d 00 00 00    	add    %al,0x1d
  7a:	01 19                	add    %ebx,(%ecx)
  7c:	87 00                	xchg   %eax,(%eax)
  7e:	00 00                	add    %al,(%eax)
  80:	01 05 03 2c e8 04    	add    %eax,0x4e82c03
  86:	08 06                	or     %al,(%esi)
  88:	4f                   	dec    %edi
  89:	00 00                	add    %al,(%eax)
  8b:	00 00                	add    %al,(%eax)
  8d:	89 00                	mov    %eax,(%eax)
  8f:	00 00                	add    %al,(%eax)
  91:	02 00                	add    (%eax),%al
  93:	4b                   	dec    %ebx
  94:	00 00                	add    %al,(%eax)
  96:	00 04 01             	add    %al,(%ecx,%eax,1)
  99:	27                   	daa    
  9a:	00 00                	add    %al,(%eax)
  9c:	00 00                	add    %al,(%eax)
  9e:	00 00                	add    %al,(%eax)
  a0:	00 2f                	add    %ch,(%edi)
  a2:	62 75 69             	bound  %esi,0x69(%ebp)
  a5:	6c                   	insb   (%dx),%es:(%edi)
  a6:	64                   	fs
  a7:	2f                   	das    
  a8:	62 75 69             	bound  %esi,0x69(%ebp)
  ab:	6c                   	insb   (%dx),%es:(%edi)
  ac:	64                   	fs
  ad:	64                   	fs
  ae:	2f                   	das    
  af:	67 6c                	addr16 insb (%dx),%es:(%di)
  b1:	69 62 63 2d 32 2e 37 	imul   $0x372e322d,0x63(%edx),%esp
  b8:	2f                   	das    
  b9:	62 75 69             	bound  %esi,0x69(%ebp)
  bc:	6c                   	insb   (%dx),%es:(%edi)
  bd:	64                   	fs
  be:	2d 74 72 65 65       	sub    $0x65657274,%eax
  c3:	2f                   	das    
  c4:	69 33 38 36 2d 6c    	imul   $0x6c2d3638,(%ebx),%esi
  ca:	69 62 63 2f 63 73 75 	imul   $0x7573632f,0x63(%edx),%esp
  d1:	2f                   	das    
  d2:	63 72 74             	arpl   %si,0x74(%edx)
  d5:	69 2e 53 00 2f 62    	imul   $0x622f0053,(%esi),%ebp
  db:	75 69                	jne    146 <_init-0x8048a5a>
  dd:	6c                   	insb   (%dx),%es:(%edi)
  de:	64                   	fs
  df:	2f                   	das    
  e0:	62 75 69             	bound  %esi,0x69(%ebp)
  e3:	6c                   	insb   (%dx),%es:(%edi)
  e4:	64                   	fs
  e5:	64                   	fs
  e6:	2f                   	das    
  e7:	67 6c                	addr16 insb (%dx),%es:(%di)
  e9:	69 62 63 2d 32 2e 37 	imul   $0x372e322d,0x63(%edx),%esp
  f0:	2f                   	das    
  f1:	62 75 69             	bound  %esi,0x69(%ebp)
  f4:	6c                   	insb   (%dx),%es:(%edi)
  f5:	64                   	fs
  f6:	2d 74 72 65 65       	sub    $0x65657274,%eax
  fb:	2f                   	das    
  fc:	67 6c                	addr16 insb (%dx),%es:(%di)
  fe:	69 62 63 2d 32 2e 37 	imul   $0x372e322d,0x63(%edx),%esp
 105:	2f                   	das    
 106:	63 73 75             	arpl   %si,0x75(%ebx)
 109:	00 47 4e             	add    %al,0x4e(%edi)
 10c:	55                   	push   %ebp
 10d:	20 41 53             	and    %al,0x53(%ecx)
 110:	20 32                	and    %dh,(%edx)
 112:	2e 31 38             	xor    %edi,%cs:(%eax)
 115:	2e 30 00             	xor    %al,%cs:(%eax)
 118:	01 80 89 00 00 00    	add    %eax,0x89(%eax)
 11e:	02 00                	add    (%eax),%al
 120:	5d                   	pop    %ebp
 121:	00 00                	add    %al,(%eax)
 123:	00 04 01             	add    %al,(%ecx,%eax,1)
 126:	ad                   	lods   %ds:(%esi),%eax
 127:	00 00                	add    %al,(%eax)
 129:	00 20                	add    %ah,(%eax)
 12b:	00 00                	add    %al,(%eax)
 12d:	00 2f                	add    %ch,(%edi)
 12f:	62 75 69             	bound  %esi,0x69(%ebp)
 132:	6c                   	insb   (%dx),%es:(%edi)
 133:	64                   	fs
 134:	2f                   	das    
 135:	62 75 69             	bound  %esi,0x69(%ebp)
 138:	6c                   	insb   (%dx),%es:(%edi)
 139:	64                   	fs
 13a:	64                   	fs
 13b:	2f                   	das    
 13c:	67 6c                	addr16 insb (%dx),%es:(%di)
 13e:	69 62 63 2d 32 2e 37 	imul   $0x372e322d,0x63(%edx),%esp
 145:	2f                   	das    
 146:	62 75 69             	bound  %esi,0x69(%ebp)
 149:	6c                   	insb   (%dx),%es:(%edi)
 14a:	64                   	fs
 14b:	2d 74 72 65 65       	sub    $0x65657274,%eax
 150:	2f                   	das    
 151:	69 33 38 36 2d 6c    	imul   $0x6c2d3638,(%ebx),%esi
 157:	69 62 63 2f 63 73 75 	imul   $0x7573632f,0x63(%edx),%esp
 15e:	2f                   	das    
 15f:	63 72 74             	arpl   %si,0x74(%edx)
 162:	6e                   	outsb  %ds:(%esi),(%dx)
 163:	2e                   	cs
 164:	53                   	push   %ebx
 165:	00 2f                	add    %ch,(%edi)
 167:	62 75 69             	bound  %esi,0x69(%ebp)
 16a:	6c                   	insb   (%dx),%es:(%edi)
 16b:	64                   	fs
 16c:	2f                   	das    
 16d:	62 75 69             	bound  %esi,0x69(%ebp)
 170:	6c                   	insb   (%dx),%es:(%edi)
 171:	64                   	fs
 172:	64                   	fs
 173:	2f                   	das    
 174:	67 6c                	addr16 insb (%dx),%es:(%di)
 176:	69 62 63 2d 32 2e 37 	imul   $0x372e322d,0x63(%edx),%esp
 17d:	2f                   	das    
 17e:	62 75 69             	bound  %esi,0x69(%ebp)
 181:	6c                   	insb   (%dx),%es:(%edi)
 182:	64                   	fs
 183:	2d 74 72 65 65       	sub    $0x65657274,%eax
 188:	2f                   	das    
 189:	67 6c                	addr16 insb (%dx),%es:(%di)
 18b:	69 62 63 2d 32 2e 37 	imul   $0x372e322d,0x63(%edx),%esp
 192:	2f                   	das    
 193:	63 73 75             	arpl   %si,0x75(%ebx)
 196:	00 47 4e             	add    %al,0x4e(%edi)
 199:	55                   	push   %ebp
 19a:	20 41 53             	and    %al,0x53(%ecx)
 19d:	20 32                	and    %dh,(%edx)
 19f:	2e 31 38             	xor    %edi,%cs:(%eax)
 1a2:	2e 30 00             	xor    %al,%cs:(%eax)
 1a5:	01                   	.byte 0x1
 1a6:	80                   	.byte 0x80
Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%ecx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
   8:	0e                   	push   %cs
   9:	1b 0e                	sbb    (%esi),%ecx
   b:	11 01                	adc    %eax,(%ecx)
   d:	12 01                	adc    (%ecx),%al
   f:	10 06                	adc    %al,(%esi)
  11:	00 00                	add    %al,(%eax)
  13:	02 24 00             	add    (%eax,%eax,1),%ah
  16:	0b 0b                	or     (%ebx),%ecx
  18:	3e 0b 03             	or     %ds:(%ebx),%eax
  1b:	0e                   	push   %cs
  1c:	00 00                	add    %al,(%eax)
  1e:	03 24 00             	add    (%eax,%eax,1),%esp
  21:	0b 0b                	or     (%ebx),%ecx
  23:	3e 0b 03             	or     %ds:(%ebx),%eax
  26:	08 00                	or     %al,(%eax)
  28:	00 04 24             	add    %al,(%esp)
  2b:	00 0b                	add    %cl,(%ebx)
  2d:	0b 3e                	or     (%esi),%edi
  2f:	0b 00                	or     (%eax),%eax
  31:	00 05 34 00 03 0e    	add    %al,0xe030034
  37:	3a 0b                	cmp    (%ebx),%cl
  39:	3b 0b                	cmp    (%ebx),%ecx
  3b:	49                   	dec    %ecx
  3c:	13 3f                	adc    (%edi),%edi
  3e:	0c 02                	or     $0x2,%al
  40:	0a 00                	or     (%eax),%al
  42:	00 06                	add    %al,(%esi)
  44:	26 00 49 13          	add    %cl,%es:0x13(%ecx)
  48:	00 00                	add    %al,(%eax)
  4a:	00 01                	add    %al,(%ecx)
  4c:	11 00                	adc    %eax,(%eax)
  4e:	10 06                	adc    %al,(%esi)
  50:	55                   	push   %ebp
  51:	06                   	push   %es
  52:	03 08                	add    (%eax),%ecx
  54:	1b 08                	sbb    (%eax),%ecx
  56:	25 08 13 05 00       	and    $0x51308,%eax
  5b:	00 00                	add    %al,(%eax)
  5d:	01 11                	add    %edx,(%ecx)
  5f:	00 10                	add    %dl,(%eax)
  61:	06                   	push   %es
  62:	55                   	push   %ebp
  63:	06                   	push   %es
  64:	03 08                	add    (%eax),%ecx
  66:	1b 08                	sbb    (%eax),%ecx
  68:	25 08 13 05 00       	and    $0x51308,%eax
	...
Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	23 00                	and    (%eax),%eax
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	1d 00 00 00 01       	sbb    $0x1000000,%eax
   b:	01 fb                	add    %edi,%ebx
   d:	0e                   	push   %cs
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%eax)
  15:	00 00                	add    %al,(%eax)
  17:	01 00                	add    %eax,(%eax)
  19:	00 01                	add    %al,(%ecx)
  1b:	00 69 6e             	add    %ch,0x6e(%ecx)
  1e:	69 74 2e 63 00 00 00 	imul   $0x0,0x63(%esi,%ebp,1),%esi
  25:	00 
  26:	00 82 00 00 00 02    	add    %al,0x2000000(%edx)
  2c:	00 4e 00             	add    %cl,0x0(%esi)
  2f:	00 00                	add    %al,(%eax)
  31:	01 01                	add    %eax,(%ecx)
  33:	fb                   	sti    
  34:	0e                   	push   %cs
  35:	0d 00 01 01 01       	or     $0x1010100,%eax
  3a:	01 00                	add    %eax,(%eax)
  3c:	00 00                	add    %al,(%eax)
  3e:	01 00                	add    %eax,(%eax)
  40:	00 01                	add    %al,(%ecx)
  42:	2f                   	das    
  43:	62 75 69             	bound  %esi,0x69(%ebp)
  46:	6c                   	insb   (%dx),%es:(%edi)
  47:	64                   	fs
  48:	2f                   	das    
  49:	62 75 69             	bound  %esi,0x69(%ebp)
  4c:	6c                   	insb   (%dx),%es:(%edi)
  4d:	64                   	fs
  4e:	64                   	fs
  4f:	2f                   	das    
  50:	67 6c                	addr16 insb (%dx),%es:(%di)
  52:	69 62 63 2d 32 2e 37 	imul   $0x372e322d,0x63(%edx),%esp
  59:	2f                   	das    
  5a:	62 75 69             	bound  %esi,0x69(%ebp)
  5d:	6c                   	insb   (%dx),%es:(%edi)
  5e:	64                   	fs
  5f:	2d 74 72 65 65       	sub    $0x65657274,%eax
  64:	2f                   	das    
  65:	69 33 38 36 2d 6c    	imul   $0x6c2d3638,(%ebx),%esi
  6b:	69 62 63 2f 63 73 75 	imul   $0x7573632f,0x63(%edx),%esp
  72:	00 00                	add    %al,(%eax)
  74:	63 72 74             	arpl   %si,0x74(%edx)
  77:	69 2e 53 00 01 00    	imul   $0x10053,(%esi),%ebp
  7d:	00 00                	add    %al,(%eax)
  7f:	00 05 02 a0 8b 04    	add    %al,0x48ba002
  85:	08 03                	or     %al,(%ebx)
  87:	0e                   	push   %cs
  88:	01 21                	add    %esp,(%ecx)
  8a:	2f                   	das    
  8b:	21 3d 5a 21 67 67    	and    %edi,0x6767215a
  91:	2f                   	das    
  92:	2f                   	das    
  93:	02 05 00 01 01 00    	add    0x10100,%al
  99:	05 02 0c e8 04       	add    $0x4e80c02,%eax
  9e:	08 03                	or     %al,(%ebx)
  a0:	28 01                	sub    %al,(%ecx)
  a2:	21 2f                	and    %ebp,(%edi)
  a4:	21 3d 5a 21 02 06    	and    %edi,0x602215a
  aa:	00 01                	add    %al,(%ecx)
  ac:	01 78 00             	add    %edi,0x0(%eax)
  af:	00 00                	add    %al,(%eax)
  b1:	02 00                	add    (%eax),%al
  b3:	4e                   	dec    %esi
  b4:	00 00                	add    %al,(%eax)
  b6:	00 01                	add    %al,(%ecx)
  b8:	01 fb                	add    %edi,%ebx
  ba:	0e                   	push   %cs
  bb:	0d 00 01 01 01       	or     $0x1010100,%eax
  c0:	01 00                	add    %eax,(%eax)
  c2:	00 00                	add    %al,(%eax)
  c4:	01 00                	add    %eax,(%eax)
  c6:	00 01                	add    %al,(%ecx)
  c8:	2f                   	das    
  c9:	62 75 69             	bound  %esi,0x69(%ebp)
  cc:	6c                   	insb   (%dx),%es:(%edi)
  cd:	64                   	fs
  ce:	2f                   	das    
  cf:	62 75 69             	bound  %esi,0x69(%ebp)
  d2:	6c                   	insb   (%dx),%es:(%edi)
  d3:	64                   	fs
  d4:	64                   	fs
  d5:	2f                   	das    
  d6:	67 6c                	addr16 insb (%dx),%es:(%di)
  d8:	69 62 63 2d 32 2e 37 	imul   $0x372e322d,0x63(%edx),%esp
  df:	2f                   	das    
  e0:	62 75 69             	bound  %esi,0x69(%ebp)
  e3:	6c                   	insb   (%dx),%es:(%edi)
  e4:	64                   	fs
  e5:	2d 74 72 65 65       	sub    $0x65657274,%eax
  ea:	2f                   	das    
  eb:	69 33 38 36 2d 6c    	imul   $0x6c2d3638,(%ebx),%esi
  f1:	69 62 63 2f 63 73 75 	imul   $0x7573632f,0x63(%edx),%esp
  f8:	00 00                	add    %al,(%eax)
  fa:	63 72 74             	arpl   %si,0x74(%edx)
  fd:	6e                   	outsb  %ds:(%esi),(%dx)
  fe:	2e                   	cs
  ff:	53                   	push   %ebx
 100:	00 01                	add    %al,(%ecx)
 102:	00 00                	add    %al,(%eax)
 104:	00 00                	add    %al,(%eax)
 106:	05 02 cc 8b 04       	add    $0x48bcc02,%eax
 10b:	08 03                	or     %al,(%ebx)
 10d:	09 01                	or     %eax,(%ecx)
 10f:	21 21                	and    %esp,(%ecx)
 111:	21 02                	and    %eax,(%edx)
 113:	01 00                	add    %eax,(%eax)
 115:	01 01                	add    %eax,(%ecx)
 117:	00 05 02 24 e8 04    	add    %al,0x4e82402
 11d:	08 03                	or     %al,(%ebx)
 11f:	14 01                	adc    $0x1,%al
 121:	21 21                	and    %esp,(%ecx)
 123:	21 02                	and    %eax,(%edx)
 125:	01 00                	add    %eax,(%eax)
 127:	01 01                	add    %eax,(%ecx)
Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	73 68                	jae    6a <_init-0x8048b36>
   2:	6f                   	outsl  %ds:(%esi),(%dx)
   3:	72 74                	jb     79 <_init-0x8048b27>
   5:	20 75 6e             	and    %dh,0x6e(%ebp)
   8:	73 69                	jae    73 <_init-0x8048b2d>
   a:	67 6e                	addr16 outsb %ds:(%si),(%dx)
   c:	65 64 20 69 6e       	and    %ch,%fs:%gs:0x6e(%ecx)
  11:	74 00                	je     13 <_init-0x8048b8d>
  13:	73 68                	jae    7d <_init-0x8048b23>
  15:	6f                   	outsl  %ds:(%esi),(%dx)
  16:	72 74                	jb     8c <_init-0x8048b14>
  18:	20 69 6e             	and    %ch,0x6e(%ecx)
  1b:	74 00                	je     1d <_init-0x8048b83>
  1d:	5f                   	pop    %edi
  1e:	49                   	dec    %ecx
  1f:	4f                   	dec    %edi
  20:	5f                   	pop    %edi
  21:	73 74                	jae    97 <_init-0x8048b09>
  23:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
  2a:	64 
  2b:	00 6c 6f 6e          	add    %ch,0x6e(%edi,%ebp,2)
  2f:	67 20 6c 6f          	addr16 and %ch,0x6f(%si)
  33:	6e                   	outsb  %ds:(%esi),(%dx)
  34:	67 20 75 6e          	addr16 and %dh,0x6e(%di)
  38:	73 69                	jae    a3 <_init-0x8048afd>
  3a:	67 6e                	addr16 outsb %ds:(%si),(%dx)
  3c:	65 64 20 69 6e       	and    %ch,%fs:%gs:0x6e(%ecx)
  41:	74 00                	je     43 <_init-0x8048b5d>
  43:	75 6e                	jne    b3 <_init-0x8048aed>
  45:	73 69                	jae    b0 <_init-0x8048af0>
  47:	67 6e                	addr16 outsb %ds:(%si),(%dx)
  49:	65 64 20 63 68       	and    %ah,%fs:%gs:0x68(%ebx)
  4e:	61                   	popa   
  4f:	72 00                	jb     51 <_init-0x8048b4f>
  51:	47                   	inc    %edi
  52:	4e                   	dec    %esi
  53:	55                   	push   %ebp
  54:	20 43 20             	and    %al,0x20(%ebx)
  57:	34 2e                	xor    $0x2e,%al
  59:	32 2e                	xor    (%esi),%ch
  5b:	34 20                	xor    $0x20,%al
  5d:	28 55 62             	sub    %dl,0x62(%ebp)
  60:	75 6e                	jne    d0 <_init-0x8048ad0>
  62:	74 75                	je     d9 <_init-0x8048ac7>
  64:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  67:	32 2e                	xor    (%esi),%ch
  69:	34 2d                	xor    $0x2d,%al
  6b:	31 75 62             	xor    %esi,0x62(%ebp)
  6e:	75 6e                	jne    de <_init-0x8048ac2>
  70:	74 75                	je     e7 <_init-0x8048ab9>
  72:	31 29                	xor    %ebp,(%ecx)
  74:	00 2f                	add    %ch,(%edi)
  76:	62 75 69             	bound  %esi,0x69(%ebp)
  79:	6c                   	insb   (%dx),%es:(%edi)
  7a:	64                   	fs
  7b:	2f                   	das    
  7c:	62 75 69             	bound  %esi,0x69(%ebp)
  7f:	6c                   	insb   (%dx),%es:(%edi)
  80:	64                   	fs
  81:	64                   	fs
  82:	2f                   	das    
  83:	67 6c                	addr16 insb (%dx),%es:(%di)
  85:	69 62 63 2d 32 2e 37 	imul   $0x372e322d,0x63(%edx),%esp
  8c:	2f                   	das    
  8d:	62 75 69             	bound  %esi,0x69(%ebp)
  90:	6c                   	insb   (%dx),%es:(%edi)
  91:	64                   	fs
  92:	2d 74 72 65 65       	sub    $0x65657274,%eax
  97:	2f                   	das    
  98:	67 6c                	addr16 insb (%dx),%es:(%di)
  9a:	69 62 63 2d 32 2e 37 	imul   $0x372e322d,0x63(%edx),%esp
  a1:	2f                   	das    
  a2:	63 73 75             	arpl   %si,0x75(%ebx)
  a5:	00 69 6e             	add    %ch,0x6e(%ecx)
  a8:	69 74 2e 63 00 6c 6f 	imul   $0x6e6f6c00,0x63(%esi,%ebp,1),%esi
  af:	6e 
  b0:	67 20 6c 6f          	addr16 and %ch,0x6f(%si)
  b4:	6e                   	outsb  %ds:(%esi),(%dx)
  b5:	67 20 69 6e          	addr16 and %ch,0x6e(%bx,%di)
  b9:	74 00                	je     bb <_init-0x8048ae5>
Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	ff                   	(bad)  
   1:	ff                   	(bad)  
   2:	ff                   	(bad)  
   3:	ff 00                	incl   (%eax)
   5:	00 00                	add    %al,(%eax)
   7:	00 a0 8b 04 08 c2    	add    %ah,-0x3df7fb75(%eax)
   d:	8b 04 08             	mov    (%eax,%ecx,1),%eax
  10:	0c e8                	or     $0xe8,%al
  12:	04 08                	add    $0x8,%al
  14:	1f                   	pop    %ds
  15:	e8 04 08 00 00       	call   81e <_init-0x8048382>
  1a:	00 00                	add    %al,(%eax)
  1c:	00 00                	add    %al,(%eax)
  1e:	00 00                	add    %al,(%eax)
  20:	ff                   	(bad)  
  21:	ff                   	(bad)  
  22:	ff                   	(bad)  
  23:	ff 00                	incl   (%eax)
  25:	00 00                	add    %al,(%eax)
  27:	00 cc                	add    %cl,%ah
  29:	8b 04 08             	mov    (%eax,%ecx,1),%eax
  2c:	d0 8b 04 08 24 e8    	rorb   -0x17dbf7fc(%ebx)
  32:	04 08                	add    $0x8,%al
  34:	28 e8                	sub    %ch,%al
  36:	04 08                	add    $0x8,%al
	...
